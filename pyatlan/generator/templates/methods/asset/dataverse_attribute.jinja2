
    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        dataverse_entity_qualified_name: str,
    ) -> DataverseAttribute: ...

    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        dataverse_entity_qualified_name: str,
        connection_qualified_name: str,
    ) -> DataverseAttribute: ...

    @classmethod
    @init_guid
    def creator(
        cls,
        *,
        name: str,
        dataverse_entity_qualified_name: str,
        connection_qualified_name: Optional[str] = None,
    ) -> DataverseAttribute:
        validate_required_fields(
            ["name", "dataverse_entity_qualified_name"], [name, dataverse_entity_qualified_name],
        )
        attributes = DataverseAttribute.Attributes.creator(
            name=name,
            dataverse_entity_qualified_name=dataverse_entity_qualified_name,
            connection_qualified_name=connection_qualified_name,
        )
        return cls(attributes=attributes)
