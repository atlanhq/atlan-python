
    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        parent_qualified_name: str,
        parent_type: type,
        order: int,
    ) -> Column: ...

    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        parent_qualified_name: str,
        parent_type: type,
        order: int,
        parent_name: str,
        database_name: str,
        database_qualified_name: str,
        schema_name: str,
        schema_qualified_name: str,
        table_name: str,
        table_qualified_name: str,
        connection_qualified_name: str,
    ) -> Column: ...

    @classmethod
    @init_guid
    def creator(
        cls,
        *,
        name: str,
        parent_qualified_name: str,
        parent_type: type,
        order: int,
        parent_name: Optional[str] = None,
        database_name: Optional[str] = None,
        database_qualified_name: Optional[str] = None,
        schema_name: Optional[str] = None,
        schema_qualified_name: Optional[str] = None,
        table_name: Optional[str] = None,
        table_qualified_name: Optional[str] = None,
        connection_qualified_name: Optional[str] = None,
    ) -> Column:
        return Column(
            attributes=Column.Attributes.create(
                name=name,
                parent_qualified_name=parent_qualified_name,
                parent_type=parent_type,
                order=order,
                parent_name=parent_name,
                database_name=database_name,
                database_qualified_name=database_qualified_name,
                schema_name=schema_name,
                schema_qualified_name=schema_qualified_name,
                table_name=table_name,
                table_qualified_name=table_qualified_name,
                connection_qualified_name=connection_qualified_name,
            )
        )

    @classmethod
    @init_guid
    def create(
        cls, *, name: str, parent_qualified_name: str, parent_type: type, order: int
    ) -> Column:
        warn(
            (
                "This method is deprecated, please use 'creator' "
                "instead, which offers identical functionality."
            ),
            DeprecationWarning,
            stacklevel=2,
        )
        return cls.creator(
            name=name,
            parent_qualified_name=parent_qualified_name,
            parent_type=parent_type,
            order=order,
        )
