
    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        airflow_dag_qualified_name: str,
    ) -> AirflowTask: ...

    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        airflow_dag_qualified_name: str,
        connection_qualified_name: str,
    ) -> AirflowTask: ...

    @classmethod
    @init_guid
    def creator(
        cls,
        *,
        name: str,
        airflow_dag_qualified_name: str,
        connection_qualified_name: Optional[str] = None,
    ) -> AirflowTask:
        validate_required_fields(
            ["name", "airflow_dag_qualified_name"],
            [name, airflow_dag_qualified_name],
        )
        attributes = AirflowTask.Attributes.creator(
            name=name,
            airflow_dag_qualified_name=airflow_dag_qualified_name,
            connection_qualified_name=connection_qualified_name,
        )
        return cls(attributes=attributes)
