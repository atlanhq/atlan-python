
    @overload
    @classmethod
    def creator(cls, asset_qualified_name: str, contract_json: str) -> DataContract: ...

    @overload
    @classmethod
    def creator(
        cls, asset_qualified_name: str, contract_spec: Union[DataContractSpec, str]
    ) -> DataContract: ...

    @classmethod
    @init_guid
    def creator(
        cls,
        *,
        asset_qualified_name: str,
        contract_json: Optional[str] = None,
        contract_spec: Optional[Union[DataContractSpec, str]] = None,
    ) -> DataContract:
        validate_required_fields(
            ["asset_qualified_name"],
            [asset_qualified_name],
        )
        attributes = DataContract.Attributes.creator(
            asset_qualified_name=asset_qualified_name,
            contract_json=contract_json,
            contract_spec=contract_spec,
        )
        return cls(attributes=attributes)
