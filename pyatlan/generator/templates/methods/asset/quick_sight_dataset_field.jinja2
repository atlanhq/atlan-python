
    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        quick_sight_dataset_qualified_name: str,
        quick_sight_id: str,
    ) -> QuickSightDatasetField: ...

    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        quick_sight_dataset_qualified_name: str,
        quick_sight_id: str,
        quick_sight_dataset_field_type: QuickSightDatasetFieldType,
        connection_qualified_name: str,
    ) -> QuickSightDatasetField: ...

    @classmethod
    @init_guid
    def creator(
        cls,
        *,
        name: str,
        quick_sight_id: str,
        quick_sight_dataset_qualified_name: str,
        quick_sight_dataset_field_type: Optional[QuickSightDatasetFieldType] = None,
        connection_qualified_name: Optional[str] = None,
    ) -> QuickSightDatasetField:
        validate_required_fields(
            ["name", "quick_sight_id", "quick_sight_dataset_qualified_name"],
            [name, quick_sight_id, quick_sight_dataset_qualified_name],
        )
        attributes = QuickSightDatasetField.Attributes.creator(
            name=name,
            quick_sight_id=quick_sight_id,
            connection_qualified_name=connection_qualified_name,
            quick_sight_dataset_qualified_name=quick_sight_dataset_qualified_name,
            quick_sight_dataset_field_type=quick_sight_dataset_field_type,
        )
        return cls(attributes=attributes)
