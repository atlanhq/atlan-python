
    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        parent_api_object_qualified_name: Optional[str],
        parent_api_query_qualified_name: Optional[str],
    ) -> APIField: ...

    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        parent_api_object_qualified_name: Optional[str],
        parent_api_query_qualified_name: Optional[str],
        connection_qualified_name: str,
    ) -> APIField: ...

    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        parent_api_object_qualified_name: Optional[str],
        parent_api_query_qualified_name: Optional[str],
        api_query_param_type: APIQueryParamTypeEnum,
    ) -> APIField: ...

    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        parent_api_object_qualified_name: Optional[str],
        parent_api_query_qualified_name: Optional[str],
        api_field_type: str,
        api_field_type_secondary: str,
        api_query_param_type: APIQueryParamTypeEnum,
    ) -> APIField: ...

    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        parent_api_object_qualified_name: Optional[str],
        parent_api_query_qualified_name: Optional[str],
        api_field_type: str,
        api_field_type_secondary: str,
        is_api_object_reference: bool,
        api_query_param_type: APIQueryParamTypeEnum,
    ) -> APIField: ...

    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        parent_api_object_qualified_name: Optional[str],
        parent_api_query_qualified_name: Optional[str],
        api_field_type: str,
        api_field_type_secondary: str,
        is_api_object_reference: bool,
        reference_api_object_qualified_name: str,
        api_query_param_type: APIQueryParamTypeEnum,
    ) -> APIField: ...

    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        parent_api_object_qualified_name: Optional[str],
        parent_api_query_qualified_name: Optional[str],
        connection_qualified_name: str,
        api_field_type: str,
        api_field_type_secondary: str,
        is_api_object_reference: bool,
        reference_api_object_qualified_name: str,
        api_query_param_type: APIQueryParamTypeEnum,
    ) -> APIField: ...

    @classmethod
    @init_guid
    def creator(
        cls,
        *,
        name: str,
        parent_api_object_qualified_name: Optional[str] = None,
        parent_api_query_qualified_name: Optional[str] = None,
        connection_qualified_name: Optional[str] = None,
        api_field_type: Optional[str] = None,
        api_field_type_secondary: Optional[str] = None,
        is_api_object_reference: Optional[bool] = False,
        reference_api_object_qualified_name: Optional[str] = None,
        api_query_param_type: Optional[APIQueryParamTypeEnum] = None,
    ) -> APIField:
        validate_required_fields(["name"], [name])
        # valid checker - for either to have a value ONLY
        if parent_api_object_qualified_name is None or (
            isinstance(parent_api_object_qualified_name, str)
            and not parent_api_object_qualified_name.strip()
        ):
            if parent_api_query_qualified_name is None or (
                isinstance(parent_api_query_qualified_name, str)
                and not parent_api_query_qualified_name.strip()
            ):
                raise ValueError(
                    (
                        "Either parent_api_object_qualified_name or "
                        "parent_api_query_qualified_name requires a valid value"
                    )
                )
        elif (
            isinstance(parent_api_query_qualified_name, str)
            and parent_api_query_qualified_name.strip()
        ):
            raise ValueError(
                "Both parent_api_object_qualified_name and parent_api_query_qualified_name cannot be valid"
            )

        # is api object reference - checker
        if is_api_object_reference:
            if not reference_api_object_qualified_name or (
                isinstance(reference_api_object_qualified_name, str)
                and not reference_api_object_qualified_name.strip()
            ):
                raise ValueError(
                    "Set valid qualified name for reference_api_object_qualified_name"
                )
        else:
            if (
                reference_api_object_qualified_name
                and isinstance(reference_api_object_qualified_name, str)
                and reference_api_object_qualified_name.strip()
            ):
                raise ValueError(
                    "Set is_api_object_reference to true to set reference_api_object_qualified_name"
                )

        attributes = APIField.Attributes.creator(
            name=name,
            parent_api_object_qualified_name=parent_api_object_qualified_name,
            parent_api_query_qualified_name=parent_api_query_qualified_name,
            connection_qualified_name=connection_qualified_name,
            api_field_type=api_field_type,
            api_field_type_secondary=api_field_type_secondary,
            is_api_object_reference=is_api_object_reference,
            reference_api_object_qualified_name=reference_api_object_qualified_name,
            api_query_param_type=api_query_param_type,
        )
        return cls(attributes=attributes)
