
    @classmethod
    @init_guid
    def creator(cls, *, client: AtlanClient, name: str) -> Collection:
        validate_required_fields(["client", "name"], [client, name])
        return cls(attributes=Collection.Attributes.creator(client=client, name=name))

    @classmethod
    def _generate_qualified_name(cls, client: AtlanClient):
        """
        Generate a unique Collection name.

        :param client: connectivity to the Atlan tenant
        as the user who will own the Collection
        :returns: a unique name for the Collection
        """
        try:
            username = client.user.get_current().username
            return f"default/collection/{username}/{uuid4()}"
        except AtlanError as e:
            raise ErrorCode.UNABLE_TO_GENERATE_QN.exception_with_parameters(
                cls.__name__, e
            ) from e
