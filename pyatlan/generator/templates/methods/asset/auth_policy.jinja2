
    @classmethod
    def __create(cls, *, name: str) -> AuthPolicy:
        validate_required_fields(["name"], [name])
        attributes = AuthPolicy.Attributes._Attributes__create(name=name)  # type: ignore[attr-defined]
        return cls(attributes=attributes)

    @classmethod
    @init_guid
    def updater(
        cls: type[SelfAsset],
        qualified_name: str = "",
        name: str = ""
        """
        This method is not available for AuthPolicy.
        Please retrieve the existing policy and then update it in its entirety.
        """,
    ) -> SelfAsset:
        raise NotImplementedError(
            "This method is not available for AuthPolicy. "
            "Please retrieve the existing policy and then update it in its entirety."
        )

    @classmethod
    def create_for_modification(
        cls: type[SelfAsset],
        qualified_name: str = "",
        name: str = ""
        """
        This method is not available for AuthPolicy.
        Please retrieve the existing policy and then update it in its entirety.
        """,
    ) -> SelfAsset:
        warn(
            (
                "This method is deprecated, please use 'updater' "
                "instead, which offers identical functionality."
            ),
            DeprecationWarning,
            stacklevel=2,
        )
        return cls.updater(qualified_name=qualified_name, name=name)
