
    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        connection_qualified_name: str,
    ) -> APIQuery: ...

    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        connection_qualified_name: str,
        api_input_field_count: int,
    ) -> APIQuery: ...

    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        connection_qualified_name: str,
        api_input_field_count: int,
        api_query_output_type: str,
        api_query_output_type_secondary: str,
    ) -> APIQuery: ...

    @overload
    @classmethod
    def creator(
        cls,
        *,
        name: str,
        connection_qualified_name: str,
        api_input_field_count: int,
        api_query_output_type: str,
        api_query_output_type_secondary: str,
        is_object_reference: bool,
        reference_api_object_qualified_name: str,
    ) -> APIQuery: ...

    @classmethod
    @init_guid
    def creator(
        cls,
        *,
        name: str,
        connection_qualified_name: str,
        api_input_field_count: Optional[int] = None,
        api_query_output_type: Optional[str] = None,
        api_query_output_type_secondary: Optional[str] = None,
        is_object_reference: Optional[bool] = False,
        reference_api_object_qualified_name: Optional[str] = None,
    ) -> APIQuery:
        validate_required_fields(
            ["name", "connection_qualified_name"], [name, connection_qualified_name]
        )
        # is api object reference - checker
        if is_object_reference:
            if not reference_api_object_qualified_name or (
                isinstance(reference_api_object_qualified_name, str)
                and not reference_api_object_qualified_name.strip()
            ):
                raise ValueError(
                    "Set valid qualified name for reference_api_object_qualified_name when is_object_reference is true"
                )
        else:
            if (
                reference_api_object_qualified_name
                and isinstance(reference_api_object_qualified_name, str)
                and reference_api_object_qualified_name.strip()
            ):
                raise ValueError(
                    "Set is_object_reference to true to set reference_api_object_qualified_name"
                )

        attributes = APIQuery.Attributes.creator(
            name=name,
            connection_qualified_name=connection_qualified_name,
            api_input_field_count=api_input_field_count,
            api_query_output_type=api_query_output_type,
            api_query_output_type_secondary=api_query_output_type_secondary,
            is_object_reference=is_object_reference,
            reference_api_object_qualified_name=reference_api_object_qualified_name,
        )
        return cls(attributes=attributes)
