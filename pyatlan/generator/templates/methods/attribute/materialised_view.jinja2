
        @classmethod
        @init_guid
        def create(cls, *, name: str, schema_qualified_name: str) -> {{ entity_def.name }}.Attributes:
            if not name:
                raise ValueError("name cannot be blank")
            validate_required_fields(["schema_qualified_name"], [schema_qualified_name])
            fields = schema_qualified_name.split("/")
            connection_qn, connector_name = AtlanConnectorType.get_connector_name(
                schema_qualified_name, "schema_qualified_name", 5
            )
            return {{  entity_def.name }}.Attributes(
                name=name,
                database_name=fields[3],
                connection_qualified_name=connection_qn,
                database_qualified_name=f"{fields[0]}/{fields[1]}/{fields[2]}/{fields[3]}",
                qualified_name=f"{schema_qualified_name}/{name}",
                schema_qualified_name=schema_qualified_name,
                schema_name=fields[4],
                connector_name=connector_name,
                atlan_schema=Schema.ref_by_qualified_name(schema_qualified_name),
            )
