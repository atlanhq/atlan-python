
        @classmethod
        @init_guid
        def create(
            cls, *, name: str, database_qualified_name: str
        ) -> Schema.Attributes:
            if not name:
                raise ValueError("name cannot be blank")
            validate_required_fields(
                ["database_qualified_name"], [database_qualified_name]
            )
            fields = database_qualified_name.split("/")
            connection_qn, connector_name = AtlanConnectorType.get_connector_name(
                database_qualified_name, "database_qualified_name", 4
            )
            return Schema.Attributes(
                name=name,
                database_name=fields[3],
                connection_qualified_name=connection_qn,
                database_qualified_name=database_qualified_name,
                qualified_name=f"{database_qualified_name}/{name}",
                connector_name=connector_name,
                database=Database.ref_by_qualified_name(database_qualified_name),
            )
