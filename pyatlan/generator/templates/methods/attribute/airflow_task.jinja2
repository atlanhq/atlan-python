
        @classmethod
        @init_guid
        def creator(
            cls,
            *,
            name: str,
            airflow_dag_qualified_name: str,
            connection_qualified_name: Optional[str] = None,
        ) -> AirflowTask.Attributes:
            validate_required_fields(
                ["name", "airflow_dag_qualified_name"],
                [name, airflow_dag_qualified_name],
            )
            if connection_qualified_name:
                connector_name = AtlanConnectorType.get_connector_name(
                    connection_qualified_name
                )
            else:
                connection_qn, connector_name = AtlanConnectorType.get_connector_name(
                    airflow_dag_qualified_name, "airflow_dag_qualified_name", 4
                )

            return AirflowTask.Attributes(
                name=name,
                airflow_dag_qualified_name=airflow_dag_qualified_name,
                connection_qualified_name=connection_qualified_name or connection_qn,
                qualified_name=f"{airflow_dag_qualified_name}/{name}",
                connector_name=connector_name,
                airflow_dag=AirflowDag.ref_by_qualified_name(
                    airflow_dag_qualified_name
                ),
            )
