
        @classmethod
        @init_guid
        def create(
            cls,
            *,
            name: str,
            model_qualified_name: str,
            connection_qualified_name: Optional[str] = None,
        ) -> AnaplanList.Attributes:
            validate_required_fields(
                ["name", "model_qualified_name"],
                [name, model_qualified_name],
            )
            if connection_qualified_name:
                connector_name = AtlanConnectorType.get_connector_name(
                    connection_qualified_name
                )
            else:
                connection_qn, connector_name = AtlanConnectorType.get_connector_name(
                    model_qualified_name, "model_qualified_name", 5
                )

            fields = model_qualified_name.split("/")
            workspace_name = fields[3]
            model_name = fields[4]

            return AnaplanList.Attributes(
                name=name,
                qualified_name=f"{model_qualified_name}/{name}",
                connection_qualified_name=connection_qualified_name or connection_qn,
                connector_name=connector_name,
                anaplan_workspace_qualified_name=f"{fields[0]}/{fields[1]}/{fields[2]}/{fields[3]}",
                anaplan_workspace_name=workspace_name,
                anaplan_model_qualified_name=model_qualified_name,
                anaplan_model_name=model_name,
                anaplan_model=AnaplanModel.ref_by_qualified_name(model_qualified_name),
            )
