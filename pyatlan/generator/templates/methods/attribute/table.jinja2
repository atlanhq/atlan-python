
        @classmethod
        @init_guid
        def create(
            cls,
            *,
            name: str,
            schema_qualified_name: str,
            schema_name: Optional[str] = None,
            database_name: Optional[str] = None,
            database_qualified_name: Optional[str] = None,
            connection_qualified_name: Optional[str] = None,
        ) -> Table.Attributes:
            validate_required_fields(
                ["name, schema_qualified_name"], [name, schema_qualified_name]
            )
            fields = schema_qualified_name.split("/")
            if connection_qualified_name:
                connector_name = AtlanConnectorType.get_connector_name(
                    connection_qualified_name
                )
            else:
                connection_qn, connector_name = AtlanConnectorType.get_connector_name(
                    schema_qualified_name, "schema_qualified_name", 5
                )
            return Table.Attributes(
                name=name,
                database_name=database_name or fields[3],
                database_qualified_name=database_qualified_name
                or f"{fields[0]}/{fields[1]}/{fields[2]}/{fields[3]}",
                qualified_name=f"{schema_qualified_name}/{name}",
                schema_qualified_name=schema_qualified_name,
                schema_name=schema_name or fields[4],
                atlan_schema=Schema.ref_by_qualified_name(schema_qualified_name),
                connector_name=connector_name,
                connection_qualified_name=connection_qualified_name or connection_qn,
            )
