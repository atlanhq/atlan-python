
name: Build and upload conda packages

on:
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  conda_deployment_with_new_tag:
    name: Conda deployment of package with Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Conda environment creation and activation
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          environment-file: .conda-envs/build-env.yaml
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true
          channels: conda-forge, defaults
          conda-remove-defaults: true
      
      - name: Get version from version.txt
        id: get_version
        run: |
          PYATLAN_VERSION=$(cat pyatlan/version.txt | tr -d ' \n')
          echo "PYATLAN_VERSION=$PYATLAN_VERSION" >> $GITHUB_ENV
          echo "Building version: $PYATLAN_VERSION"
      
      - name: Install conda-build and anaconda-client
        run: |
          conda config --add channels conda-forge
          conda config --add channels defaults
          conda config --set auto_activate false
          conda install conda-build anaconda-client anaconda-auth -y
      
      - name: Build conda package
        env:
          PYATLAN_VERSION: ${{ env.PYATLAN_VERSION }}
        run: |
          echo "Building conda package with version: $PYATLAN_VERSION"
          conda build .conda-envs/meta.yaml --python ${{ matrix.python-version }} --output-folder /tmp/conda-builds --package-format tar.bz2
      
      - name: Convert to all platforms
        run: |
          # Find the built package
          PACKAGE_PATH=$(find /tmp/conda-builds -name "*.tar.bz2" | head -1)
          if [ -z "$PACKAGE_PATH" ]; then
            echo "No package found to convert"
            exit 1
          fi
          echo "Found package: $PACKAGE_PATH"
          conda convert -p all "$PACKAGE_PATH" -o /tmp/conda-builds
      
      - name: Upload to Anaconda
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          # Find anaconda command
          ANACONDA_CMD=""
          for cmd in anaconda "$CONDA/bin/anaconda" "$CONDA/condabin/anaconda" "$(which anaconda)"; do
            if command -v "$cmd" >/dev/null 2>&1; then
              ANACONDA_CMD="$cmd"
              echo "Found anaconda command: $ANACONDA_CMD"
              break
            fi
          done
          
          if [ -z "$ANACONDA_CMD" ]; then
            echo "anaconda command not found. Installing anaconda-client..."
            conda install anaconda-client anaconda-auth -y
            ANACONDA_CMD="anaconda"
          fi
          
          # Upload all platform packages
          for pkg in /tmp/conda-builds/*/*.tar.bz2; do
            if [ -f "$pkg" ]; then
              echo "Uploading $pkg..."
              $ANACONDA_CMD upload --user atlanhq --label main "$pkg"
            fi
          done
