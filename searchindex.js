Search.setIndex({"docnames": ["asset/accesscontrol", "asset/adls", "asset/adlsaccount", "asset/adlscontainer", "asset/adlsobject", "asset/airflow", "asset/airflowdag", "asset/airflowtask", "asset/api", "asset/apipath", "asset/apispec", "asset/asset", "asset/atlasglossary", "asset/atlasglossarycategory", "asset/atlasglossaryterm", "asset/authpolicy", "asset/authservice", "asset/aws", "asset/azure", "asset/azureeventhub", "asset/azureeventhubconsumergroup", "asset/azureservicebus", "asset/azureservicebusnamespace", "asset/azureservicebustopic", "asset/badge", "asset/bi", "asset/biprocess", "asset/calculationview", "asset/catalog", "asset/cloud", "asset/cognite", "asset/cognite3dmodel", "asset/cogniteasset", "asset/cogniteevent", "asset/cognitefile", "asset/cognitesequence", "asset/cognitetimeseries", "asset/cognos", "asset/cognosdashboard", "asset/cognosdatasource", "asset/cognosexploration", "asset/cognosfile", "asset/cognosfolder", "asset/cognosmodule", "asset/cognospackage", "asset/cognosreport", "asset/collection", "asset/column", "asset/columnprocess", "asset/connection", "asset/cosmosmongodb", "asset/cosmosmongodbcollection", "asset/cosmosmongodbdatabase", "asset/cube", "asset/cubedimension", "asset/cubefield", "asset/cubehierarchy", "asset/database", "asset/datacontract", "asset/datadomain", "asset/datamesh", "asset/dataproduct", "asset/dataquality", "asset/dataset", "asset/datastudio", "asset/datastudioasset", "asset/dbt", "asset/dbtcolumnprocess", "asset/dbtmetric", "asset/dbtmodel", "asset/dbtmodelcolumn", "asset/dbtprocess", "asset/dbtsource", "asset/dbttag", "asset/dbttest", "asset/domo", "asset/domocard", "asset/domodashboard", "asset/domodataset", "asset/domodatasetcolumn", "asset/dynamodb", "asset/dynamodbglobalsecondaryindex", "asset/dynamodblocalsecondaryindex", "asset/dynamodbsecondaryindex", "asset/dynamodbtable", "asset/eventstore", "asset/file", "asset/folder", "asset/function", "asset/gcs", "asset/gcsbucket", "asset/gcsobject", "asset/google", "asset/infrastructure", "asset/insight", "asset/kafka", "asset/kafkaconsumergroup", "asset/kafkatopic", "asset/link", "asset/looker", "asset/lookerdashboard", "asset/lookerexplore", "asset/lookerfield", "asset/lookerfolder", "asset/lookerlook", "asset/lookermodel", "asset/lookerproject", "asset/lookerquery", "asset/lookertile", "asset/lookerview", "asset/materialisedview", "asset/matillion", "asset/matillioncomponent", "asset/matilliongroup", "asset/matillionjob", "asset/matillionproject", "asset/mcincident", "asset/mcmonitor", "asset/metabase", "asset/metabasecollection", "asset/metabasedashboard", "asset/metabasequestion", "asset/metric", "asset/microstrategy", "asset/microstrategyattribute", "asset/microstrategycube", "asset/microstrategydocument", "asset/microstrategydossier", "asset/microstrategyfact", "asset/microstrategymetric", "asset/microstrategyproject", "asset/microstrategyreport", "asset/microstrategyvisualization", "asset/mode", "asset/modechart", "asset/modecollection", "asset/modequery", "asset/modereport", "asset/modeworkspace", "asset/mongodb", "asset/mongodbcollection", "asset/mongodbdatabase", "asset/montecarlo", "asset/multidimensionaldataset", "asset/namespace", "asset/nosql", "asset/objectstore", "asset/persona", "asset/powerbi", "asset/powerbicolumn", "asset/powerbidashboard", "asset/powerbidataflow", "asset/powerbidataset", "asset/powerbidatasource", "asset/powerbimeasure", "asset/powerbipage", "asset/powerbireport", "asset/powerbitable", "asset/powerbitile", "asset/powerbiworkspace", "asset/preset", "asset/presetchart", "asset/presetdashboard", "asset/presetdataset", "asset/presetworkspace", "asset/procedure", "asset/process", "asset/processexecution", "asset/purpose", "asset/qlik", "asset/qlikapp", "asset/qlikchart", "asset/qlikdataset", "asset/qliksheet", "asset/qlikspace", "asset/qlikstream", "asset/query", "asset/quicksight", "asset/quicksightanalysis", "asset/quicksightanalysisvisual", "asset/quicksightdashboard", "asset/quicksightdashboardvisual", "asset/quicksightdataset", "asset/quicksightdatasetfield", "asset/quicksightfolder", "asset/readme", "asset/readmetemplate", "asset/redash", "asset/redashdashboard", "asset/redashquery", "asset/redashvisualization", "asset/referenceable", "asset/resource", "asset/s3", "asset/s3bucket", "asset/s3object", "asset/saas", "asset/salesforce", "asset/salesforcedashboard", "asset/salesforcefield", "asset/salesforceobject", "asset/salesforceorganization", "asset/salesforcereport", "asset/schema", "asset/schemaregistry", "asset/schemaregistrysubject", "asset/sigma", "asset/sigmadataelement", "asset/sigmadataelementfield", "asset/sigmadataset", "asset/sigmadatasetcolumn", "asset/sigmapage", "asset/sigmaworkbook", "asset/sisense", "asset/sisensedashboard", "asset/sisensedatamodel", "asset/sisensedatamodeltable", "asset/sisensefolder", "asset/sisensewidget", "asset/snowflakedynamictable", "asset/snowflakepipe", "asset/snowflakestream", "asset/snowflaketag", "asset/soda", "asset/sodacheck", "asset/spark", "asset/sparkjob", "asset/sql", "asset/stakeholder", "asset/stakeholdertitle", "asset/table", "asset/tableau", "asset/tableaucalculatedfield", "asset/tableaudashboard", "asset/tableaudatasource", "asset/tableaudatasourcefield", "asset/tableauflow", "asset/tableaumetric", "asset/tableauproject", "asset/tableausite", "asset/tableauworkbook", "asset/tableauworksheet", "asset/tablepartition", "asset/tag", "asset/tagattachment", "asset/task", "asset/thoughtspot", "asset/thoughtspotanswer", "asset/thoughtspotcolumn", "asset/thoughtspotdashlet", "asset/thoughtspotliveboard", "asset/thoughtspottable", "asset/thoughtspotview", "asset/thoughtspotworksheet", "asset/view", "asset/workflow", "asset/workflowrun", "assets", "cache/atlan_tag_cache", "cache/custom_metadata_cache", "cache/enum_cache", "cache/group_cache", "cache/role_cache", "cache/user_cache", "caches", "client", "events", "exceptions", "field/boolean_field", "field/custom_metadata_field", "field/keyword_field", "field/keyword_text_field", "field/keyword_text_stemmed_field", "field/numeric_field", "field/numeric_rank_field", "field/relation_field", "field/searchable_field", "field/text_field", "fields", "index", "other_model/atlan_image", "other_model/core", "other_model/custom_metadata", "other_model/group", "other_model/keycloak_events", "other_model/lineage", "other_model/role", "other_model/typedef", "other_model/user", "other_models"], "filenames": ["asset/accesscontrol.rst", "asset/adls.rst", "asset/adlsaccount.rst", "asset/adlscontainer.rst", "asset/adlsobject.rst", "asset/airflow.rst", "asset/airflowdag.rst", "asset/airflowtask.rst", "asset/api.rst", "asset/apipath.rst", "asset/apispec.rst", "asset/asset.rst", "asset/atlasglossary.rst", "asset/atlasglossarycategory.rst", "asset/atlasglossaryterm.rst", "asset/authpolicy.rst", "asset/authservice.rst", "asset/aws.rst", "asset/azure.rst", "asset/azureeventhub.rst", "asset/azureeventhubconsumergroup.rst", "asset/azureservicebus.rst", "asset/azureservicebusnamespace.rst", "asset/azureservicebustopic.rst", "asset/badge.rst", "asset/bi.rst", "asset/biprocess.rst", "asset/calculationview.rst", "asset/catalog.rst", "asset/cloud.rst", "asset/cognite.rst", "asset/cognite3dmodel.rst", "asset/cogniteasset.rst", "asset/cogniteevent.rst", "asset/cognitefile.rst", "asset/cognitesequence.rst", "asset/cognitetimeseries.rst", "asset/cognos.rst", "asset/cognosdashboard.rst", "asset/cognosdatasource.rst", "asset/cognosexploration.rst", "asset/cognosfile.rst", "asset/cognosfolder.rst", "asset/cognosmodule.rst", "asset/cognospackage.rst", "asset/cognosreport.rst", "asset/collection.rst", "asset/column.rst", "asset/columnprocess.rst", "asset/connection.rst", "asset/cosmosmongodb.rst", "asset/cosmosmongodbcollection.rst", "asset/cosmosmongodbdatabase.rst", "asset/cube.rst", "asset/cubedimension.rst", "asset/cubefield.rst", "asset/cubehierarchy.rst", "asset/database.rst", "asset/datacontract.rst", "asset/datadomain.rst", "asset/datamesh.rst", "asset/dataproduct.rst", "asset/dataquality.rst", "asset/dataset.rst", "asset/datastudio.rst", "asset/datastudioasset.rst", "asset/dbt.rst", "asset/dbtcolumnprocess.rst", "asset/dbtmetric.rst", "asset/dbtmodel.rst", "asset/dbtmodelcolumn.rst", "asset/dbtprocess.rst", "asset/dbtsource.rst", "asset/dbttag.rst", "asset/dbttest.rst", "asset/domo.rst", "asset/domocard.rst", "asset/domodashboard.rst", "asset/domodataset.rst", "asset/domodatasetcolumn.rst", "asset/dynamodb.rst", "asset/dynamodbglobalsecondaryindex.rst", "asset/dynamodblocalsecondaryindex.rst", "asset/dynamodbsecondaryindex.rst", "asset/dynamodbtable.rst", "asset/eventstore.rst", "asset/file.rst", "asset/folder.rst", "asset/function.rst", "asset/gcs.rst", "asset/gcsbucket.rst", "asset/gcsobject.rst", "asset/google.rst", "asset/infrastructure.rst", "asset/insight.rst", "asset/kafka.rst", "asset/kafkaconsumergroup.rst", "asset/kafkatopic.rst", "asset/link.rst", "asset/looker.rst", "asset/lookerdashboard.rst", "asset/lookerexplore.rst", "asset/lookerfield.rst", "asset/lookerfolder.rst", "asset/lookerlook.rst", "asset/lookermodel.rst", "asset/lookerproject.rst", "asset/lookerquery.rst", "asset/lookertile.rst", "asset/lookerview.rst", "asset/materialisedview.rst", "asset/matillion.rst", "asset/matillioncomponent.rst", "asset/matilliongroup.rst", "asset/matillionjob.rst", "asset/matillionproject.rst", "asset/mcincident.rst", "asset/mcmonitor.rst", "asset/metabase.rst", "asset/metabasecollection.rst", "asset/metabasedashboard.rst", "asset/metabasequestion.rst", "asset/metric.rst", "asset/microstrategy.rst", "asset/microstrategyattribute.rst", "asset/microstrategycube.rst", "asset/microstrategydocument.rst", "asset/microstrategydossier.rst", "asset/microstrategyfact.rst", "asset/microstrategymetric.rst", "asset/microstrategyproject.rst", "asset/microstrategyreport.rst", "asset/microstrategyvisualization.rst", "asset/mode.rst", "asset/modechart.rst", "asset/modecollection.rst", "asset/modequery.rst", "asset/modereport.rst", "asset/modeworkspace.rst", "asset/mongodb.rst", "asset/mongodbcollection.rst", "asset/mongodbdatabase.rst", "asset/montecarlo.rst", "asset/multidimensionaldataset.rst", "asset/namespace.rst", "asset/nosql.rst", "asset/objectstore.rst", "asset/persona.rst", "asset/powerbi.rst", "asset/powerbicolumn.rst", "asset/powerbidashboard.rst", "asset/powerbidataflow.rst", "asset/powerbidataset.rst", "asset/powerbidatasource.rst", "asset/powerbimeasure.rst", "asset/powerbipage.rst", "asset/powerbireport.rst", "asset/powerbitable.rst", "asset/powerbitile.rst", "asset/powerbiworkspace.rst", "asset/preset.rst", "asset/presetchart.rst", "asset/presetdashboard.rst", "asset/presetdataset.rst", "asset/presetworkspace.rst", "asset/procedure.rst", "asset/process.rst", "asset/processexecution.rst", "asset/purpose.rst", "asset/qlik.rst", "asset/qlikapp.rst", "asset/qlikchart.rst", "asset/qlikdataset.rst", "asset/qliksheet.rst", "asset/qlikspace.rst", "asset/qlikstream.rst", "asset/query.rst", "asset/quicksight.rst", "asset/quicksightanalysis.rst", "asset/quicksightanalysisvisual.rst", "asset/quicksightdashboard.rst", "asset/quicksightdashboardvisual.rst", "asset/quicksightdataset.rst", "asset/quicksightdatasetfield.rst", "asset/quicksightfolder.rst", "asset/readme.rst", "asset/readmetemplate.rst", "asset/redash.rst", "asset/redashdashboard.rst", "asset/redashquery.rst", "asset/redashvisualization.rst", "asset/referenceable.rst", "asset/resource.rst", "asset/s3.rst", "asset/s3bucket.rst", "asset/s3object.rst", "asset/saas.rst", "asset/salesforce.rst", "asset/salesforcedashboard.rst", "asset/salesforcefield.rst", "asset/salesforceobject.rst", "asset/salesforceorganization.rst", "asset/salesforcereport.rst", "asset/schema.rst", "asset/schemaregistry.rst", "asset/schemaregistrysubject.rst", "asset/sigma.rst", "asset/sigmadataelement.rst", "asset/sigmadataelementfield.rst", "asset/sigmadataset.rst", "asset/sigmadatasetcolumn.rst", "asset/sigmapage.rst", "asset/sigmaworkbook.rst", "asset/sisense.rst", "asset/sisensedashboard.rst", "asset/sisensedatamodel.rst", "asset/sisensedatamodeltable.rst", "asset/sisensefolder.rst", "asset/sisensewidget.rst", "asset/snowflakedynamictable.rst", "asset/snowflakepipe.rst", "asset/snowflakestream.rst", "asset/snowflaketag.rst", "asset/soda.rst", "asset/sodacheck.rst", "asset/spark.rst", "asset/sparkjob.rst", "asset/sql.rst", "asset/stakeholder.rst", "asset/stakeholdertitle.rst", "asset/table.rst", "asset/tableau.rst", "asset/tableaucalculatedfield.rst", "asset/tableaudashboard.rst", "asset/tableaudatasource.rst", "asset/tableaudatasourcefield.rst", "asset/tableauflow.rst", "asset/tableaumetric.rst", "asset/tableauproject.rst", "asset/tableausite.rst", "asset/tableauworkbook.rst", "asset/tableauworksheet.rst", "asset/tablepartition.rst", "asset/tag.rst", "asset/tagattachment.rst", "asset/task.rst", "asset/thoughtspot.rst", "asset/thoughtspotanswer.rst", "asset/thoughtspotcolumn.rst", "asset/thoughtspotdashlet.rst", "asset/thoughtspotliveboard.rst", "asset/thoughtspottable.rst", "asset/thoughtspotview.rst", "asset/thoughtspotworksheet.rst", "asset/view.rst", "asset/workflow.rst", "asset/workflowrun.rst", "assets.rst", "cache/atlan_tag_cache.rst", "cache/custom_metadata_cache.rst", "cache/enum_cache.rst", "cache/group_cache.rst", "cache/role_cache.rst", "cache/user_cache.rst", "caches.rst", "client.rst", "events.rst", "exceptions.rst", "field/boolean_field.rst", "field/custom_metadata_field.rst", "field/keyword_field.rst", "field/keyword_text_field.rst", "field/keyword_text_stemmed_field.rst", "field/numeric_field.rst", "field/numeric_rank_field.rst", "field/relation_field.rst", "field/searchable_field.rst", "field/text_field.rst", "fields.rst", "index.rst", "other_model/atlan_image.rst", "other_model/core.rst", "other_model/custom_metadata.rst", "other_model/group.rst", "other_model/keycloak_events.rst", "other_model/lineage.rst", "other_model/role.rst", "other_model/typedef.rst", "other_model/user.rst", "other_models.rst"], "titles": ["AccessControl", "ADLS", "ADLSAccount", "ADLSContainer", "ADLSObject", "Airflow", "AirflowDag", "AirflowTask", "API", "APIPath", "APISpec", "Asset", "AtlasGlossary", "AtlasGlossaryCategory", "AtlasGlossaryTerm", "AuthPolicy", "AuthService", "AWS", "Azure", "AzureEventHub", "AzureEventHubConsumerGroup", "AzureServiceBus", "AzureServiceBusNamespace", "AzureServiceBusTopic", "Badge", "BI", "BIProcess", "CalculationView", "Catalog", "Cloud", "Cognite", "Cognite3DModel", "CogniteAsset", "CogniteEvent", "CogniteFile", "CogniteSequence", "CogniteTimeSeries", "Cognos", "CognosDashboard", "CognosDatasource", "CognosExploration", "CognosFile", "CognosFolder", "CognosModule", "CognosPackage", "CognosReport", "Collection", "Column", "ColumnProcess", "Connection", "CosmosMongoDB", "CosmosMongoDBCollection", "CosmosMongoDBDatabase", "Cube", "CubeDimension", "CubeField", "CubeHierarchy", "Database", "DataContract", "DataDomain", "DataMesh", "DataProduct", "DataQuality", "DataSet", "DataStudio", "DataStudioAsset", "Dbt", "DbtColumnProcess", "DbtMetric", "DbtModel", "DbtModelColumn", "DbtProcess", "DbtSource", "DbtTag", "DbtTest", "Domo", "DomoCard", "DomoDashboard", "DomoDataset", "DomoDatasetColumn", "DynamoDB", "DynamoDBGlobalSecondaryIndex", "DynamoDBLocalSecondaryIndex", "DynamoDBSecondaryIndex", "DynamoDBTable", "EventStore", "File", "Folder", "Function", "GCS", "GCSBucket", "GCSObject", "Google", "Infrastructure", "Insight", "Kafka", "KafkaConsumerGroup", "KafkaTopic", "Link", "Looker", "LookerDashboard", "LookerExplore", "LookerField", "LookerFolder", "LookerLook", "LookerModel", "LookerProject", "LookerQuery", "LookerTile", "LookerView", "MaterialisedView", "Matillion", "MatillionComponent", "MatillionGroup", "MatillionJob", "MatillionProject", "MCIncident", "MCMonitor", "Metabase", "MetabaseCollection", "MetabaseDashboard", "MetabaseQuestion", "Metric", "MicroStrategy", "MicroStrategyAttribute", "MicroStrategyCube", "MicroStrategyDocument", "MicroStrategyDossier", "MicroStrategyFact", "MicroStrategyMetric", "MicroStrategyProject", "MicroStrategyReport", "MicroStrategyVisualization", "Mode", "ModeChart", "ModeCollection", "ModeQuery", "ModeReport", "ModeWorkspace", "MongoDB", "MongoDBCollection", "MongoDBDatabase", "MonteCarlo", "MultiDimensionalDataset", "Namespace", "NoSQL", "ObjectStore", "Persona", "PowerBI", "PowerBIColumn", "PowerBIDashboard", "PowerBIDataflow", "PowerBIDataset", "PowerBIDatasource", "PowerBIMeasure", "PowerBIPage", "PowerBIReport", "PowerBITable", "PowerBITile", "PowerBIWorkspace", "Preset", "PresetChart", "PresetDashboard", "PresetDataset", "PresetWorkspace", "Procedure", "Process", "ProcessExecution", "Purpose", "Qlik", "QlikApp", "QlikChart", "QlikDataset", "QlikSheet", "QlikSpace", "QlikStream", "Query", "QuickSight", "QuickSightAnalysis", "QuickSightAnalysisVisual", "QuickSightDashboard", "QuickSightDashboardVisual", "QuickSightDataset", "QuickSightDatasetField", "QuickSightFolder", "Readme", "ReadmeTemplate", "Redash", "RedashDashboard", "RedashQuery", "RedashVisualization", "Referenceable", "Resource", "S3", "S3Bucket", "S3Object", "SaaS", "Salesforce", "SalesforceDashboard", "SalesforceField", "SalesforceObject", "SalesforceOrganization", "SalesforceReport", "Schema", "SchemaRegistry", "SchemaRegistrySubject", "Sigma", "SigmaDataElement", "SigmaDataElementField", "SigmaDataset", "SigmaDatasetColumn", "SigmaPage", "SigmaWorkbook", "Sisense", "SisenseDashboard", "SisenseDatamodel", "SisenseDatamodelTable", "SisenseFolder", "SisenseWidget", "SnowflakeDynamicTable", "SnowflakePipe", "SnowflakeStream", "SnowflakeTag", "Soda", "SodaCheck", "Spark", "SparkJob", "SQL", "Stakeholder", "StakeholderTitle", "Table", "Tableau", "TableauCalculatedField", "TableauDashboard", "TableauDatasource", "TableauDatasourceField", "TableauFlow", "TableauMetric", "TableauProject", "TableauSite", "TableauWorkbook", "TableauWorksheet", "TablePartition", "Tag", "TagAttachment", "Task", "Thoughtspot", "ThoughtspotAnswer", "ThoughtspotColumn", "ThoughtspotDashlet", "ThoughtspotLiveboard", "ThoughtspotTable", "ThoughtspotView", "ThoughtspotWorksheet", "View", "Workflow", "WorkflowRun", "Assets", "AtlanTagCache", "CustomMetadataCache", "EnumCache", "GroupCache", "RoleCache", "UserCache", "Caches", "Atlan Client Interface", "Events", "Error Handling", "BooleanField", "CustomMetadataField", "KeywordField", "KeywordTextField", "KeywordTextStemmedField", "NumericField", "NumericRankField", "RelationField", "SearchableField", "TextField", "Fields", "pyatlan", "Atlan image", "Core model", "Custom metadata", "Group", "Keycloak events", "Lineage", "Role", "TypeDef", "User", "Other models"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288], "pyatlan": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288], "model": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288], "asset": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 285, 287, 289], "typenam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 281, 287], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 268, 269, 270, 271, 272, 273, 274, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288], "attribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 265, 266, 268, 269, 270, 271, 272, 273, 274, 277, 278, 281, 282, 283, 285, 287, 288], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 280, 281, 282, 283, 284, 285, 286, 287, 288], "businessattribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "dict": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 265, 281, 282, 285, 287], "ani": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 283, 284, 285, 287, 288], "createdbi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 287], "createtim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 287], "int": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 283, 284, 285, 287, 288], "deletehandl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "guid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 262, 263, 265, 285, 286, 287], "isincomplet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "bool": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 265, 266, 268, 269, 270, 271, 272, 280, 281, 285, 286, 287, 288], "true": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 265, 266, 269, 270, 271, 272, 285, 287], "label": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "list": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 265, 266, 269, 270, 271, 272, 281, 283, 285, 287, 288], "relationshipattribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "statu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265], "entitystatu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 281], "updatedbi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 287], "updatetim": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 287], "version": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 280, 287], "classif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 287], "atlantag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 281], "classificationnam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "displaytext": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "relationshipguid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "relationshipstatu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "relationshiptyp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "meaningnam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "mean": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "customattribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "scrub": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "pendingtask": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "uniqueattribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "appendrelationshipattribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "removerelationshipattribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "semant": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "savesemant": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "depth": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 285], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288], "descript": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265, 286, 287], "channel_link": 0, "classvar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256], "keywordfield": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 24, 27, 37, 39, 46, 47, 49, 51, 52, 55, 58, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 86, 88, 89, 91, 92, 96, 97, 98, 100, 101, 102, 104, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 122, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 137, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 176, 177, 178, 182, 183, 184, 186, 189, 190, 191, 192, 193, 195, 197, 198, 199, 201, 202, 203, 204, 205, 207, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 248, 254, 255, 256, 278], "field": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279], "atlan_field": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 267, 281, 282, 287], "tbc": [0, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 22, 23, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 81, 82, 84, 86, 87, 88, 89, 90, 91, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 194, 195, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 251, 252, 253, 254], "default_navig": 0, "deny_asset_filt": 0, "deny_asset_tab": 0, "deny_asset_typ": 0, "deny_custom_metadata_guid": 0, "deny_navigation_pag": 0, "display_prefer": 0, "is_access_control_en": 0, "booleanfield": [0, 3, 4, 8, 9, 11, 15, 16, 37, 47, 49, 51, 52, 65, 83, 84, 88, 89, 90, 97, 110, 117, 119, 123, 137, 140, 141, 148, 154, 162, 164, 169, 170, 173, 176, 187, 192, 194, 199, 200, 205, 208, 216, 220, 221, 222, 227, 230, 234, 238, 242, 245, 254, 278], "polici": [0, 49, 90, 97], "relationfield": [0, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 22, 23, 26, 27, 28, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 81, 82, 84, 86, 87, 88, 89, 90, 91, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 194, 195, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 251, 252, 253, 254, 278], "adls_account_qualified_nam": 1, "keywordtextfield": [1, 2, 3, 4, 7, 8, 9, 10, 11, 17, 18, 21, 37, 47, 51, 52, 55, 60, 64, 65, 66, 67, 68, 70, 71, 73, 74, 83, 84, 87, 89, 91, 92, 101, 102, 112, 114, 115, 117, 118, 119, 121, 123, 129, 132, 133, 140, 141, 143, 148, 160, 164, 169, 172, 176, 177, 179, 181, 183, 189, 190, 191, 193, 195, 197, 199, 206, 210, 214, 216, 217, 218, 220, 222, 226, 227, 232, 235, 243, 244, 248, 249, 278], "uniqu": [1, 4, 7, 8, 11, 17, 21, 47, 49, 51, 52, 55, 58, 60, 73, 83, 84, 87, 91, 96, 102, 112, 114, 115, 117, 118, 123, 129, 132, 140, 141, 142, 143, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 169, 176, 179, 181, 183, 190, 191, 193, 195, 199, 203, 204, 206, 210, 214, 216, 217, 218, 222, 227, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 248, 249, 259, 261, 262, 263, 286], "name": [1, 4, 5, 7, 8, 10, 11, 17, 21, 37, 47, 49, 51, 52, 55, 60, 64, 65, 73, 79, 83, 84, 87, 89, 91, 92, 96, 100, 101, 102, 104, 105, 109, 112, 114, 115, 116, 117, 118, 123, 124, 127, 129, 132, 140, 141, 142, 143, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 169, 172, 176, 178, 179, 181, 183, 190, 191, 193, 195, 197, 199, 202, 203, 205, 206, 210, 214, 216, 217, 218, 220, 222, 226, 227, 229, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 244, 248, 249, 258, 259, 260, 261, 262, 263, 265, 268, 270, 271, 272, 273, 274, 277, 282, 283, 286, 287], "account": [1, 2, 11, 17, 18, 193], "thi": [1, 2, 3, 4, 7, 8, 9, 11, 12, 17, 18, 21, 26, 27, 46, 47, 48, 49, 51, 52, 55, 57, 58, 60, 61, 64, 65, 67, 71, 73, 76, 77, 79, 83, 84, 87, 89, 90, 91, 92, 96, 97, 100, 101, 102, 103, 104, 108, 109, 110, 116, 117, 118, 123, 127, 128, 129, 132, 135, 138, 140, 141, 142, 143, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 166, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 193, 195, 197, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 248, 249, 254, 255, 256, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 282, 287], "adls_account_secondary_loc": [1, 18], "secondari": [1, 18, 84], "locat": [1, 18, 49, 51, 64, 65, 83, 84, 86, 89, 92, 123, 140, 230, 242], "azure_loc": [1, 18], "azur": [1, 257], "azure_resource_id": [1, 18], "resourc": [1, 2, 11, 17, 18, 193, 257], "identifi": [1, 4, 7, 11, 17, 18, 49, 58, 73, 100, 103, 104, 108, 112, 116, 117, 160, 169, 191, 193, 198, 201, 202, 204, 222, 224, 235, 243, 261, 262, 263, 286], "azure_tag": [1, 18], "tag": [1, 2, 5, 11, 17, 18, 64, 65, 73, 89, 92, 191, 193, 222, 244, 257, 258, 281], "have": [1, 11, 17, 18, 51, 52, 64, 65, 83, 84, 89, 92, 140, 141, 193, 199, 215, 222, 227, 234, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 287], "been": [1, 17, 18, 51, 52, 64, 65, 83, 84, 89, 92, 100, 104, 140, 141, 193, 195, 222, 227, 259, 266, 282], "appli": [1, 9, 11, 17, 18, 49, 64, 65, 68, 89, 92, 122, 193, 266, 287], "adls_account_access_ti": 2, "access": [2, 4, 7, 11, 86, 89, 100, 104, 170, 260, 267], "tier": [2, 4, 195], "adls_account_kind": 2, "kind": [2, 257, 279], "adls_account_perform": 2, "perform": [2, 265, 270, 271, 272], "adls_account_provision_st": 2, "provis": 2, "state": [2, 3, 4, 5, 11, 74, 111, 116, 135, 225, 266], "adls_account_repl": 2, "replic": [2, 97], "adls_account_resource_group": 2, "group": [2, 11, 17, 61, 96, 113, 115, 178, 193, 261, 265, 289], "adls_account_subscript": 2, "subscript": 2, "adls_contain": [2, 4], "adls_encryption_typ": 2, "type": [2, 4, 5, 8, 11, 17, 37, 46, 47, 49, 64, 65, 68, 76, 79, 86, 88, 89, 91, 92, 97, 98, 112, 114, 116, 117, 122, 125, 131, 132, 134, 135, 149, 172, 174, 184, 186, 190, 191, 193, 195, 198, 199, 202, 204, 215, 216, 221, 232, 235, 245, 255, 256, 265, 284, 287], "encrypt": [2, 3, 4, 89, 170, 199], "adls_e_tag": 2, "entiti": [2, 89, 193, 265, 281, 287], "an": [2, 8, 9, 11, 13, 17, 46, 51, 78, 83, 84, 89, 97, 117, 140, 191, 193, 195, 230, 242, 259, 260, 265, 266, 267, 281, 282, 285, 287], "i": [2, 4, 7, 8, 9, 10, 11, 13, 14, 17, 37, 47, 49, 51, 55, 73, 74, 83, 84, 88, 89, 90, 97, 104, 110, 114, 117, 123, 140, 143, 148, 154, 158, 169, 170, 173, 176, 187, 190, 191, 192, 193, 194, 195, 199, 200, 203, 205, 208, 216, 220, 221, 222, 229, 230, 234, 238, 242, 243, 245, 254, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 281, 282, 287], "hash": [2, 4, 11, 89, 91, 191, 193], "repres": [2, 11, 46, 47, 51, 52, 83, 84, 89, 140, 141, 145, 193, 229, 244, 268, 270, 271, 272, 273, 274, 275, 277, 281, 282], "chang": [2, 11, 58, 88, 89, 193, 265, 266], "content": [2, 4, 12, 37, 47, 58, 89, 91, 100, 103, 104, 193, 195, 287], "onli": [2, 11, 47, 49, 89, 193, 195, 221, 259, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 287], "its": [2, 89, 193, 258, 259, 260, 261, 262, 263, 265, 266, 282], "metadata": [2, 4, 11, 24, 89, 100, 103, 104, 192, 193, 259, 269, 287, 289], "adls_primary_disk_st": 2, "primari": [2, 47], "disk": 2, "adls_account": 3, "adls_container_encryption_scop": 3, "scope": 3, "contain": [3, 4, 7, 8, 9, 11, 13, 14, 47, 51, 100, 140, 226, 245, 258, 267, 282], "adls_container_lease_st": 3, "leas": [3, 4], "adls_container_lease_statu": 3, "adls_container_url": 3, "url": [3, 4, 10, 11, 86, 192, 226, 267], "adls_container_version_level_immutability_support": 3, "whether": [3, 4, 8, 9, 11, 37, 47, 49, 51, 52, 65, 83, 84, 88, 89, 90, 97, 110, 117, 123, 140, 141, 148, 154, 169, 170, 173, 176, 187, 192, 194, 199, 200, 205, 208, 216, 220, 221, 222, 227, 230, 234, 238, 242, 254, 266, 282], "support": [3, 4, 13, 191], "level": [3, 4, 47, 55, 60, 114, 232, 233, 234, 235, 236, 237, 238, 240, 241, 286], "immut": [3, 4], "fals": [3, 4, 8, 9, 11, 47, 49, 51, 52, 65, 83, 84, 88, 89, 90, 97, 110, 117, 123, 140, 141, 148, 154, 169, 170, 173, 176, 187, 192, 194, 199, 200, 205, 208, 216, 220, 221, 222, 227, 230, 234, 238, 242, 254, 259, 265, 266, 269, 270, 271, 272, 285, 287], "adls_object": 3, "adls_object_count": 3, "numericfield": [3, 4, 5, 6, 7, 11, 15, 16, 27, 42, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 61, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 80, 83, 84, 89, 90, 91, 92, 96, 97, 100, 102, 103, 104, 108, 110, 113, 114, 115, 117, 120, 121, 123, 136, 137, 138, 140, 141, 150, 156, 157, 159, 160, 162, 163, 164, 170, 180, 182, 188, 189, 191, 194, 195, 198, 199, 200, 203, 207, 209, 211, 212, 214, 215, 216, 218, 221, 222, 224, 225, 227, 230, 242, 245, 246, 254, 255, 256, 278], "number": [3, 11, 17, 27, 42, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 76, 77, 78, 80, 83, 84, 89, 90, 92, 96, 97, 100, 103, 104, 110, 113, 114, 115, 117, 138, 140, 141, 150, 156, 157, 159, 180, 182, 188, 193, 194, 198, 199, 200, 203, 207, 209, 211, 212, 214, 215, 216, 218, 222, 227, 230, 242, 246, 254, 268, 269, 270, 271, 272, 273, 274, 276, 277], "exist": [3, 4, 11, 17, 21, 51, 52, 60, 64, 65, 83, 84, 87, 89, 91, 92, 102, 104, 105, 109, 118, 123, 132, 140, 141, 143, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 169, 176, 179, 181, 183, 191, 193, 195, 199, 206, 210, 214, 216, 217, 218, 222, 227, 232, 233, 234, 235, 236, 237, 238, 240, 241, 248, 249, 260, 266, 267, 278, 287], "within": [3, 4, 7, 11, 47, 51, 52, 67, 71, 83, 84, 90, 109, 112, 113, 114, 140, 141, 166, 194, 199, 222, 227, 259, 266, 267, 269, 270, 271, 272, 287], "adls_container_qualified_nam": 4, "adls_object_access_ti": 4, "adls_object_access_tier_last_modified_tim": 4, "time": [4, 5, 11, 27, 47, 49, 51, 52, 68, 78, 83, 84, 90, 91, 97, 100, 104, 110, 111, 117, 122, 123, 140, 141, 180, 189, 191, 195, 215, 221, 222, 225, 227, 245, 255, 256, 284], "epoch": [4, 11, 47, 51, 52, 83, 84, 91, 100, 104, 110, 123, 140, 141, 180, 189, 195, 215, 221, 222, 227, 245], "when": [4, 11, 17, 47, 61, 74, 89, 100, 104, 189, 191, 193, 195, 215, 265, 266, 267], "acccess": 4, "wa": [4, 11, 27, 47, 51, 52, 61, 78, 83, 84, 89, 91, 100, 104, 123, 140, 141, 180, 189, 191, 195, 215, 222, 227, 255, 256, 259, 265, 266], "last": [4, 11, 51, 52, 61, 78, 83, 84, 91, 100, 104, 112, 140, 141, 180, 189, 191, 195, 215, 222, 227], "modifi": [4, 91, 195, 266, 282], "millisecond": [4, 11, 47, 51, 52, 83, 84, 91, 97, 100, 104, 110, 123, 140, 141, 180, 189, 191, 195, 215, 221, 222, 227], "adls_object_archive_statu": 4, "archiv": [4, 11, 13, 191, 259], "adls_object_cache_control": 4, "textfield": [4, 9, 11, 51, 52, 68, 83, 84, 90, 117, 122, 136, 137, 140, 141, 145, 154, 161, 171, 199, 205, 208, 246, 278], "cach": [4, 258, 259, 260, 261, 262, 263, 265, 279], "control": [4, 61, 89], "adls_object_content_languag": 4, "languag": [4, 12, 74, 88, 91, 204], "": [4, 9, 11, 12, 17, 49, 60, 91, 100, 103, 104, 110, 116, 124, 129, 191, 193, 195, 244, 268, 269, 270, 271, 272, 282], "adls_object_content_md5hash": 4, "md5": [4, 91], "adls_object_content_typ": 4, "adls_object_lease_st": 4, "adls_object_lease_statu": 4, "adls_object_metadata": 4, "associ": [4, 11, 12, 13, 58, 73, 117, 222, 243, 244, 245], "from": [4, 11, 26, 37, 48, 49, 60, 65, 73, 83, 100, 101, 103, 104, 108, 110, 116, 117, 169, 190, 199, 222, 232, 236, 243, 255, 256, 258, 259, 260, 264, 265, 266, 267, 282, 289], "adl": [4, 18, 257], "adls_object_server_encrypt": 4, "server": [4, 215], "adls_object_s": 4, "size": [4, 51, 83, 84, 91, 97, 110, 140, 195, 218, 230, 235, 242, 254, 268, 269, 270, 271, 272, 273, 274, 276, 277, 281, 285], "adls_object_typ": 4, "adls_object_url": 4, "adls_object_version_id": 4, "adls_object_version_level_immutability_support": 4, "airflow_run_end_tim": 5, "end": [5, 225], "run": [5, 6, 7, 11, 49, 78, 110, 112, 225, 255, 256, 265, 266, 267], "airflow_run_nam": 5, "airflow_run_open_lineage_st": 5, "openlineag": [5, 225], "airflow_run_open_lineage_vers": 5, "airflow_run_start_tim": 5, "start": [5, 11, 47, 225, 266, 269, 270, 271, 272], "airflow_run_typ": 5, "airflow_run_vers": 5, "airflow_tag": 5, "assign": [5, 17, 191, 193], "airflow_dag_schedul": 6, "schedul": [6, 11, 114, 117, 189, 216], "dag": [6, 7], "airflow_dag_schedule_delta": 6, "durat": [6, 11, 255], "between": [6, 51, 140, 258, 259, 266, 269, 273, 274], "second": [6, 51, 80, 83, 84, 140], "airflow_task": [6, 67, 71, 166], "airflow_dag": 7, "airflow_dag_nam": 7, "simpl": [7, 8, 11, 21, 47, 51, 52, 83, 84, 91, 96, 112, 114, 115, 118, 123, 129, 132, 140, 141, 143, 190, 195, 206, 210, 222, 227, 240, 249, 270, 271, 272, 287], "task": [7, 257], "airflow_dag_qualified_nam": 7, "airflow_task_connection_id": 7, "connect": [7, 11, 39, 101, 153, 257, 265, 267, 287], "airflow_task_operator_class": 7, "oper": [7, 9, 11, 265, 267, 271, 272, 273, 274, 277, 285], "us": [7, 11, 46, 47, 49, 55, 61, 68, 74, 89, 97, 101, 108, 112, 117, 122, 125, 149, 156, 170, 176, 178, 186, 195, 204, 218, 219, 235, 259, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 282], "airflow_task_pool": 7, "pool": 7, "which": [7, 10, 11, 13, 14, 17, 21, 24, 27, 47, 49, 51, 52, 55, 60, 61, 64, 65, 74, 83, 84, 87, 88, 89, 91, 92, 102, 104, 105, 109, 110, 112, 114, 115, 117, 118, 123, 132, 140, 141, 143, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 169, 176, 179, 180, 181, 183, 190, 193, 195, 199, 203, 206, 210, 214, 215, 216, 217, 218, 221, 222, 227, 229, 232, 233, 234, 235, 236, 237, 238, 240, 241, 245, 248, 249, 255, 256, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 287], "happen": 7, "airflow_task_pool_slot": 7, "slot": 7, "airflow_task_priority_weight": 7, "prioriti": 7, "airflow_task_queu": 7, "queue": 7, "airflow_task_retry_numb": 7, "retri": [7, 265], "count": [7, 11, 51, 52, 83, 84, 140, 141, 222, 227, 265], "airflow_task_sql": 7, "sql": [7, 51, 52, 67, 68, 71, 74, 83, 84, 101, 110, 112, 117, 122, 140, 141, 165, 166, 176, 189, 216, 219, 220, 222, 254, 257], "code": [7, 9, 67, 71, 74, 88, 117, 166, 189, 279], "execut": [7, 11, 88, 117, 189, 245, 246], "through": [7, 11, 100, 267, 287], "airflow_task_trigger_rul": 7, "trigger": [7, 266], "input": [7, 26, 48, 226, 236], "output": [7, 26, 48, 67, 71, 88, 166, 226, 236], "process": [7, 26, 48, 67, 71, 226, 257, 266, 267, 287], "api_external_doc": 8, "extern": [8, 51, 83, 84, 88, 140, 154, 230, 242], "document": [8, 51, 140], "api_is_auth_opt": 8, "authent": 8, "option": [8, 191, 265, 287], "requir": [8, 11, 264, 266], "api_spec_nam": 8, "spec": 8, "api_spec_qualified_nam": 8, "api_spec_typ": 8, "exampl": [8, 11, 14, 46, 49, 51, 65, 74, 83, 84, 98, 114, 117, 125, 131, 140, 171, 172, 178, 182, 183, 184, 186, 191, 195, 204, 215, 216, 221, 230, 232, 235, 242, 267, 269, 271, 272, 277], "openapi": 8, "graphql": 8, "etc": [8, 37, 49, 51, 83, 84, 124, 140, 171, 172, 174, 178, 183, 195, 204, 221, 230, 242, 248, 266], "api_spec_vers": 8, "specif": [8, 10, 11, 204, 259, 266, 267], "api_path_available_oper": 9, "avail": [9, 10, 279, 282, 287], "endpoint": 9, "api_path_available_response_cod": 9, "respons": [9, 10, 267], "path": [9, 11, 37, 109, 114, 184, 283], "across": [9, 17, 193, 205, 268, 269, 270, 271, 272, 273, 274, 276, 277], "all": [9, 11, 17, 47, 51, 140, 191, 193, 257, 259, 265, 267, 268, 269, 270, 271, 272, 273, 274, 278, 282, 287], "api_path_is_ingress_expos": 9, "expos": 9, "ingress": 9, "api_path_is_templ": 9, "replac": [9, 287], "paramet": [9, 11, 60, 178, 189, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 287], "api_path_raw_uri": 9, "absolut": 9, "individu": 9, "api_path_summari": 9, "summari": [9, 13, 14], "intend": [9, 14], "api_spec": 9, "api_path": 10, "api_spec_contact_email": 10, "email": [10, 263, 265, 288], "address": [10, 263, 267], "contact": 10, "api": [10, 49, 197, 257, 265, 267], "api_spec_contact_nam": 10, "api_spec_contact_url": 10, "point": [10, 11, 47, 111, 199, 266], "inform": [10, 11, 61, 88, 91, 195, 264, 265, 266, 278], "api_spec_contract_vers": 10, "contract": [10, 11, 58], "api_spec_license_nam": 10, "licens": 10, "under": [10, 11], "api_spec_license_url": 10, "api_spec_service_alia": 10, "servic": [10, 17, 64, 65, 89, 92, 193], "alia": [10, 11, 51, 83, 84, 110, 140, 230, 242, 254, 261, 265, 283], "api_spec_terms_of_service_url": 10, "term": [10, 12, 13, 14, 191, 265], "admin_group": 11, "who": [11, 27, 47, 51, 52, 83, 84, 100, 103, 104, 123, 140, 141, 191, 222, 227, 234, 255, 256], "administ": 11, "certain": 11, "admin_rol": 11, "role": [11, 232, 235, 248, 262, 265, 288, 289], "admin_us": 11, "user": [11, 17, 47, 51, 52, 61, 83, 84, 88, 100, 103, 104, 123, 140, 141, 191, 193, 199, 222, 227, 234, 245, 255, 256, 263, 265, 289], "announcement_messag": [11, 281], "detail": [11, 13, 14, 74, 112, 117, 153, 184, 255, 256, 258, 259, 260, 265, 266, 284], "messag": [11, 74, 97, 205, 265], "includ": [11, 191, 259, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277], "announc": [11, 265, 281], "announcement_titl": [11, 281], "brief": [11, 13, 14], "titl": [11, 65], "announcementtyp": [11, 281], "specifi": [11, 47, 80, 83, 84, 124, 148, 216, 248, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277], "announcement_typ": [11, 281], "announcement_updated_at": 11, "updat": [11, 51, 52, 61, 83, 84, 100, 104, 140, 141, 191, 195, 222, 227, 255, 256, 265, 266, 287], "announcement_updated_bi": 11, "asset_cover_imag": 11, "asset_dbt_account_nam": 11, "dbt": [11, 257], "asset_dbt_alia": 11, "asset_dbt_environment_dbt_vers": 11, "environ": [11, 115], "materi": [11, 110], "asset_dbt_environment_nam": 11, "asset_dbt_job_last_run": 11, "job": [11, 112, 114, 115, 225, 226], "ran": [11, 67, 71, 166], "asset_dbt_job_last_run_artifacts_sav": 11, "artifact": 11, "were": 11, "save": [11, 265], "asset_dbt_job_last_run_artifact_s3path": 11, "s3": [11, 49, 51, 83, 84, 140, 195, 230, 242, 257], "asset_dbt_job_last_run_created_at": 11, "creat": [11, 17, 58, 89, 100, 103, 104, 108, 125, 190, 191, 193, 195, 215, 255, 256, 265, 267, 287], "asset_dbt_job_last_run_dequed_at": 11, "dequeu": 11, "asset_dbt_job_last_run_executed_by_thread_id": 11, "thread": 11, "id": [11, 17, 27, 37, 64, 65, 75, 89, 91, 92, 191, 193, 258, 259, 261, 262, 263, 280, 283, 286, 288], "asset_dbt_job_last_run_git_branch": 11, "branch": 11, "git": 11, "asset_dbt_job_last_run_git_sha": 11, "sha": 11, "asset_dbt_job_last_run_has_docs_gener": 11, "doc": 11, "gener": [11, 89, 91, 191, 265, 266, 287], "asset_dbt_job_last_run_has_sources_gener": 11, "asset_dbt_job_last_run_notifications_s": 11, "notif": [11, 220], "sent": [11, 89, 266], "asset_dbt_job_last_run_owner_thread_id": 11, "owner": [11, 27, 65, 75, 169], "asset_dbt_job_last_run_queued_dur": 11, "total": [11, 47, 51, 56, 140, 199, 246, 265], "spent": 11, "being": [11, 74, 234, 266, 267], "queu": 11, "asset_dbt_job_last_run_queued_duration_human": 11, "human": [11, 258, 259, 260, 261, 262, 263, 282, 287], "readabl": [11, 117, 189, 258, 259, 260, 261, 262, 263, 282, 287], "spend": 11, "asset_dbt_job_last_run_run_dur": 11, "asset_dbt_job_last_run_run_duration_human": 11, "asset_dbt_job_last_run_started_at": 11, "asset_dbt_job_last_run_status_messag": 11, "asset_dbt_job_last_run_total_dur": 11, "asset_dbt_job_last_run_total_duration_human": 11, "asset_dbt_job_last_run_updated_at": 11, "asset_dbt_job_last_run_url": 11, "asset_dbt_job_nam": 11, "asset_dbt_job_next_run": 11, "next": [11, 117], "asset_dbt_job_next_run_human": 11, "asset_dbt_job_schedul": 11, "asset_dbt_job_schedule_cron_human": 11, "cron": 11, "asset_dbt_job_statu": 11, "asset_dbt_meta": 11, "everyth": 11, "meta": [11, 282], "kei": [11, 47, 51, 52, 80, 83, 84, 91, 140, 141, 145, 205, 259, 266, 280, 282], "asset_dbt_package_nam": 11, "packag": [11, 37], "asset_dbt_project_nam": 11, "project": [11, 64, 65, 83, 89, 92, 101, 102, 105, 109, 111, 113, 114, 115, 123, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241], "asset_dbt_semantic_layer_proxy_url": 11, "layer": 11, "proxi": [11, 268, 270, 271, 272, 273, 274, 277], "asset_dbt_source_freshness_criteria": 11, "fresh": 11, "criteria": [11, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277], "asset_dbt_tag": 11, "attach": [11, 191, 258], "asset_dbt_test_statu": 11, "test": [11, 74], "status": [11, 112], "asset_dbt_unique_id": 11, "asset_dbt_workflow_last_upd": 11, "workflow": [11, 256, 257], "atlan": [11, 49, 73, 191, 222, 243, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 289], "asset_icon": 11, "icon": [11, 46, 49, 98, 186], "glossari": [11, 12, 13, 14, 287], "current": [11, 111, 117, 266, 267], "asset_mc_incident_nam": 11, "mont": [11, 116, 117, 142], "carlo": [11, 116, 117, 142], "incid": [11, 116, 117], "asset_mc_incident_qualified_nam": 11, "asset_mc_incident_sever": 11, "sever": [11, 74, 116], "asset_mc_incident_st": 11, "asset_mc_incident_sub_typ": 11, "sub": [11, 42, 47, 55, 242], "asset_mc_incident_typ": 11, "asset_mc_last_sync_run_at": 11, "sync": [11, 258], "asset_mc_monitor_nam": 11, "monitor": [11, 117], "asset_mc_monitor_qualified_nam": 11, "asset_mc_monitor_schedule_typ": 11, "asset_mc_monitor_status": 11, "asset_mc_monitor_typ": 11, "asset_soda_check_count": 11, "check": [11, 224, 261, 262, 263, 266, 268, 269, 270, 271, 272], "done": [11, 267], "via": [11, 13, 191, 203], "soda": [11, 224, 257], "asset_soda_check_status": 11, "asset_soda_dq_statu": 11, "data": [11, 17, 47, 49, 58, 61, 65, 88, 91, 149, 170, 172, 193, 199, 206, 207, 211, 232, 235, 246, 248, 265, 282, 287], "qualiti": 11, "asset_soda_last_scan_at": 11, "asset_soda_last_sync_run_at": 11, "asset_soda_source_url": 11, "asset_tag": 11, "asset_theme_hex": 11, "color": [11, 24], "hexadecim": 11, "rgb": 11, "certificate_statu": [11, 265], "certif": 11, "certificate_status_messag": 11, "provid": [11, 258, 259, 261, 262, 263, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277], "further": [11, 242, 265, 267, 287], "certificatestatu": [11, 265], "certificate_updated_at": 11, "certificate_updated_bi": 11, "connection_nam": 11, "connection_qualified_nam": 11, "connector_nam": 11, "connector": 11, "data_contract_latest": 11, "data_contract_latest_certifi": 11, "dbt_qualified_nam": 11, "crawl": 11, "fallback": 11, "displai": [11, 287], "purpos": [11, 257, 265, 283, 288], "userdescript": [11, 12, 13, 14], "empti": [11, 51, 52, 83, 84, 140, 141, 143, 222, 227, 259, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277], "display_nam": [11, 265], "interfac": [11, 266, 279], "file": [11, 109, 195, 257, 265, 287], "has_contract": 11, "ha": [11, 49, 51, 52, 65, 83, 84, 100, 104, 140, 141, 195, 222, 227, 234, 259, 266, 267, 268, 269, 270, 271, 272, 273, 274, 282], "has_lineag": 11, "lineag": [11, 265, 268, 270, 271, 272, 273, 274, 277, 289], "input_port_data_product": 11, "is_ai_gener": 11, "is_discover": 11, "discover": 11, "ui": [11, 37, 100, 104, 261], "is_edit": 11, "can": [11, 13, 47, 49, 60, 74, 86, 114, 191, 199, 257, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 287], "edit": 11, "is_parti": 11, "last_row_changed_at": 11, "insert": [11, 221], "delet": [11, 191, 255, 256, 259, 281, 282], "row": [11, 47, 49, 51, 78, 83, 84, 110, 140, 230, 242, 254], "last_sync_run": 11, "crawler": 11, "synchron": 11, "last_sync_run_at": 11, "last_sync_workflow_nam": 11, "link": [11, 76, 77, 78, 91, 108, 112, 192, 198, 203, 257, 287], "mc_incid": 11, "mc_monitor": [11, 116], "metric": [11, 68, 129, 237, 257], "keywordtextstemmedfield": [11, 65, 162, 163, 278], "displaynam": [11, 287], "output_port_data_product": 11, "owner_group": 11, "own": 11, "owner_us": 11, "popularity_scor": 11, "numericrankfield": [11, 278], "popular": [11, 49], "score": [11, 61], "readm": [11, 12, 13, 14, 186, 257, 287], "sample_data_url": 11, "sampl": [11, 49], "schema_registry_subject": 11, "soda_check": 11, "source_cost_unit": 11, "The": [11, 27, 80, 83, 84, 226, 256, 259, 265, 266, 270, 271, 272, 282], "unit": 11, "measur": [11, 51, 55, 140, 154, 157, 232, 235, 248], "sourcetotalcost": 11, "source_created_at": 11, "system": [11, 73, 222, 243], "source_created_bi": 11, "source_embed_url": 11, "emb": 11, "imag": [11, 46, 98, 186, 265, 289], "dashboard": [11, 37, 76, 77, 100, 103, 104, 108, 150, 158, 159, 160, 180, 181, 188, 198, 201, 202, 214, 218, 233, 240, 241], "source_last_read_at": 11, "timestamp": [11, 61, 100], "most": [11, 60, 279], "recent": 11, "read": [11, 74, 80, 83, 84, 245, 265], "source_own": 11, "source_query_compute_cost_list": 11, "expens": 11, "warehous": [11, 49, 116, 117], "source_query_compute_cost_record_list": 11, "extra": [11, 265, 281], "insight": [11, 49, 257, 287], "source_read_count": 11, "source_read_expensive_query_record_list": 11, "queri": [11, 47, 49, 51, 52, 67, 68, 71, 73, 83, 84, 104, 105, 108, 110, 112, 122, 125, 140, 141, 157, 166, 170, 189, 190, 222, 227, 230, 242, 243, 254, 257, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 287], "source_read_popular_query_record_list": 11, "source_read_query_cost": 11, "cost": 11, "source_read_recent_user_list": 11, "usernam": [11, 49, 255, 256, 263, 265, 288], "source_read_recent_user_record_list": 11, "source_read_slow_query_record_list": 11, "slowest": 11, "source_read_top_user_list": 11, "source_read_top_user_record_list": 11, "source_read_user_count": 11, "source_total_cost": 11, "source_updated_at": 11, "source_updated_bi": 11, "source_url": 11, "applic": [11, 49, 51, 140, 195, 203, 229, 266], "button": 11, "view": [11, 27, 47, 51, 52, 83, 84, 100, 101, 102, 104, 106, 109, 110, 140, 141, 176, 203, 222, 227, 248, 257, 266, 287], "starred_bi": 11, "star": 11, "starred_count": 11, "starred_details_list": 11, "sub_typ": 11, "subtyp": [11, 51, 116, 140, 171, 172, 218, 287], "tenant_id": 11, "workspac": [11, 138, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160], "user_descript": 11, "If": [11, 267, 270, 271, 272], "present": [11, 37, 91, 182, 195, 216], "viewer_group": 11, "collect": [11, 51, 52, 87, 118, 135, 138, 140, 141, 176, 257, 261, 262, 263, 266, 287], "viewer_us": 11, "view_scor": 11, "classmethod": [11, 13, 191, 258, 259, 260, 261, 262, 263, 265, 281, 282], "include_archiv": 11, "fluentlineag": 11, "get": [11, 265], "lineagelistrequest": [11, 265, 285], "retriev": [11, 60, 259, 260, 265, 266, 267, 270, 271, 272], "downstream": 11, "addit": [11, 12, 13, 14, 287, 289], "condit": [11, 24, 117, 268, 269, 270, 271, 272, 273, 274, 276, 277, 285], "chain": 11, "onto": 11, "return": [11, 13, 49, 60, 80, 83, 84, 88, 191, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 281, 282, 287], "befor": [11, 49, 80, 83, 84, 265, 266], "attempt": [11, 267], "ensur": [11, 266, 282], "ar": [11, 26, 47, 48, 51, 55, 61, 73, 83, 84, 88, 140, 142, 222, 230, 232, 234, 236, 242, 243, 254, 259, 261, 262, 263, 265, 266, 267, 279, 289], "push": 11, "down": [11, 266], "optim": 11, "To": [11, 287], "default": [11, 47, 49, 176, 191, 199, 215, 265, 266, 267, 270, 271, 272], "direct": [11, 55, 170, 215, 285], "call": [11, 49, 266], "soft": 11, "additional_attribut": [12, 13, 14], "unus": [12, 13, 14, 49], "arbitrari": [12, 13, 14], "set": [12, 13, 14, 88, 204, 216, 258, 259, 260, 265, 266, 282, 287], "categori": [12, 13, 14, 49, 117, 149, 232, 235, 287], "glossary_typ": 12, "long_descript": [12, 13, 14], "A": [12, 89, 261, 262, 263, 265, 270, 271, 272], "longer": 12, "see": [12, 13, 14, 150, 151, 152, 156, 176, 267, 287], "instead": [12, 13, 14, 150, 151, 152, 156, 176, 265, 266, 287], "short_descript": [12, 13, 14], "short": 12, "definit": [12, 14, 51, 110, 140, 165, 204, 205, 219, 220, 224, 254, 259, 260, 287], "usag": [12, 14], "inted": 12, "anchor": [13, 14], "searchabl": [13, 14, 191, 275], "qualifiednam": [13, 14, 191], "category_typ": 13, "children_categori": 13, "parent_categori": 13, "parent": [13, 37, 55, 60, 87, 100, 101, 103, 129, 176, 217], "subcategori": [13, 49], "can_be_archiv": [13, 191], "indic": [13, 47, 191, 267, 282], "delete_by_guid": [13, 191, 265], "method": [13, 110, 191, 265, 266, 279, 282], "abbrevi": 14, "terrm": 14, "antonym": 14, "assigned_ent": 14, "organ": [14, 104, 197, 198, 200, 201, 202], "classifi": 14, "exmapl": [14, 174], "is_a": 14, "preferred_term": 14, "preferred_to_term": 14, "replaced_bi": 14, "replacement_term": 14, "see_also": [14, 185], "synonym": 14, "term_typ": 14, "translated_term": 14, "translation_term": 14, "valid_valu": 14, "valid_values_for": 14, "access_control": 15, "is_policy_en": 15, "policy_act": 15, "policy_categori": 15, "policy_condit": 15, "policy_delegate_admin": 15, "policy_group": 15, "policy_mask_typ": 15, "policy_prior": 15, "policy_resourc": 15, "policy_resource_categori": 15, "policy_resource_signatur": 15, "policy_rol": 15, "policy_service_nam": 15, "policy_sub_categori": 15, "policy_typ": 15, "policy_us": 15, "policy_validity_schedul": 15, "auth_service_config": 16, "auth_service_is_en": 16, "auth_service_policy_last_sync": 16, "auth_service_typ": 16, "tag_servic": 16, "aws_account_id": [17, 193], "12": [17, 193], "digit": [17, 47, 193, 199], "aws_arn": [17, 193], "amazon": [17, 193], "arn": [17, 193], "thu": [17, 193], "must": [17, 47, 88, 193, 199], "instanc": [17, 58, 193, 265], "aws_owner_id": [17, 193], "root": [17, 193], "aws_owner_nam": [17, 193], "aws_partit": [17, 193], "region": [17, 51, 83, 84, 140, 193, 230, 242], "aws_region": [17, 193], "physic": [17, 193], "where": [17, 86, 169, 193], "center": [17, 193], "cluster": [17, 47, 51, 140, 193], "aws_resource_id": [17, 193], "new": [17, 58, 193, 265, 266, 287], "aws_servic": [17, 193], "aws_tag": [17, 193], "azure_event_hub_statu": 19, "kafkaconsumergroup": [20, 257, 287], "azure_service_bus_namespace_nam": 21, "namespac": [21, 117, 257], "azure_service_bus_namespace_qualified_nam": 21, "azure_service_bus_top": 22, "azure_service_bus_namespac": 23, "badge_condit": 24, "determin": [24, 49, 60, 88, 259, 266], "diplai": 24, "variou": [24, 261, 262, 263], "valu": [24, 47, 49, 73, 88, 170, 199, 205, 222, 243, 244, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 282, 285, 287], "badge_metadata_attribut": 24, "custom": [24, 117, 200, 215, 216, 259, 269, 287, 289], "show": 24, "catalog": [25, 30, 62, 85, 94, 95, 99, 146, 196, 213, 223, 231, 257], "atlan_schema": [27, 51, 110, 165, 220, 221, 222, 230, 254], "calculation_view_activated_at": 27, "calcul": [27, 47, 49, 51, 52, 55, 83, 84, 140, 141, 178, 199, 222, 227, 232, 266, 273, 274], "activ": [27, 191, 259], "calculation_view_activated_bi": 27, "calculation_view_version_id": 27, "column": [27, 51, 78, 79, 83, 84, 110, 140, 149, 157, 176, 182, 191, 202, 209, 210, 216, 218, 230, 235, 242, 246, 248, 254, 257, 287], "column_count": [27, 51, 83, 84, 110, 140, 230, 242, 254], "input_to_airflow_task": [28, 64, 89], "input_to_process": [28, 64, 89], "input_to_spark_job": [28, 64, 89], "output_from_airflow_task": [28, 64, 89], "output_from_process": [28, 64, 89], "output_from_spark_job": [28, 64, 89], "cognite_asset": [31, 33, 34, 35, 36], "cognite3dmodel": [32, 257], "cognite_ev": 32, "cognite_fil": 32, "cognite_sequ": 32, "cognite_timeseri": 32, "cognos_default_screen_tip": 37, "tooltip": 37, "text": [37, 108, 129, 189, 195, 199, 270, 271, 272, 277], "cognos_id": 37, "cognos_is_dis": 37, "diabl": 37, "cognos_is_hidden": 37, "hidden": [37, 148, 208, 216], "cognos_parent_nam": 37, "cognos_parent_qualified_nam": 37, "qualifi": [37, 60, 79, 191, 197, 205, 229, 244, 287], "cognos_path": 37, "e": 37, "g": 37, "folder": [37, 42, 100, 103, 104, 114, 176, 184, 195, 214, 217, 218, 257, 287], "cognos_typ": 37, "report": [37, 65, 123, 131, 152, 155, 156, 158, 159, 198, 201, 202, 267, 287], "cognos_vers": 37, "cognos_fold": [38, 40, 41, 42, 43, 44, 45], "cognos_datasource_connection_str": 39, "string": [39, 47, 58, 124, 176, 183, 191, 248, 258, 259, 269, 270, 271, 272, 277, 287], "cogno": [39, 257], "datasourc": [39, 152, 153, 203, 232, 234, 235, 238, 240], "cognos_dashboard": 42, "cognos_explor": 42, "cognos_fil": 42, "cognos_folder_child_objects_count": 42, "children": [42, 55], "exclud": [42, 191, 265], "subfold": [42, 103], "cognos_folder_sub_folder_count": 42, "cognos_modul": 42, "cognos_packag": 42, "cognos_report": 42, "cognos_sub_fold": 42, "icon_typ": [46, 98, 186], "emoji": [46, 98, 186], "calculation_view": [47, 203], "column_averag": 47, "averag": [47, 51, 140, 273, 274], "column_average_length": 47, "length": [47, 199], "column_dbt_model_column": 47, "column_depth_level": 47, "nest": [47, 55, 232, 233, 234, 235, 236, 237, 238, 240, 241], "struct": [47, 287], "column_distinct_values_count": 47, "distinct": 47, "column_distinct_values_count_long": 47, "column_duplicate_values_count": 47, "duplic": [47, 259, 265], "column_duplicate_values_count_long": 47, "column_histogram": 47, "histogram": 47, "column_max": 47, "greatest": 47, "numer": [47, 269, 273, 274], "column_maximum_string_length": 47, "longest": 47, "column_mean": 47, "arithmet": 47, "column_median": 47, "median": 47, "column_min": 47, "least": [47, 269, 270, 271, 272], "column_minimum_string_length": 47, "shortest": 47, "column_missing_values_count": 47, "do": [47, 266, 267, 278], "column_missing_values_count_long": 47, "column_missing_values_percentag": 47, "percentag": 47, "column_standard_devi": 47, "standard": [47, 195, 221], "deviat": 47, "column_sum": 47, "sum": [47, 273, 274], "column_top_valu": 47, "top": [47, 60, 232, 233, 234, 235, 236, 237, 238, 240, 241], "column_uniqueness_percentag": 47, "ratio": 47, "how": [47, 91, 114, 195, 278], "0": [47, 225, 265, 285], "same": [47, 149, 269, 271, 272, 277], "100": 47, "column_unique_values_count": 47, "appear": [47, 261], "onc": 47, "column_unique_values_count_long": 47, "column_vari": 47, "varianc": 47, "data_quality_metric_dimens": 47, "data_typ": [47, 199], "dbt_metric": [47, 69], "dbt_model_column": [47, 69, 74], "default_valu": 47, "foreign_key_from": 47, "foreign_key_to": 47, "is_clust": 47, "is_dist": 47, "distribut": 47, "is_foreign": 47, "foreign": 47, "anoth": [47, 49], "tabl": [47, 51, 52, 80, 83, 84, 101, 140, 141, 145, 148, 149, 150, 152, 154, 157, 176, 191, 203, 215, 216, 219, 222, 227, 234, 235, 242, 246, 248, 257, 287], "note": [47, 108, 234, 265, 266, 269, 270, 271, 272, 287], "foreignkeyto": 47, "relationship": [47, 275, 287], "refer": [47, 192, 199, 279], "is_index": 47, "index": [47, 51, 52, 80, 83, 84, 140, 141, 145, 268, 270, 271, 272, 273, 274, 277], "databas": [47, 51, 52, 83, 84, 140, 141, 176, 203, 222, 227, 257, 287], "is_nul": [47, 199], "null": [47, 199, 268, 269, 270, 271, 272, 273, 274, 276, 277], "is_partit": [47, 51, 83, 84, 140, 230, 242], "partit": [47, 51, 80, 83, 84, 97, 140, 230, 242], "is_pin": 47, "pin": [47, 158], "is_primari": 47, "is_sort": 47, "sort": [47, 80, 83, 84, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277], "materialised_view": [47, 203], "max_length": [47, 199], "maximum": [47, 49, 51, 80, 83, 84, 140, 199, 268, 269, 270, 271, 272, 273, 274, 276, 277], "metric_timestamp": 47, "nested_column": 47, "nested_column_count": 47, "numeric_scal": [47, 199], "allow": [47, 49, 51, 73, 83, 84, 140, 199, 222, 230, 242, 243, 254, 265, 267, 282], "right": [47, 199], "decim": [47, 199], "order": [47, 74, 149, 199, 268, 269, 270, 271, 272, 273, 274, 276, 277], "posit": [47, 199], "1": [47, 225, 265], "parent_column": 47, "parent_column_nam": 47, "parent_column_qualified_nam": 47, "partition_ord": 47, "pinned_at": 47, "pinned_bi": 47, "precis": [47, 199], "datatyp": [47, 183], "raw_data_type_definit": 47, "snowflake_dynamic_t": [47, 203], "sub_data_typ": 47, "table_partit": 47, "valid": [47, 205, 261, 262, 263, 265, 266, 267, 282, 287], "allow_queri": 49, "allow_query_preview": 49, "preview": [49, 51, 83, 84, 110, 140, 230, 242, 245, 254], "rdbm": 49, "connection_dbt_environ": 49, "connection_sso_credential_guid": 49, "sso": 49, "credenti": 49, "connector_icon": 49, "connectortyp": 49, "impact": 49, "connector_imag": 49, "credential_strategi": 49, "strategi": [49, 51, 83, 84, 140, 230, 242], "default_credential_guid": 49, "has_popularity_insight": 49, "host": 49, "is_sample_data_preview_en": 49, "object_storage_upload_threshold": 49, "after": [49, 51, 140, 221, 255], "result": [49, 74, 108, 259, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277], "should": [49, 58, 91, 117, 195, 265, 266, 267, 287], "upload": [49, 265], "storag": [49, 89, 195], "policy_strategi": 49, "configur": [49, 51, 83, 84, 110, 140, 230, 242, 254, 265, 267], "rewritten": 49, "stream": [49, 221], "made": [49, 266], "screen": 49, "policy_strategy_for_sample_preview": 49, "policystrategyforsamplepreview": 49, "config": [49, 265], "popularity_insights_timefram": 49, "dai": 49, "over": [49, 265], "30": 49, "port": 49, "preview_credential_strategi": 49, "query_config": 49, "query_preview_config": [49, 51, 83, 84, 110, 140, 230, 242, 254], "query_timeout": 49, "out": [49, 267, 269, 271, 272, 277], "query_username_strategi": 49, "row_limit": 49, "source_logo": 49, "sub_categori": 49, "use_object_storag": 49, "gcp": 49, "vector_embeddings_en": 49, "vector_embeddings_updated_at": 49, "nosql": [50, 139, 257], "calculation_view_nam": [51, 52, 83, 84, 140, 141, 222, 227], "doe": [51, 52, 83, 84, 140, 141, 222, 227, 260, 267], "calculation_view_qualified_nam": [51, 52, 83, 84, 140, 141, 222, 227], "cosmos_mongo_db_databas": 51, "database_nam": [51, 52, 83, 84, 140, 141, 222, 227], "database_qualified_nam": [51, 52, 83, 84, 140, 141, 222, 227], "dbt_model": [51, 52, 68, 70, 74, 222, 227], "dbt_sourc": [51, 52, 74, 222, 227], "dbt_test": [51, 52, 69, 70, 72, 222, 227], "dimens": [51, 53, 54, 117, 143, 230, 232, 235, 248], "external_loc": [51, 83, 84, 140, 230, 242], "external_location_format": [51, 83, 84, 140, 230, 242], "format": [51, 58, 83, 84, 140, 148, 230, 242, 248], "json": [51, 58, 83, 84, 124, 140, 191, 195, 204, 216, 230, 242, 265], "csv": [51, 83, 84, 140, 230, 242], "parquet": [51, 83, 84, 140, 230, 242], "external_location_region": [51, 83, 84, 140, 230, 242], "fact": [51, 128, 129, 230], "is_profil": [51, 52, 83, 84, 140, 141, 222, 227], "profil": [51, 52, 83, 84, 140, 141, 222, 227], "is_query_preview": [51, 83, 84, 110, 140, 230, 242, 254], "is_shard": [51, 83, 84, 140, 230], "shard": [51, 83, 84, 140, 230], "is_temporari": [51, 83, 84, 110, 140, 230, 242, 254], "temporari": [51, 83, 84, 110, 140, 230, 242, 254, 267], "last_profiled_at": [51, 52, 83, 84, 140, 141, 222, 227], "mongo_db_collection_average_object_s": [51, 140], "mongo_db_collection_expire_after_second": [51, 140], "seri": [51, 140], "expir": [51, 91, 140, 245, 255, 256], "mongo_db_collection_is_cap": [51, 140], "cap": [51, 140], "mongo_db_collection_maximum_document_count": [51, 140], "mongo_db_collection_max_s": [51, 140], "mongo_db_collection_num_index": [51, 140], "mongo_db_collection_num_orphan_doc": [51, 140], "orphan": [51, 140], "mongo_db_collection_schema_definit": [51, 140], "schema": [51, 52, 57, 83, 84, 140, 141, 145, 176, 204, 205, 222, 227, 257, 287], "mongo_db_collection_subtyp": [51, 140], "mongodb": [51, 140, 257], "mongo_db_collection_time_field": [51, 140], "date": [51, 91, 140, 248], "each": [51, 140, 259, 266], "mongo_db_collection_time_granular": [51, 140], "closest": [51, 140], "match": [51, 140, 268, 269, 270, 271, 272, 273, 274, 276, 277], "span": [51, 140], "consecut": [51, 140], "incom": [51, 140], "mongo_db_collection_total_index_s": [51, 140], "mongo_db_databas": [51, 140], "no_sql_schema_definit": [51, 52, 83, 84, 140, 141, 145], "describ": [51, 52, 67, 71, 83, 84, 140, 141, 145, 149, 166, 265], "partition_count": [51, 83, 84, 140, 230, 242], "partition_list": [51, 83, 84, 140, 230, 242], "partition_strategi": [51, 83, 84, 140, 230, 242], "query_count": [51, 52, 83, 84, 140, 141, 222, 227], "query_count_updated_at": [51, 52, 83, 84, 140, 141, 222, 227], "query_user_count": [51, 52, 83, 84, 140, 141, 222, 227], "query_user_map": [51, 52, 83, 84, 140, 141, 222, 227], "map": [51, 52, 73, 83, 84, 140, 141, 222, 227, 243], "thei": [51, 52, 83, 84, 140, 141, 222, 227, 266, 267], "row_count": [51, 83, 84, 110, 140, 230, 242, 254], "schema_nam": [51, 52, 83, 84, 140, 141, 222, 227], "schema_qualified_nam": [51, 52, 83, 84, 140, 141, 222, 227], "size_byt": [51, 83, 84, 110, 140, 230, 242, 254], "byte": [51, 83, 84, 91, 97, 110, 140, 170, 195, 230, 242, 254], "sql_dbt_model": [51, 52, 222, 227], "sql_dbt_sourc": [51, 52, 222, 227], "table_nam": [51, 52, 83, 84, 140, 141, 222, 227], "table_qualified_nam": [51, 52, 83, 84, 140, 141, 222, 227], "view_nam": [51, 52, 83, 84, 101, 140, 141, 222, 227], "view_qualified_nam": [51, 52, 83, 84, 140, 141, 222, 227], "cosmos_mongo_db_collect": 52, "mongo_db_collect": [52, 141], "mongo_db_database_collection_count": [52, 141], "schema_count": [52, 57, 141], "cube_dimens": [53, 56], "cube_dimension_count": 53, "cube": [54, 55, 56, 123, 125, 143, 257], "cube_hierarchi": [54, 55], "cube_hierarchy_count": 54, "hierarchi": [54, 55, 56, 143], "cube_field_level": 55, "cube_field_measure_express": 55, "express": [55, 128, 129, 154, 157, 216, 270, 271, 272], "cube_nested_field": 55, "cube_parent_field": 55, "cube_parent_field_nam": 55, "cube_parent_field_qualified_nam": 55, "cube_sub_field_count": 55, "cube_field": 56, "cube_field_count": 56, "data_contract_asset_certifi": 58, "data_contract_asset_guid": 58, "data_contract_asset_latest": 58, "data_contract_json": 58, "actual": [58, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277], "sequenti": 58, "data_contract_next_vers": 58, "data_contract_previous_vers": 58, "data_contract_vers": 58, "data_product": 59, "parent_domain": 59, "stakehold": [59, 229, 257], "sub_domain": 59, "parent_domain_qualified_nam": 60, "domain": [60, 229, 287], "super_domain_qualified_nam": 60, "static": [60, 170, 287], "get_super_domain_qualified_nam": 60, "domain_qualified_nam": 60, "ancestr": 60, "qualified_nam": [60, 191, 265], "t": [60, 281, 282], "daap_crit": 61, "critic": 61, "product": [61, 287], "daap_sensit": 61, "sensit": [61, 88, 199, 269, 270, 271, 272], "daap_statu": 61, "daap_vis": 61, "visibl": 61, "daap_visibility_group": 61, "daap_visibility_us": 61, "data_domain": 61, "data_product_assets_dsl": 61, "search": [61, 259, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278], "dsl": 61, "defin": [61, 74, 204, 219, 242, 248, 268, 269, 270, 271, 272, 273, 274, 276, 277], "part": [61, 142, 265, 279], "data_product_assets_playbook_filt": 61, "playbook": 61, "filter": [61, 68, 122, 178, 189, 268, 270, 271, 272, 273, 274, 277], "data_product_crit": 61, "data_product_score_updated_at": 61, "data_product_score_valu": 61, "data_product_sensit": 61, "data_product_statu": 61, "data_product_vis": 61, "input_port": 61, "output_port": 61, "google_label": [64, 65, 89, 92], "googl": [64, 65, 89, 203, 257], "google_loc": [64, 65, 89, 92], "google_location_typ": [64, 65, 89, 92], "google_project_id": [64, 65, 89, 92], "google_project_nam": [64, 65, 89, 92], "google_project_numb": [64, 65, 89, 92], "google_servic": [64, 65, 89, 92], "google_tag": [64, 65, 89, 92], "data_studio_asset_own": 65, "studio": 65, "data_studio_asset_titl": 65, "data_studio_asset_typ": 65, "data_sourc": 65, "is_trashed_data_studio_asset": 65, "trash": 65, "dbt_account_nam": [66, 67, 68, 71, 73], "dbt_alia": [66, 67, 68, 71, 73], "dbt_connection_context": [66, 67, 68, 71, 73], "dbt_environment_dbt_vers": [66, 67, 68, 71, 73], "dbt_environment_nam": [66, 67, 68, 71, 73], "dbt_job_last_run": [66, 67, 68, 71, 73], "dbt_job_nam": [66, 67, 68, 71, 73], "dbt_job_next_run": [66, 67, 68, 71, 73], "dbt_job_next_run_human": [66, 67, 68, 71, 73], "dbt_job_schedul": [66, 67, 68, 71, 73], "dbt_job_schedule_cron_human": [66, 67, 68, 71, 73], "dbt_job_statu": [66, 67, 68, 71, 73], "dbt_meta": [66, 67, 68, 71, 73], "dbt_package_nam": [66, 67, 68, 71, 73], "dbt_project_nam": [66, 67, 68, 71, 73], "dbt_semantic_layer_proxy_url": [66, 67, 68, 71, 73], "dbt_tag": [66, 67, 68, 71, 73], "dbt_unique_id": [66, 67, 68, 71, 73], "ast": [67, 71, 166], "pars": [67, 71, 166, 265], "statement": [67, 71, 88, 166, 219], "logic": [67, 71, 117, 166, 266, 267], "column_process": [67, 71, 166], "dbt_column_process_job_statu": 67, "matillion_compon": [67, 71, 114, 166], "spark_job": [67, 71, 166], "produc": [67, 71, 117, 166], "dbt_metric_filt": 68, "dbt_metric_filter_column": 68, "metric_dimension_column": [68, 122], "metric_filt": [68, 122], "metric_sql": [68, 122], "comput": [68, 88, 122], "metric_timestamp_column": [68, 122], "metric_time_grain": [68, 122], "grain": [68, 122], "metric_typ": [68, 122], "dbt_compiled_sql": 69, "dbt_error": 69, "dbt_materialization_typ": 69, "dbt_model_compile_completed_at": 69, "dbt_model_compile_started_at": 69, "dbt_model_execute_completed_at": 69, "dbt_model_execute_started_at": 69, "dbt_model_execution_tim": 69, "dbt_model_run_elapsed_tim": 69, "dbt_model_run_generated_at": 69, "dbt_model_sql_asset": 69, "dbt_raw_sql": 69, "dbt_stat": 69, "dbt_statu": 69, "sql_asset": [69, 72, 74], "dbt_model_column_data_typ": 70, "dbt_model_column_ord": 70, "dbt_model_column_sql_column": 70, "dbt_model_qualified_nam": 70, "sql_column": 70, "dbt_process_job_statu": 71, "dbt_freshness_criteria": 72, "dbt_state": 72, "mapped_classification_nam": [73, 222, 243], "tag_allowed_valu": [73, 222, 243], "These": [73, 222, 243, 266, 267, 287], "denorm": [73, 222, 243], "tagattribut": [73, 222, 243], "eas": [73, 222, 243], "tag_attribut": [73, 222, 243], "tag_id": [73, 222, 243], "dbt_test_compiled_cod": 74, "compil": 74, "python": 74, "dbt_test_compiled_sql": 74, "dbt_test_error": 74, "error": [74, 279], "case": [74, 199, 269, 270, 271, 272], "dbt_test_languag": 74, "written": [74, 88], "dbt_test_raw_cod": 74, "raw": [74, 176], "dbt_test_raw_sql": 74, "dbt_test_stat": 74, "one": [74, 267, 269, 270, 271, 272, 287], "fail": 74, "warn": 74, "pass": [74, 88, 265], "dbt_test_statu": 74, "For": [74, 191, 226, 267, 279], "domo_id": 75, "dataset": [75, 78, 79, 149, 151, 152, 153, 154, 156, 157, 158, 159, 172, 182, 183, 203, 209, 210, 257], "domo_owner_id": 75, "domo_card_dashboard_count": 76, "card": [76, 77, 78], "domo_card_typ": 76, "domo": [76, 78, 79, 257], "domo_card_type_valu": 76, "domo_dashboard": 76, "domo_dataset": [76, 79], "domo_card": [77, 78], "domo_dashboard_card_count": 77, "domo_dashboard_children": 77, "domo_dashboard_par": 77, "domo_dataset_card_count": 78, "domo_dataset_column": 78, "domo_dataset_column_count": 78, "domo_dataset_last_run": 78, "iso": 78, "8601": 78, "represent": [78, 191, 265, 284], "domo_dataset_row_count": 78, "domo_dataset_column_typ": 79, "domo_dataset_qualified_nam": 79, "dynamo_db_partition_kei": [80, 83, 84], "dynamo_db_read_capacity_unit": [80, 83, 84], "strongli": [80, 83, 84], "consist": [80, 83, 84], "consum": [80, 83, 84, 96], "per": [80, 83, 84, 191, 265, 267], "throttlingexcept": [80, 83, 84], "dynamo_db_sort_kei": [80, 83, 84], "dynamo_db_statu": [80, 83, 84], "dynamo_db_write_capacity_unit": [80, 83, 84], "write": [80, 83, 84], "dynamo_db_t": [81, 82], "dynamodb": [83, 84, 257], "dynamo_db_secondary_index_projection_typ": 83, "dynamo_db_global_secondary_index": 84, "dynamo_db_local_secondary_index": 84, "dynamo_db_table_gsi_count": 84, "global": [84, 191, 192], "dynamo_db_table_lsi_count": 84, "local": [84, 226, 265], "file_asset": 86, "file_path": 86, "give": 86, "onlin": 86, "file_typ": 86, "extens": [86, 280], "collection_qualified_nam": [87, 176], "parent_qualified_nam": [87, 176], "function_argu": 88, "argument": [88, 191, 265], "function_definit": 88, "function_is_extern": 88, "store": [88, 195, 248], "intern": [88, 97, 112, 154, 191, 235, 258, 259, 261, 262, 263, 265, 282], "function_is_memoiz": 88, "re": 88, "underli": 88, "function_is_secur": 88, "omit": 88, "unauthor": 88, "function_languag": 88, "program": 88, "function_return_typ": 88, "function_schema": 88, "function_typ": 88, "gcs_access_control": 89, "gcs_encryption_typ": 89, "algorithm": 89, "gcs_e_tag": 89, "gcs_meta_generation_id": 89, "precondit": 89, "detect": [89, 259], "metagener": 89, "meaning": 89, "context": [89, 265], "particular": 89, "gcs_requester_pai": 89, "request": [89, 256, 258, 259, 260, 265, 267], "pai": 89, "header": 89, "gcs_storage_class": 89, "gcs_bucket_lifecycle_rul": 90, "lifecycl": 90, "rule": [90, 117], "bucket": [90, 91, 194, 195, 268, 269, 270, 271, 272, 273, 274, 276, 277], "gcs_bucket_retention_effective_tim": 90, "effect": 90, "retent": [90, 91], "gcs_bucket_retention_lock": 90, "lock": 90, "gcs_bucket_retention_period": 90, "period": 90, "gcs_bucket_retention_polici": 90, "gcs_bucket_versioning_en": 90, "enabl": [90, 170, 194, 195, 220, 288], "gcs_object": 90, "gcs_object_count": 90, "gcs_bucket": 91, "gcs_bucket_nam": 91, "gcs_bucket_qualified_nam": 91, "gcs_object_content_disposit": 91, "about": [91, 195, 259], "gcs_object_content_encod": 91, "encod": [91, 176, 191, 265], "gcs_object_content_languag": 91, "gcs_object_content_typ": 91, "gcs_object_crc32c_hash": 91, "crc32c": 91, "gcs_object_data_last_modified_tim": 91, "gcs_object_generation_id": 91, "gcs_object_hold_typ": 91, "hold": 91, "gcs_object_kei": 91, "gc": [91, 257], "gcs_object_md5hash": 91, "gcs_object_media_link": 91, "media": 91, "gcs_object_retention_expiration_d": 91, "gcs_object_s": 91, "kafka_consumer_group_member_count": 96, "member": 96, "kafka_consumer_group_topic_consumption_properti": 96, "consumpt": 96, "properti": [96, 148, 268, 270, 271, 272, 273, 274, 277, 282, 287], "kafka": [96, 257], "topic": [96, 97, 279], "kafka_top": 96, "kafka_topic_nam": 96, "kafka_topic_qualified_nam": 96, "kafka_consumer_group": 97, "kafka_topic_cleanup_polici": 97, "cleanup": 97, "kafka_topic_compression_typ": 97, "compress": 97, "kafka_topic_is_intern": 97, "kafka_topic_partitions_count": 97, "kafka_topic_record_count": 97, "unexpir": 97, "kafka_topic_replication_factor": 97, "factor": 97, "kafka_topic_retention_time_in_m": 97, "amount": 97, "retain": 97, "kafka_topic_segment_byt": 97, "segment": 97, "kafka_topic_size_in_byt": 97, "folder_nam": [100, 104], "looker": [100, 101, 103, 104, 108, 257], "look": [100, 103, 104, 105, 107, 108], "sourcelast_updater_id": [100, 104], "source_last_accessed_at": [100, 104], "source_last_viewed_at": [100, 104], "source_metadata_id": 100, "source_user_id": [100, 104], "source_view_count": [100, 104], "web": [100, 104], "tile": [100, 104, 107, 108, 150, 152, 156, 158], "model_nam": [101, 102, 104], "explor": [101, 102, 105, 106], "project_nam": [101, 102, 105, 109], "source_connection_nam": 101, "sql_table_nam": 101, "declar": 101, "looker_explore_qualified_nam": 102, "looker_field_data_typ": 102, "deprec": [102, 107, 150, 151, 152, 156, 159, 176, 265, 266], "looker_times_us": 102, "looker_view_qualified_nam": 102, "source_definit": [102, 107], "looker_parent_fold": 103, "looker_sub_fold": 103, "source_child_count": 103, "source_content_metadata_id": [103, 104], "source_creator_id": 103, "source_parent_id": 103, "source_query_id": 104, "looker_child_project": 106, "looker_parent_project": 106, "source_definition_databas": 107, "source_definition_schema": 107, "lookml_link_id": 108, "loomml": 108, "look_id": 108, "merge_result_id": 108, "merg": 108, "note_text": 108, "ad": [108, 199, 256], "query_id": 108, "build": [108, 156, 287], "result_maker_id": 108, "resultmarkerlookup": 108, "entri": 108, "subtitle_text": 108, "subtitl": [108, 171], "looker_view_file_nam": 109, "looker_view_file_path": 109, "possibl": 110, "refresh_method": 110, "refresh": [110, 216, 258, 259, 260], "refresh_mod": 110, "mode": [110, 170, 182, 221, 257], "stale": [110, 221, 266], "stale_since_d": 110, "matillion_vers": [111, 115], "matillion_component_id": 112, "compon": [112, 114, 265], "matillion": [112, 115, 257], "matillion_component_implementation_id": 112, "matillion_component_last_five_run_statu": 112, "five": 112, "matillion_component_last_run_statu": 112, "latest": [112, 205], "matillion_component_linked_job": 112, "matillion_component_sql": 112, "matillion_job": [112, 115], "matillion_job_nam": 112, "belong": [112, 114, 115, 169], "matillion_job_qualified_nam": 112, "matillion_process": 112, "matillion_project": [113, 114], "matillion_project_count": 113, "matillion_job_component_count": 114, "matillion_job_path": 114, "manag": [114, 287], "multipl": [114, 199], "matillion_job_schedul": 114, "weekli": 114, "monthli": 114, "matillion_job_typ": 114, "orchestr": 114, "transform": 114, "matillion_project_nam": 114, "matillion_project_qualified_nam": 114, "matillion_environ": 115, "matillion_group": 115, "matillion_group_nam": 115, "matillion_group_qualified_nam": 115, "matillion_project_job_count": 115, "mc_incident_asset": 116, "mc_incident_id": 116, "mc_incident_sever": 116, "mc_incident_st": 116, "mc_incident_sub_typ": 116, "mc_incident_typ": 116, "mc_incident_warehous": 116, "mc_monitor_alert_condit": 117, "alert": 117, "mc_monitor_asset": 117, "mc_monitor_breach_r": 117, "rate": 117, "breach": 117, "mc_monitor_id": 117, "mc_monitor_incident_count": 117, "mc_monitor_namespac": 117, "mc_monitor_rule_comparison": 117, "comparison": 117, "mc_monitor_rule_custom_sql": 117, "mc_monitor_rule_is_snooz": 117, "snooz": 117, "mc_monitor_rule_next_execution_tim": 117, "occur": [117, 267], "mc_monitor_rule_previous_execution_tim": 117, "previou": 117, "mc_monitor_rule_schedule_config": 117, "mc_monitor_rule_schedule_config_human": 117, "mc_monitor_rule_typ": 117, "mc_monitor_schedule_typ": 117, "fix": 117, "dynam": [117, 219], "mc_monitor_statu": 117, "mc_monitor_typ": 117, "health": 117, "stat": 117, "track": 117, "mc_monitor_warehous": 117, "metabase_collection_nam": 118, "metabase_collection_qualified_nam": 118, "metabase_color": 119, "metabase_dashboard": [119, 121], "metabase_is_personal_collect": 119, "metabase_namespac": 119, "metabase_quest": [119, 120], "metabase_slug": 119, "metabase_collect": [120, 121], "metabase_question_count": 120, "metabase_dashboard_count": 121, "metabase_queri": 121, "metabase_query_typ": 121, "micro_strategy_certified_at": 123, "certifi": [123, 234], "micro_strategy_certified_bi": 123, "micro_strategy_cube_nam": 123, "relat": [123, 129, 215, 234, 277, 285], "micro_strategy_cube_qualified_nam": 123, "micro_strategy_is_certifi": 123, "micro_strategy_loc": 123, "micro_strategy_project_nam": 123, "micro_strategy_project_qualified_nam": 123, "micro_strategy_report_nam": 123, "micro_strategy_report_qualified_nam": 123, "micro_strategy_attribute_form": 124, "displayformat": 124, "micro_strategy_cub": [124, 129, 130], "micro_strategy_metr": [124, 125, 128, 130, 131], "micro_strategy_project": [124, 125, 126, 127, 128, 129, 131, 132], "micro_strategy_report": [124, 129, 130], "micro_strategy_attribut": [125, 129, 130, 131], "micro_strategy_cube_queri": 125, "micro_strategy_cube_typ": 125, "olap": 125, "mtdi": 125, "micro_strategy_dossier_chapter_nam": 127, "chapter": 127, "dossier": [127, 132], "micro_strategy_visu": [127, 130], "micro_strategy_fact_express": 128, "micro_strategy_attribute_nam": 129, "micro_strategy_attribute_qualified_nam": 129, "micro_strategy_fact": [129, 130], "micro_strategy_fact_nam": 129, "micro_strategy_fact_qualified_nam": 129, "micro_strategy_metric_children": 129, "micro_strategy_metric_express": 129, "specifii": 129, "micro_strategy_metric_par": 129, "micro_strategy_metric_parent_nam": 129, "micro_strategy_metric_parent_qualified_nam": 129, "micro_strategy_docu": 130, "micro_strategy_dossi": [130, 132], "micro_strategy_report_typ": 131, "grid": 131, "chart": [131, 134, 171], "micro_strategy_dossier_nam": 132, "visual": [132, 176, 179, 181, 190], "micro_strategy_dossier_qualified_nam": 132, "micro_strategy_visualization_typ": 132, "mode_id": 133, "mode_query_nam": 133, "mode_query_qualified_nam": 133, "mode_report_nam": 133, "mode_report_qualified_nam": 133, "mode_token": 133, "mode_workspace_nam": 133, "mode_workspace_qualified_nam": 133, "mode_workspace_usernam": 133, "mode_chart_typ": 134, "mode_queri": [134, 137], "mode_collection_st": 135, "mode_collection_typ": 135, "mode_report": [135, 136], "mode_workspac": 135, "mode_chart": 136, "mode_raw_queri": 136, "mode_report_import_count": 136, "mode_chart_count": 137, "mode_collect": [137, 138], "mode_collection_token": 137, "mode_is_publ": 137, "mode_is_shar": 137, "mode_query_count": 137, "mode_query_preview": 137, "mode_report_published_at": 137, "mode_collection_count": 138, "mc_asset_qualified_nam": 142, "mc_label": 142, "cube_dimension_nam": 143, "itself": [143, 195, 266], "cube_dimension_qualified_nam": 143, "cube_hierarchy_nam": 143, "cube_hierarchy_qualified_nam": 143, "cube_nam": 143, "cube_qualified_nam": 143, "children_fold": 144, "children_queri": 144, "persona_group": 147, "persona_us": 147, "role_id": [147, 265], "power_bi_endors": 148, "endors": 148, "power": [148, 157], "bi": [148, 257], "power_bi_format_str": 148, "format_str": 148, "mdx": 148, "cell": 148, "power_bi_is_hidden": 148, "power_bi_table_qualified_nam": 148, "dataset_qualified_nam": [149, 154, 156, 157], "power_bi_column_data_categori": 149, "power_bi_column_data_typ": 149, "power_bi_column_summarize_bi": 149, "aggreg": [149, 268, 269, 270, 271, 272, 273, 274, 276, 277, 287], "function": [149, 191, 203, 257, 265, 266, 270, 271, 272], "summar": 149, "power_bi_sort_by_column": 149, "workspace_qualified_nam": [149, 150, 151, 152, 154, 155, 156, 157, 158], "tile_count": 150, "web_url": [150, 151, 152, 156, 159], "sourceurl": [150, 151, 152, 156], "dataflow": [151, 152, 159], "connection_detail": 153, "power_bi_is_external_measur": 154, "power_bi_measure_express": 154, "dax": 154, "report_qualified_nam": 155, "page": [155, 156, 206, 211, 212], "page_count": 156, "power_bi_table_column_count": 157, "power_bi_table_measure_count": 157, "power_bi_table_source_express": 157, "m": 157, "dashboard_qualified_nam": 158, "dashboard_count": 159, "dataflow_count": 159, "dataset_count": 159, "report_count": [159, 198], "preset_dashboard_id": 160, "preset_dashboard_qualified_nam": 160, "preset_workspace_id": 160, "preset_workspace_qualified_nam": 160, "preset_chart_description_markdown": 161, "preset_chart_form_data": 161, "preset_dashboard": [161, 163, 164], "preset_chart": 162, "preset_dashboard_changed_by_nam": 162, "preset_dashboard_changed_by_url": 162, "preset_dashboard_chart_count": 162, "preset_dashboard_is_managed_extern": 162, "preset_dashboard_is_publish": 162, "preset_dashboard_thumbnail_url": 162, "preset_dataset": 162, "preset_workspac": 162, "preset_dataset_datasource_nam": 163, "preset_dataset_id": 163, "preset_dataset_typ": 163, "preset_workspace_cluster_id": 164, "preset_workspace_dashboard_count": 164, "preset_workspace_dataset_count": 164, "preset_workspace_deployment_id": 164, "preset_workspace_hostnam": 164, "preset_workspace_is_in_maintenance_mod": 164, "preset_workspace_public_dashboards_allow": 164, "preset_workspace_region": 164, "preset_workspace_statu": 164, "purpose_classif": 168, "qlik_app_id": 169, "app": [169, 170, 226], "qlik_app_qualified_nam": 169, "qlik_id": 169, "qlik_is_publish": 169, "publish": [169, 180, 187, 215, 234], "qlik_owner_id": 169, "qlik_qri": 169, "qri": 169, "qlik_space_id": 169, "space": [169, 170, 174], "qlik_space_qualified_nam": 169, "qlik_app_static_byte_s": 170, "qlik_has_section_access": 170, "section": 170, "mask": 170, "qlik_is_direct_query_mod": 170, "qlik_is_encrypt": 170, "qlik_origin_app_id": 170, "originappid": 170, "qlik_sheet": [170, 171], "qlik_spac": [170, 172], "qlik_chart_footnot": 171, "footnot": 171, "qlik_chart_orient": 171, "orient": 171, "qlik_chart_subtitl": 171, "qlik_chart_typ": 171, "bar": 171, "graph": [171, 285], "pie": 171, "qlik_dataset_subtyp": 172, "qlik_dataset_technical_nam": 172, "technic": [172, 248], "qlik_dataset_typ": 172, "qix": 172, "df": 172, "snowflak": 172, "qlik_dataset_uri": 172, "uri": 172, "qlik_app": [173, 174], "qlik_chart": 173, "qlik_sheet_is_approv": 173, "approv": [173, 256], "qlik_dataset": 174, "qlik_space_typ": 174, "privat": [174, 176], "share": [174, 176, 184], "qlikspac": [175, 257, 287], "default_database_qualified_nam": 176, "default_schema_qualified_nam": 176, "is_priv": 176, "is_sql_snippet": 176, "snippet": 176, "is_visual_queri": 176, "long_raw_queri": 176, "raw_queri": 176, "longrawqueri": 176, "raw_query_text": 176, "variables_schema_base64": 176, "base64": 176, "variabl": 176, "visual_builder_schema_base64": 176, "builder": 176, "quick_sight_id": 177, "quick_sight_sheet_id": 177, "quick_sight_sheet_nam": 177, "quick_sight_analysis_calculated_field": 178, "analysi": [178, 179, 246, 248, 269, 271, 272, 277], "quick_sight_analysis_filter_group": 178, "quick_sight_analysis_fold": 178, "quick_sight_analysis_parameter_declar": 178, "quick_sight_analysis_statu": 178, "creation_in_progress": 178, "update_success": 178, "quick_sight_analysis_visu": 178, "quick_sight_analysi": 179, "quick_sight_analysis_qualified_nam": 179, "quicksight": [179, 257], "quick_sight_dashboard_fold": 180, "quick_sight_dashboard_last_published_tim": 180, "quick_sight_dashboard_published_version_numb": 180, "quick_sight_dashboard_visu": 180, "quick_sight_dashboard": [181, 184], "quick_sight_dashboard_qualified_nam": 181, "quick_sight_dataset_column_count": 182, "quick_sight_dataset_field": 182, "quick_sight_dataset_fold": 182, "quick_sight_dataset_import_mod": 182, "import": 182, "spice": 182, "direct_queri": 182, "quick_sight_dataset": [183, 184], "quick_sight_dataset_field_typ": 183, "integ": [183, 248], "quick_sight_dataset_qualified_nam": 183, "quick_sight_analys": 184, "quick_sight_folder_hierarchi": 184, "quick_sight_folder_typ": 184, "templat": [186, 255], "redash_is_publish": 187, "redash_dashboard_widget_count": 188, "widget": [188, 214, 218], "redash_query_last_executed_at": 189, "redash_query_last_execution_runtim": 189, "elaps": 189, "redash_query_paramet": 189, "redash_query_schedul": 189, "redash_query_schedule_human": 189, "schdule": 189, "overview": 189, "tab": 189, "redash_query_sql": 189, "redash_visu": 189, "redash_queri": 190, "redash_query_nam": 190, "redash_query_qualified_nam": 190, "redash_visualization_typ": 190, "assigned_term": 191, "internalkeywordtextfield": 191, "atlan_tag": 191, "directli": 191, "created_bi": 191, "internalkeywordfield": 191, "create_tim": 191, "internalnumericfield": 191, "propagated_atlan_tag": 191, "propag": [191, 265, 281], "fulli": [191, 197], "v": 191, "super_type_nam": 191, "super": 191, "type_nam": 191, "so": [191, 265, 266, 269, 271, 272, 277, 278], "updated_bi": 191, "update_tim": 191, "arg": [191, 267, 281, 282], "kwarg": [191, 281, 282], "suppli": [191, 265], "dump": [191, 265], "other": [191, 265, 266, 267, 279, 287], "is_glob": 192, "resource_metadata": 192, "aw": [193, 257], "s3encrypt": 193, "s3e_tag": 193, "s3bucket_versioning_en": 194, "s3object_count": 194, "s3bucket_nam": 195, "s3bucket_qualified_nam": 195, "s3object_content_disposit": 195, "s3object_content_typ": 195, "plain": 195, "s3object_kei": 195, "ident": 195, "usual": 195, "concaten": 195, "prefix": [195, 205, 269, 270, 271, 272], "s3object_last_modified_tim": 195, "never": 195, "s3object_s": 195, "s3object_storage_class": 195, "intellig": 195, "glacier": 195, "s3object_version_id": 195, "api_nam": 197, "organization_qualified_nam": 197, "dashboard_typ": 198, "salesforc": [198, 201, 202, 257], "source_id": [198, 201, 202], "default_value_formula": 199, "formula": [199, 232, 235], "inline_help_text": 199, "help": 199, "is_calcul": 199, "is_case_sensit": 199, "is_encrypt": 199, "is_polymorphic_foreign_kei": 199, "record": 199, "is_uniqu": 199, "lookup_object": 199, "object_qualified_nam": 199, "picklist_valu": 199, "pick": 199, "while": 199, "field_count": 200, "is_custom": 200, "is_merg": 200, "mergabl": 200, "is_query": 200, "queryabl": 200, "lookup_field": 200, "detail_column": 202, "report_typ": 202, "linked_schema_qualified_nam": 203, "depend": 203, "concept": 203, "mostli": 203, "bigqueri": 203, "analyt": [203, 248], "hub": 203, "procedur": [203, 257, 287], "snowflake_pip": 203, "snowflake_stream": 203, "snowflake_tag": 203, "table_count": 203, "views_count": 203, "schema_registry_schema_id": 204, "registri": 204, "schema_registry_schema_typ": 204, "protobuf": 204, "schema_registry_subject_base_nam": 205, "base": [205, 216, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278], "subject": 205, "without": 205, "schema_registry_subject_governing_asset_qualified_nam": 205, "govern": 205, "schema_registry_subject_is_key_schema": 205, "schema_registry_subject_latest_schema_definit": 205, "schema_registry_subject_latest_schema_vers": 205, "schema_registry_subject_schema_compat": 205, "compat": 205, "sigma_data_element_nam": 206, "element": [206, 207, 211, 287], "sigma_data_element_qualified_nam": 206, "sigma_page_nam": 206, "sigma_page_qualified_nam": 206, "sigma_workbook_nam": 206, "workbook": [206, 212, 232, 233, 234, 235, 238, 240, 241], "sigma_workbook_qualified_nam": 206, "sigma_data_element_field": 207, "sigma_data_element_field_count": 207, "sigma_data_element_queri": 207, "sigma_data_element_typ": 207, "sigma_pag": [207, 212], "sigma_data_el": [208, 211], "sigma_data_element_field_formula": 208, "sigma_data_element_field_is_hidden": 208, "sigma_dataset_column": 209, "sigma_dataset_column_count": 209, "sigma_dataset": 210, "sigma_dataset_nam": 210, "sigma_dataset_qualified_nam": 210, "sigma_data_element_count": 211, "sigma_workbook": 211, "sigma_page_count": 212, "sisense_dashboard_folder_qualified_nam": 214, "sisense_dashboard_widget_count": 214, "sisense_datamodel": [214, 216], "sisense_fold": [214, 218], "sisense_widget": [214, 216, 217], "sisense_dashboard": [215, 217, 218], "sisense_datamodel_last_build_tim": 215, "datamodel": [215, 216], "built": 215, "sisense_datamodel_last_publish_tim": 215, "sisense_datamodel_last_successful_build_tim": 215, "successfulli": 215, "sisense_datamodel_relation_typ": 215, "extract": [215, 234], "regular": [215, 216, 270, 271, 272], "live": 215, "sisense_datamodel_revis": 215, "revis": 215, "sisense_datamodel_serv": 215, "hostnam": 215, "sisense_datamodel_t": [215, 218], "sisense_datamodel_table_count": 215, "sisense_datamodel_typ": 215, "sisense_datamodel_qualified_nam": 216, "sisense_datamodel_table_column_count": 216, "sisense_datamodel_table_express": 216, "sisense_datamodel_table_is_hidden": 216, "sisens": [216, 257], "sisense_datamodel_table_is_materi": 216, "materialis": 216, "sisense_datamodel_table_live_query_set": 216, "livequeri": 216, "sisense_datamodel_table_schedul": 216, "sisense_datamodel_table_typ": 216, "sisense_child_fold": 217, "sisense_folder_parent_folder_qualified_nam": 217, "sisense_parent_fold": 217, "sisense_widget_column_count": 218, "sisense_widget_dashboard_qualified_nam": 218, "sisense_widget_folder_qualified_nam": 218, "sisense_widget_s": 218, "sisense_widget_sub_typ": 218, "pipe": 220, "snowflake_pipe_is_auto_ingest_en": 220, "auto": 220, "ingest": 220, "snowflake_pipe_notification_channel_nam": 220, "channel": 220, "snowflake_stream_is_stal": 221, "snowflake_stream_mod": 221, "snowflake_stream_source_typ": 221, "snowflake_stream_stale_aft": 221, "snowflake_stream_typ": 221, "append": [221, 287], "soda_check_asset": 224, "soda_check_column": 224, "soda_check_definit": 224, "soda_check_evaluation_statu": 224, "soda_check_id": 224, "soda_check_incident_count": 224, "soda_check_last_scan_at": 224, "spark_run_end_tim": 225, "eg": [225, 226], "1695673598218": 225, "spark_run_open_lineage_st": 225, "complet": [225, 279], "spark_run_open_lineage_vers": 225, "spark_run_start_tim": 225, "spark_run_vers": 225, "3": 225, "4": [225, 226], "spark_app_nam": 226, "spark": [226, 257], "extract_raw_data": 226, "spark_mast": 226, "master": 226, "7077": 226, "stakeholder_data_domain": 228, "stakeholder_domain_qualified_nam": 228, "stakeholder_titl": 228, "stakeholder_title_guid": 228, "stakeholder_title_domain_qualified_nam": 229, "arrai": 229, "datasource_qualified_nam": [232, 235], "data_categori": 232, "project_hierarchi": [232, 233, 234, 235, 236, 237, 238, 240, 241], "project_qualified_nam": [232, 233, 234, 235, 236, 237, 240, 241], "unknown": [232, 235], "site_qualified_nam": [232, 233, 234, 235, 236, 237, 238, 240, 241], "site": [232, 233, 234, 235, 236, 237, 238, 240, 241], "tableau_data_typ": 232, "tableau": [232, 234, 235, 257], "top_level_project_qualified_nam": [232, 233, 234, 235, 236, 237, 238, 240, 241], "upstream_field": [232, 235], "upstream": [232, 234, 235], "workbook_qualified_nam": [232, 233, 234, 235, 241], "worksheet": [232, 233, 235, 240, 241, 248], "child": [233, 234, 235, 236, 237, 238, 240, 241], "certification_not": 234, "cerfifi": 234, "mark": 234, "cerifi": 234, "certifier_display_nam": 234, "has_extract": 234, "is_certifi": 234, "is_publish": 234, "embed": [234, 266], "upstream_datasourc": 234, "upstream_t": [234, 235], "datasource_field_typ": 235, "fully_qualified_nam": 235, "tableau_datasource_field_bin_s": 235, "bin": 235, "tableau_datasource_field_data_categori": 235, "tableau_datasource_field_data_typ": 235, "tableau_datasource_field_formula": 235, "tableau_datasource_field_rol": 235, "upstream_column": 235, "input_field": 236, "flow": [236, 238], "output_field": 236, "output_step": 236, "step": 236, "child_project": 238, "is_top_level_project": 238, "parent_project": 238, "top_level_project_nam": 240, "calculated_field": 241, "datasource_field": 241, "child_table_partit": 242, "constraint": [242, 287], "parent_t": 242, "parent_table_partit": 242, "tag_attachment_string_valu": 244, "tag_qualified_nam": 244, "task_act": 245, "action": [245, 266], "task_execution_act": 245, "recipi": 245, "task_execution_com": 245, "comment": [245, 256], "task_expires_at": 245, "task_is_read": 245, "flag": 245, "make": [245, 265, 266], "unread": 245, "task_propos": 245, "payload": 245, "propos": 245, "task_recipi": 245, "task_related_asset_guid": 245, "assetid": 245, "task_requestor": 245, "requestor": 245, "task_requestor_com": 245, "task_typ": 245, "thoughtspot_chart_typ": 246, "thoughtspot_column_count": 246, "thoughtspot_join_count": 246, "join": 246, "thoughtspot_question_text": 246, "thoughtspot": [247, 257], "thoughtspot_column_data_typ": 248, "float": [248, 287], "boolean": [248, 268, 282], "thoughtspot_column_typ": 248, "categor": 248, "thoughtspot_t": 248, "thoughtspot_table_qualified_nam": 248, "thoughtspot_view": 248, "thoughtspot_view_qualified_nam": 248, "thoughtspot_worksheet": 248, "thoughtspot_worksheet_qualified_nam": 248, "thoughtspot_liveboard": 249, "thoughtspot_liveboard_nam": 249, "liveboard": 249, "dashlet": 249, "thoughtspot_liveboard_qualified_nam": 249, "thoughtspot_dashlet": 250, "thoughtspot_column": [251, 252, 253], "workflow_config": 255, "workflow_created_bi": 255, "workflow_deleted_at": 255, "workflow_run_expires_in": 255, "workflow_statu": 255, "workflow_template_guid": 255, "workflow_typ": 255, "workflow_updated_bi": 255, "workflow_run_com": 256, "workflow_run_config": 256, "workflow_run_created_bi": 256, "workflow_run_deleted_at": 256, "workflow_run_expires_at": 256, "workflow_run_on_asset_guid": 256, "workflow_run_statu": 256, "workflow_run_typ": 256, "workflow_run_updated_bi": 256, "workflow_run_workflow_guid": 256, "you": [257, 265, 266, 267, 278, 279, 289], "interact": [257, 265, 289], "follow": 257, "differ": [257, 279], "adlsaccount": [257, 287], "adlscontain": [257, 287], "adlsobject": [257, 287], "apipath": [257, 287], "apispec": [257, 287], "accesscontrol": 257, "airflow": 257, "airflowdag": 257, "airflowtask": 257, "atlasglossari": [257, 265, 287], "atlasglossarycategori": [257, 265, 287], "atlasglossaryterm": [257, 265, 287], "authpolici": 257, "authservic": 257, "azureeventhub": 257, "azureeventhubconsumergroup": 257, "azureservicebu": 257, "azureservicebusnamespac": 257, "azureservicebustop": 257, "biprocess": [257, 287], "badg": [257, 287], "calculationview": 257, "cloud": 257, "cognit": 257, "cogniteasset": 257, "cogniteev": 257, "cognitefil": 257, "cognitesequ": 257, "cognitetimeseri": 257, "cognosdashboard": 257, "cognosdatasourc": 257, "cognosexplor": 257, "cognosfil": 257, "cognosfold": 257, "cognosmodul": 257, "cognospackag": 257, "cognosreport": 257, "columnprocess": [257, 287], "cosmosmongodb": 257, "cosmosmongodbcollect": 257, "cosmosmongodbdatabas": 257, "cubedimens": 257, "cubefield": 257, "cubehierarchi": 257, "datacontract": 257, "datadomain": [257, 287], "datamesh": 257, "dataproduct": [257, 287], "dataqu": 257, "datastudio": 257, "datastudioasset": [257, 287], "dbtcolumnprocess": [257, 287], "dbtmetric": [257, 287], "dbtmodel": [257, 287], "dbtmodelcolumn": [257, 287], "dbtprocess": [257, 287], "dbtsourc": [257, 287], "dbttag": 257, "dbttest": 257, "domocard": 257, "domodashboard": 257, "domodataset": 257, "domodatasetcolumn": 257, "dynamodbglobalsecondaryindex": 257, "dynamodblocalsecondaryindex": 257, "dynamodbsecondaryindex": 257, "dynamodbt": 257, "eventstor": 257, "gcsbucket": [257, 287], "gcsobject": [257, 287], "infrastructur": 257, "kafkatop": [257, 287], "lookerdashboard": [257, 287], "lookerexplor": [257, 287], "lookerfield": [257, 287], "lookerfold": [257, 287], "lookerlook": [257, 287], "lookermodel": [257, 287], "lookerproject": [257, 287], "lookerqueri": [257, 287], "lookertil": [257, 287], "lookerview": [257, 287], "mcincid": [257, 287], "mcmonitor": [257, 287], "materialisedview": [257, 287], "matillioncompon": 257, "matilliongroup": 257, "matillionjob": 257, "matillionproject": 257, "metabas": 257, "metabasecollect": [257, 287], "metabasedashboard": [257, 287], "metabasequest": [257, 287], "microstrategi": 257, "microstrategyattribut": 257, "microstrategycub": 257, "microstrategydocu": 257, "microstrategydossi": 257, "microstrategyfact": 257, "microstrategymetr": 257, "microstrategyproject": 257, "microstrategyreport": 257, "microstrategyvisu": 257, "modechart": [257, 287], "modecollect": [257, 287], "modequeri": [257, 287], "modereport": [257, 287], "modeworkspac": [257, 287], "mongodbcollect": 257, "mongodbdatabas": 257, "montecarlo": 257, "multidimensionaldataset": 257, "objectstor": 257, "persona": [257, 265, 283, 288], "powerbi": 257, "powerbicolumn": [257, 287], "powerbidashboard": [257, 287], "powerbidataflow": [257, 287], "powerbidataset": [257, 287], "powerbidatasourc": [257, 287], "powerbimeasur": [257, 287], "powerbipag": [257, 287], "powerbireport": [257, 287], "powerbit": [257, 287], "powerbitil": [257, 287], "powerbiworkspac": [257, 287], "preset": 257, "presetchart": [257, 287], "presetdashboard": [257, 287], "presetdataset": [257, 287], "presetworkspac": [257, 287], "processexecut": 257, "qlik": 257, "qlikapp": [257, 287], "qlikchart": [257, 287], "qlikdataset": [257, 287], "qliksheet": [257, 287], "qlikstream": [257, 287], "quicksightanalysi": [257, 287], "quicksightanalysisvisu": [257, 287], "quicksightdashboard": [257, 287], "quicksightdashboardvisu": [257, 287], "quicksightdataset": [257, 287], "quicksightdatasetfield": [257, 287], "quicksightfold": [257, 287], "readmetempl": [257, 287], "redash": 257, "redashdashboard": [257, 287], "redashqueri": [257, 287], "redashvisu": [257, 287], "referenc": 257, "s3bucket": [257, 287], "s3object": [257, 287], "saa": 257, "salesforcedashboard": [257, 287], "salesforcefield": [257, 287], "salesforceobject": [257, 287], "salesforceorgan": [257, 287], "salesforcereport": [257, 287], "schemaregistri": 257, "schemaregistrysubject": 257, "sigma": 257, "sigmadatael": [257, 287], "sigmadataelementfield": [257, 287], "sigmadataset": [257, 287], "sigmadatasetcolumn": [257, 287], "sigmapag": [257, 287], "sigmaworkbook": [257, 287], "sisensedashboard": 257, "sisensedatamodel": 257, "sisensedatamodelt": 257, "sisensefold": 257, "sisensewidget": 257, "snowflakedynamict": 257, "snowflakepip": [257, 287], "snowflakestream": [257, 287], "snowflaketag": [257, 287], "sodacheck": 257, "sparkjob": 257, "stakeholdertitl": 257, "tablepartit": [257, 287], "tableaucalculatedfield": [257, 287], "tableaudashboard": [257, 287], "tableaudatasourc": [257, 287], "tableaudatasourcefield": [257, 287], "tableauflow": [257, 287], "tableaumetr": [257, 287], "tableauproject": [257, 287], "tableausit": [257, 287], "tableauworkbook": [257, 287], "tableauworksheet": [257, 287], "tagattach": 257, "thoughtspotansw": [257, 287], "thoughtspotcolumn": 257, "thoughtspotdashlet": [257, 287], "thoughtspotliveboard": [257, 287], "thoughtspott": 257, "thoughtspotview": 257, "thoughtspotworksheet": 257, "workflowrun": 257, "atlan_tag_cach": 258, "typedef_cli": [258, 259, 260], "typedefcli": [258, 259, 260], "lazili": [258, 259, 260, 261, 262, 263], "load": [258, 259, 260, 261, 262, 263], "translat": [258, 259, 261, 262, 263, 264, 287], "get_id_for_nam": [258, 259, 261, 262, 263], "get_name_for_id": [258, 259, 261, 262, 263], "idstr": [258, 259, 261, 262, 263], "get_source_tags_attr_id": 258, "captur": [258, 275], "refresh_cach": [258, 259, 260], "full": [258, 259, 260], "custom_metadata_cach": 259, "get_all_custom_attribut": 259, "include_delet": 259, "force_refresh": 259, "attributedef": [259, 287], "those": [259, 266, 267], "otherwis": [259, 266, 269, 270, 271, 272], "rais": [259, 260, 261, 262, 263, 265], "notfounderror": [259, 260, 267], "cannot": 259, "found": 259, "get_attr_id_for_nam": 259, "set_nam": [259, 269], "attr_nam": 259, "get_attr_name_for_id": 259, "set_id": 259, "attr_id": 259, "given": [259, 260, 261, 262, 263, 267, 282], "get_attribute_def": 259, "invalidrequesterror": [259, 267], "get_attribute_for_search_result": 259, "singl": 259, "strictli": [259, 269, 273, 274], "inclus": [259, 269, 273, 274], "get_attributes_for_search_result": 259, "get_custom_metadata_def": 259, "custommetadatadef": [259, 287], "structur": 259, "is_attr_archiv": 259, "param": [259, 268, 269, 270, 271, 272, 273, 274, 276, 277, 287], "logicerror": [259, 267], "enum_cach": 260, "enumer": [260, 278, 285, 287], "get_by_nam": [260, 265], "enumdef": [260, 287], "group_cach": 261, "group_client": 261, "groupclient": 261, "get_id_for_alia": 261, "validate_alias": 261, "alias": 261, "iter": [261, 262, 263], "valueerror": [261, 262, 263], "role_cach": 262, "role_cli": 262, "rolecli": 262, "validate_idstr": 262, "user_cach": 263, "user_cli": 263, "usercli": 263, "token_cli": 263, "tokencli": 263, "get_id_for_email": 263, "validate_nam": 263, "frequent": 264, "atlantagcach": 264, "custommetadatacach": 264, "enumcach": 264, "groupcach": 264, "rolecach": 264, "usercach": 264, "atlancli": [265, 266], "base_url": 265, "liter": [265, 287], "httpurl": 265, "api_kei": 265, "add_api_token_as_admin": 265, "asset_guid": 265, "impersonation_token": 265, "assetmutationrespons": 265, "add_as_admin": 265, "add_api_token_as_view": 265, "add_as_view": 265, "add_atlan_tag": 265, "asset_typ": 265, "atlan_tag_nam": 265, "remove_propagation_on_delet": 265, "restrict_lineage_propag": 265, "restrict_propagation_through_hierarchi": 265, "add_user_to_group": 265, "group_id": 265, "add_to_group": 265, "append_term": 265, "change_user_rol": 265, "change_rol": 265, "construct": 265, "_fields_set": 265, "setstr": 265, "__dict__": 265, "__fields_set__": 265, "trust": 265, "pre": 265, "respect": 265, "behav": 265, "sinc": 265, "add": [265, 287], "copi": 265, "abstractsetintstr": 265, "mappingintstrani": 265, "dictstrani": 265, "deep": 265, "choos": 265, "take": 265, "preced": 265, "create_api_token": 265, "validity_second": 265, "apitoken": 265, "token": [265, 267, 269, 271, 272, 277], "create_group": 265, "atlangroup": [265, 283], "user_id": 265, "creategrouprespons": 265, "create_typedef": 265, "typedef": [265, 289], "typedefrespons": [265, 287], "create_us": 265, "atlanus": [265, 288], "delete_entity_by_guid": 265, "by_alia": 265, "skip_default": 265, "exclude_unset": 265, "exclude_default": 265, "exclude_non": 265, "dictionari": 265, "find_category_by_nam": 265, "constrainedstrvalu": 265, "glossary_nam": 265, "strictstr": [265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277], "find_category_fast_by_nam": 265, "glossary_qualified_nam": 265, "find_connections_by_nam": 265, "connector_typ": 265, "atlanconnectortyp": 265, "find_glossary_by_nam": 265, "find_personas_by_nam": 265, "find_purposes_by_nam": 265, "find_term_by_nam": 265, "find_term_fast_by_nam": 265, "get_admin_ev": 265, "admin_request": 265, "admineventrequest": 265, "admineventrespons": 265, "admin": 265, "get_all_group": 265, "limit": [265, 285], "20": 265, "get_al": 265, "get_all_rol": 265, "rolerespons": 265, "self": 265, "get_all_typedef": 265, "get_all_us": 265, "get_api_token_by_id": 265, "client_id": 265, "get_by_id": 265, "get_api_token_by_nam": 265, "get_api_token": 265, "post_filt": 265, "offset": [265, 281, 285], "apitokenrespons": 265, "get_asset_by_guid": 265, "min_ext_info": 265, "ignore_relationship": 265, "get_by_guid": 265, "get_asset_by_qualified_nam": 265, "get_by_qualified_nam": 265, "get_current_us": 265, "userminimalrespons": 265, "get_curr": 265, "get_default_cli": 265, "get_group_by_nam": 265, "get_group_memb": 265, "userrespons": 265, "get_memb": 265, "get_group": 265, "grouprespons": 265, "get_groups_for_us": 265, "get_keycloak_ev": 265, "keycloak_request": 265, "keycloakeventrequest": 265, "keycloakeventrespons": 265, "get_lineag": 265, "lineage_request": 265, "lineagerequest": [265, 285], "lineagerespons": [265, 285], "older": 265, "slower": 265, "receiv": [265, 266, 267], "enhanc": 265, "get_lineage_list": 265, "atlanerror": [265, 267], "commun": 265, "issu": [265, 267], "lineagelistresult": 265, "get_rol": 265, "get_typedef": 265, "type_categori": 265, "atlantypecategori": [265, 287], "get_user_by_usernam": 265, "get_by_usernam": 265, "get_us": 265, "get_users_by_email": 265, "get_by_email": 265, "callabl": 265, "models_as_dict": 265, "dumps_kwarg": 265, "max_retri": 265, "10": [265, 268, 269, 270, 271, 272, 273, 274, 276, 277], "redirect": 265, "manger": 265, "temporarili": 265, "connnect": 265, "origin": [265, 266], "restor": 265, "exit": 265, "parse_queri": 265, "queryparserrequest": 265, "parsedqueri": 265, "explan": 265, "purge_api_token": 265, "purg": 265, "purge_entity_by_guid": 265, "purge_by_guid": 265, "purge_group": 265, "purge_typedef": 265, "typedef_typ": 265, "remove_announc": 265, "remove_atlan_tag": 265, "remove_certif": 265, "remove_custom_metadata": 265, "cm_name": 265, "remove_term": 265, "remove_users_from_group": 265, "remove_us": 265, "replace_custom_metadata": 265, "custom_metadata": [265, 282, 287], "custommetadatadict": [265, 282], "replace_term": 265, "retrieve_minim": 265, "replace_atlan_tag": 265, "overwrite_custom_metadata": 265, "save_merging_cm": 265, "save_replacing_cm": 265, "indexsearchrequest": 265, "indexsearchresult": 265, "set_default_cli": 265, "update_announc": 265, "update_api_token": 265, "update_certif": 265, "update_custom_metadata_attribut": 265, "update_forward_ref": 265, "localn": 265, "try": [265, 266, 267], "forwardref": 265, "globaln": 265, "update_group": 265, "update_merging_cm": 265, "update_replacing_cm": 265, "update_typedef": 265, "update_us": 265, "upload_imag": 265, "filenam": [265, 280], "atlanimag": [265, 280], "upsert": 265, "upsert_merging_cm": 265, "upsert_replacing_cm": 265, "replace_atlan_tagss": 265, "simplifi": [266, 269], "implement": 266, "handl": [266, 279], "split": 266, "overal": 266, "processor": 266, "small": 266, "piec": 266, "atlan_event_handl": 266, "client": [266, 279], "calculate_chang": 266, "current_view": 266, "minim": [266, 287], "form": 266, "memori": 266, "typic": 266, "want": 266, "trim_to_requir": 266, "risk": 266, "accident": 266, "clobber": 266, "someon": 266, "mai": 266, "subsequ": 266, "also": [266, 269, 270, 271, 272, 274, 277], "your": [266, 267, 279], "has_chang": 266, "infinit": 266, "loop": 266, "more": [266, 267, 270, 271, 272, 287], "send": 266, "get_current_st": 266, "from_ev": 266, "info": 266, "handler": 266, "decis": 266, "realli": 266, "still": 266, "could": 266, "meant": 266, "idempot": 266, "avoid": 266, "repeatedli": 266, "blindli": 266, "equal": [266, 268, 269, 270, 271, 272, 273, 274], "It": 266, "like": [266, 279, 289], "would": 266, "rather": 266, "than": [266, 269, 273, 274], "entir": 266, "relev": 266, "against": [266, 267, 269, 270, 271, 272, 273, 274, 277], "need": 266, "save_chang": 266, "changed_asset": 266, "persist": 266, "upsert_chang": 266, "validate_prerequisit": 266, "atlanev": 266, "prerequisit": 266, "expect": 266, "confirm": 266, "met": 266, "except": 267, "error_cod": 267, "errorinfo": 267, "apiconnectionerror": 267, "intermitt": 267, "network": 267, "outag": 267, "inabl": 267, "due": 267, "incorrect": 267, "some": [267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279], "reason": 267, "insuffici": 267, "apierror": 267, "sdk": 267, "problem": 267, "wai": 267, "interpret": 267, "basic": 267, "catch": 267, "fit": 267, "authenticationerror": 267, "permissionerror": 267, "permiss": 267, "carri": [267, 269, 271, 272, 277], "natur": 267, "asynchron": 267, "grant": 267, "conflicterror": 267, "hit": 267, "conflict": 267, "alreadi": 267, "ratelimiterror": 267, "accept": 267, "ip": 267, "By": 267, "1800": 267, "minut": 267, "exce": 267, "begin": 267, "unexpect": 267, "aris": 267, "ever": 267, "experienc": 267, "immedi": 267, "bug": 267, "atlan_field_nam": [268, 270, 271, 272, 273, 274, 275, 276, 277], "boolean_field_nam": 268, "truthi": 268, "elast": [268, 270, 271, 272, 273, 274, 277], "bucket_bi": [268, 269, 270, 271, 272, 273, 274, 276, 277], "eq": [268, 269, 270, 271, 272, 273, 274], "strictbool": [268, 269], "whose": [268, 269, 270, 271, 272, 273, 274, 277], "exactli": [268, 269, 270, 271, 272, 273, 274], "has_any_valu": [268, 269, 270, 271, 272, 273, 274, 276, 277], "non": [268, 269, 270, 271, 272, 273, 274, 276, 277], "matter": [268, 269, 270, 271, 272, 273, 274, 276, 277], "what": [268, 269, 270, 271, 272, 273, 274, 276, 277, 289], "in_lineag": [268, 270, 271, 272, 273, 274, 277], "lineagefilterfieldboolean": 268, "appropri": [268, 270, 271, 272, 273, 274, 277], "subset": [268, 270, 271, 272, 273, 274, 277], "sortord": [268, 269, 270, 271, 272, 273, 274, 276, 277], "ascend": [268, 269, 270, 271, 272, 273, 274, 276, 277], "sortitem": [268, 269, 270, 271, 272, 273, 274, 276, 277], "attribute_nam": 269, "util": 269, "minimum": [269, 273, 274], "strictint": [269, 273, 274], "strictfloat": [269, 273, 274], "datetim": 269, "case_insensit": [269, 270, 271, 272], "irrespect": [269, 270, 271, 272], "gt": [269, 273, 274], "greater": [269, 273, 274], "compar": [269, 273, 274], "gte": [269, 273, 274], "lt": [269, 273, 274], "less": [269, 273, 274], "lte": [269, 273, 274], "textual": [269, 271, 272, 277], "analyz": [269, 270, 271, 272, 277], "accord": [269, 271, 272, 277], "stem": [269, 271, 272, 277], "startswith": [269, 270, 271, 272], "insensit": [269, 270, 271, 272], "keyword_field_nam": [270, 271, 272], "keyword": [270, 271, 272], "fuzzi": 270, "lineagefilterfieldstr": [270, 271, 272, 277], "regexp": [270, 271, 272], "particularli": [270, 271, 272], "complic": [270, 271, 272], "convent": [270, 271, 272], "regex": [270, 271, 272], "pattern": [270, 271, 272], "design": [270, 271, 272], "wildcard": [270, 271, 272], "text_field_nam": [271, 272, 277], "stemmed_field_nam": 272, "variat": 272, "match_stem": 272, "numeric_field_nam": [273, 274], "avg": [273, 274], "lineagefilterfieldnumer": [273, 274], "max": [273, 274], "min": [273, 274], "rank_field_nam": 274, "rank": 274, "inher": 275, "elastic_field_nam": 276, "dictat": 278, "rememb": 278, "exact": 278, "spell": 278, "capit": 278, "subclass": 278, "searchablefield": 278, "custommetadatafield": 278, "integr": 279, "autom": 279, "thing": 279, "inevit": 279, "ll": 279, "deal": 279, "mani": 279, "too": 279, "deeper": 279, "event": [279, 289], "atlan_imag": 280, "createdat": 280, "updatedat": 280, "rawnam": 280, "contenttyp": 280, "files": 280, "isencrypt": 280, "redirecturl": 280, "isupload": 280, "uploadedat": 280, "isarchiv": 280, "atlantagnam": 281, "get_deleted_sentinel": [281, 282], "Will": [281, 282], "sentinel": [281, 282], "entityguid": 281, "removepropagationsonentitydelet": 281, "restrictpropagationthroughlineag": 281, "restrictpropagationthroughhierarchi": 281, "validityperiod": 281, "__root__": [281, 282], "enum": [281, 287], "fieldinfo": 281, "assetrequest": 281, "assetrespons": 281, "referredent": 281, "bulkrequest": 281, "searchrequest": 281, "manipul": 282, "business_attribut": 282, "resolv": 282, "clear_al": 282, "explicitli": 282, "clear_unset": 282, "haven": 282, "is_set": 282, "initi": 282, "custommetadataproxi": 282, "custommetadatarequest": 282, "decentralizedrol": [283, 288], "usercount": [283, 286], "keycloak_ev": 284, "keycloakev": 284, "clientid": 284, "ipaddress": 284, "realmid": 284, "sessionid": 284, "keycloakeventtyp": 284, "userid": 284, "adminev": [284, 288], "operationtyp": 284, "adminoperationtyp": 284, "resourcepath": 284, "resourcetyp": 284, "adminresourcetyp": 284, "authdetail": 284, "lineagegraph": 285, "downstream_list": 285, "directedpair": 285, "upstream_list": 285, "lineagedirect": 285, "entityfilt": 285, "filterlist": 285, "entitytraversalfilt": 285, "relationshiptraversalfilt": 285, "excludemean": 285, "excludeclassif": 285, "attributenam": 285, "atlancomparisonoper": 285, "attributevalu": 285, "AND": 285, "criterion": 285, "both": 285, "hideprocess": 285, "allowdeletedprocess": 285, "baseentityguid": 285, "lineagedepth": 285, "hasmoreupstreamvertic": 285, "hasmoredownstreamvertic": 285, "guidentitymap": 285, "lineagerel": 285, "vertexchildreninfo": 285, "atlanrol": 286, "clientrol": 286, "membercount": 286, "typevers": 287, "atlantagdef": 287, "entitytyp": 287, "supertyp": 287, "servicetyp": 287, "skipdisplaynameuniquenesscheck": 287, "isnew": 287, "cardin": 287, "enumvalu": 287, "defaultvalu": 287, "includeinnotif": 287, "indextyp": 287, "isindex": 287, "isopt": 287, "isuniqu": 287, "searchweight": 287, "skipscrub": 287, "valuesmincount": 287, "valuesmaxcount": 287, "indextypeesconfig": 287, "indextypeesfield": 287, "isdefaultvaluenul": 287, "applicable_asset_typ": 287, "restrict": 287, "applicable_connect": 287, "applicable_domain_typ": 287, "cover": 287, "applicable_domain": 287, "applicable_entity_typ": 287, "left": 287, "overrid": 287, "applicable_glossary_typ": 287, "applicable_other_asset_typ": 287, "applicable_glossari": 287, "elementdef": 287, "necessari": 287, "get_valid_valu": 287, "replace_exist": 287, "ones": 287, "relationshipattributedef": 287, "islegacyattribut": 287, "relationshiptypenam": 287, "structdef": 287, "entitydef": 287, "businessattributedef": 287, "relationshipdef": 287, "enddef1": 287, "enddef2": 287, "propagatetag": 287, "one_to_two": 287, "relationshipcategori": 287, "relationshiplabel": 287, "__salesforceorgan": 287, "classificationdef": 287, "businessmetadatadef": 287, "workspacerol": 288, "emailverifi": 288, "firstnam": 288, "lastnam": 288, "createdtimestamp": 288, "lastlogintim": 288, "groupcount": 288, "defaultrol": 288, "loginev": 288, "asid": 289, "major": 289, "core": 289, "keycloak": 289}, "objects": {"pyatlan.cache.atlan_tag_cache": [[258, 0, 1, "", "AtlanTagCache"]], "pyatlan.cache.atlan_tag_cache.AtlanTagCache": [[258, 1, 1, "", "get_id_for_name"], [258, 1, 1, "", "get_name_for_id"], [258, 1, 1, "", "get_source_tags_attr_id"], [258, 1, 1, "", "refresh_cache"]], "pyatlan.cache.custom_metadata_cache": [[259, 0, 1, "", "CustomMetadataCache"]], "pyatlan.cache.custom_metadata_cache.CustomMetadataCache": [[259, 1, 1, "", "get_all_custom_attributes"], [259, 1, 1, "", "get_attr_id_for_name"], [259, 1, 1, "", "get_attr_name_for_id"], [259, 1, 1, "", "get_attribute_def"], [259, 1, 1, "", "get_attribute_for_search_results"], [259, 1, 1, "", "get_attributes_for_search_results"], [259, 1, 1, "", "get_custom_metadata_def"], [259, 1, 1, "", "get_id_for_name"], [259, 1, 1, "", "get_name_for_id"], [259, 1, 1, "", "is_attr_archived"], [259, 1, 1, "", "refresh_cache"]], "pyatlan.cache.enum_cache": [[260, 0, 1, "", "EnumCache"]], "pyatlan.cache.enum_cache.EnumCache": [[260, 1, 1, "", "get_by_name"], [260, 1, 1, "", "refresh_cache"]], "pyatlan.cache.group_cache": [[261, 0, 1, "", "GroupCache"]], "pyatlan.cache.group_cache.GroupCache": [[261, 1, 1, "", "get_id_for_alias"], [261, 1, 1, "", "get_id_for_name"], [261, 1, 1, "", "get_name_for_id"], [261, 1, 1, "", "validate_aliases"]], "pyatlan.cache.role_cache": [[262, 0, 1, "", "RoleCache"]], "pyatlan.cache.role_cache.RoleCache": [[262, 1, 1, "", "get_id_for_name"], [262, 1, 1, "", "get_name_for_id"], [262, 1, 1, "", "validate_idstrs"]], "pyatlan.cache.user_cache": [[263, 0, 1, "", "UserCache"]], "pyatlan.cache.user_cache.UserCache": [[263, 1, 1, "", "get_id_for_email"], [263, 1, 1, "", "get_id_for_name"], [263, 1, 1, "", "get_name_for_id"], [263, 1, 1, "", "validate_names"]], "pyatlan.client.atlan": [[265, 0, 1, "", "AtlanClient"]], "pyatlan.client.atlan.AtlanClient": [[265, 1, 1, "", "add_api_token_as_admin"], [265, 1, 1, "", "add_api_token_as_viewer"], [265, 1, 1, "", "add_atlan_tags"], [265, 1, 1, "", "add_user_to_groups"], [265, 1, 1, "", "append_terms"], [265, 1, 1, "", "change_user_role"], [265, 1, 1, "", "construct"], [265, 1, 1, "", "copy"], [265, 1, 1, "", "create_api_token"], [265, 1, 1, "", "create_group"], [265, 1, 1, "", "create_typedef"], [265, 1, 1, "", "create_users"], [265, 1, 1, "", "delete_entity_by_guid"], [265, 1, 1, "", "dict"], [265, 1, 1, "", "find_category_by_name"], [265, 1, 1, "", "find_category_fast_by_name"], [265, 1, 1, "", "find_connections_by_name"], [265, 1, 1, "", "find_glossary_by_name"], [265, 1, 1, "", "find_personas_by_name"], [265, 1, 1, "", "find_purposes_by_name"], [265, 1, 1, "", "find_term_by_name"], [265, 1, 1, "", "find_term_fast_by_name"], [265, 1, 1, "", "get_admin_events"], [265, 1, 1, "", "get_all_groups"], [265, 1, 1, "", "get_all_roles"], [265, 1, 1, "", "get_all_typedefs"], [265, 1, 1, "", "get_all_users"], [265, 1, 1, "", "get_api_token_by_id"], [265, 1, 1, "", "get_api_token_by_name"], [265, 1, 1, "", "get_api_tokens"], [265, 1, 1, "", "get_asset_by_guid"], [265, 1, 1, "", "get_asset_by_qualified_name"], [265, 1, 1, "", "get_current_user"], [265, 1, 1, "", "get_default_client"], [265, 1, 1, "", "get_group_by_name"], [265, 1, 1, "", "get_group_members"], [265, 1, 1, "", "get_groups"], [265, 1, 1, "", "get_groups_for_user"], [265, 1, 1, "", "get_keycloak_events"], [265, 1, 1, "", "get_lineage"], [265, 1, 1, "", "get_lineage_list"], [265, 1, 1, "", "get_roles"], [265, 1, 1, "", "get_typedefs"], [265, 1, 1, "", "get_user_by_username"], [265, 1, 1, "", "get_users"], [265, 1, 1, "", "get_users_by_email"], [265, 1, 1, "", "json"], [265, 1, 1, "", "max_retries"], [265, 1, 1, "", "parse_query"], [265, 1, 1, "", "purge_api_token"], [265, 1, 1, "", "purge_entity_by_guid"], [265, 1, 1, "", "purge_group"], [265, 1, 1, "", "purge_typedef"], [265, 1, 1, "", "remove_announcement"], [265, 1, 1, "", "remove_atlan_tag"], [265, 1, 1, "", "remove_certificate"], [265, 1, 1, "", "remove_custom_metadata"], [265, 1, 1, "", "remove_terms"], [265, 1, 1, "", "remove_users_from_group"], [265, 1, 1, "", "replace_custom_metadata"], [265, 1, 1, "", "replace_terms"], [265, 1, 1, "", "restore"], [265, 1, 1, "", "retrieve_minimal"], [265, 1, 1, "", "save"], [265, 1, 1, "", "save_merging_cm"], [265, 1, 1, "", "save_replacing_cm"], [265, 1, 1, "", "search"], [265, 1, 1, "", "set_default_client"], [265, 1, 1, "", "update_announcement"], [265, 1, 1, "", "update_api_token"], [265, 1, 1, "", "update_certificate"], [265, 1, 1, "", "update_custom_metadata_attributes"], [265, 1, 1, "", "update_forward_refs"], [265, 1, 1, "", "update_group"], [265, 1, 1, "", "update_merging_cm"], [265, 1, 1, "", "update_replacing_cm"], [265, 1, 1, "", "update_typedef"], [265, 1, 1, "", "update_user"], [265, 1, 1, "", "upload_image"], [265, 1, 1, "", "upsert"], [265, 1, 1, "", "upsert_merging_cm"], [265, 1, 1, "", "upsert_replacing_cm"]], "pyatlan.errors": [[267, 2, 1, "", "ApiConnectionError"], [267, 2, 1, "", "ApiError"], [267, 2, 1, "", "AtlanError"], [267, 2, 1, "", "AuthenticationError"], [267, 2, 1, "", "ConflictError"], [267, 2, 1, "", "InvalidRequestError"], [267, 2, 1, "", "LogicError"], [267, 2, 1, "", "NotFoundError"], [267, 2, 1, "", "PermissionError"], [267, 2, 1, "", "RateLimitError"]], "pyatlan.events.atlan_event_handler": [[266, 0, 1, "", "AtlanEventHandler"]], "pyatlan.events.atlan_event_handler.AtlanEventHandler": [[266, 1, 1, "", "calculate_changes"], [266, 1, 1, "", "get_current_state"], [266, 1, 1, "", "has_changes"], [266, 1, 1, "", "save_changes"], [266, 1, 1, "", "upsert_changes"], [266, 1, 1, "", "validate_prerequisites"]], "pyatlan.model.assets": [[1, 0, 1, "", "ADLS"], [2, 0, 1, "", "ADLSAccount"], [3, 0, 1, "", "ADLSContainer"], [4, 0, 1, "", "ADLSObject"], [8, 0, 1, "", "API"], [9, 0, 1, "", "APIPath"], [10, 0, 1, "", "APISpec"], [17, 0, 1, "", "AWS"], [0, 0, 1, "", "AccessControl"], [5, 0, 1, "", "Airflow"], [6, 0, 1, "", "AirflowDag"], [7, 0, 1, "", "AirflowTask"], [11, 0, 1, "", "Asset"], [12, 0, 1, "", "AtlasGlossary"], [13, 0, 1, "", "AtlasGlossaryCategory"], [14, 0, 1, "", "AtlasGlossaryTerm"], [15, 0, 1, "", "AuthPolicy"], [16, 0, 1, "", "AuthService"], [18, 0, 1, "", "Azure"], [19, 0, 1, "", "AzureEventHub"], [20, 0, 1, "", "AzureEventHubConsumerGroup"], [21, 0, 1, "", "AzureServiceBus"], [22, 0, 1, "", "AzureServiceBusNamespace"], [23, 0, 1, "", "AzureServiceBusTopic"], [25, 0, 1, "", "BI"], [26, 0, 1, "", "BIProcess"], [24, 0, 1, "", "Badge"], [27, 0, 1, "", "CalculationView"], [28, 0, 1, "", "Catalog"], [29, 0, 1, "", "Cloud"], [30, 0, 1, "", "Cognite"], [31, 0, 1, "", "Cognite3DModel"], [32, 0, 1, "", "CogniteAsset"], [33, 0, 1, "", "CogniteEvent"], [34, 0, 1, "", "CogniteFile"], [35, 0, 1, "", "CogniteSequence"], [36, 0, 1, "", "CogniteTimeSeries"], [37, 0, 1, "", "Cognos"], [38, 0, 1, "", "CognosDashboard"], [39, 0, 1, "", "CognosDatasource"], [40, 0, 1, "", "CognosExploration"], [41, 0, 1, "", "CognosFile"], [42, 0, 1, "", "CognosFolder"], [43, 0, 1, "", "CognosModule"], [44, 0, 1, "", "CognosPackage"], [45, 0, 1, "", "CognosReport"], [46, 0, 1, "", "Collection"], [47, 0, 1, "", "Column"], [48, 0, 1, "", "ColumnProcess"], [49, 0, 1, "", "Connection"], [50, 0, 1, "", "CosmosMongoDB"], [51, 0, 1, "", "CosmosMongoDBCollection"], [52, 0, 1, "", "CosmosMongoDBDatabase"], [53, 0, 1, "", "Cube"], [54, 0, 1, "", "CubeDimension"], [55, 0, 1, "", "CubeField"], [56, 0, 1, "", "CubeHierarchy"], [58, 0, 1, "", "DataContract"], [59, 0, 1, "", "DataDomain"], [60, 0, 1, "", "DataMesh"], [61, 0, 1, "", "DataProduct"], [62, 0, 1, "", "DataQuality"], [63, 0, 1, "", "DataSet"], [64, 0, 1, "", "DataStudio"], [65, 0, 1, "", "DataStudioAsset"], [57, 0, 1, "", "Database"], [66, 0, 1, "", "Dbt"], [67, 0, 1, "", "DbtColumnProcess"], [68, 0, 1, "", "DbtMetric"], [69, 0, 1, "", "DbtModel"], [70, 0, 1, "", "DbtModelColumn"], [71, 0, 1, "", "DbtProcess"], [72, 0, 1, "", "DbtSource"], [73, 0, 1, "", "DbtTag"], [74, 0, 1, "", "DbtTest"], [75, 0, 1, "", "Domo"], [76, 0, 1, "", "DomoCard"], [77, 0, 1, "", "DomoDashboard"], [78, 0, 1, "", "DomoDataset"], [79, 0, 1, "", "DomoDatasetColumn"], [80, 0, 1, "", "DynamoDB"], [81, 0, 1, "", "DynamoDBGlobalSecondaryIndex"], [82, 0, 1, "", "DynamoDBLocalSecondaryIndex"], [83, 0, 1, "", "DynamoDBSecondaryIndex"], [84, 0, 1, "", "DynamoDBTable"], [85, 0, 1, "", "EventStore"], [86, 0, 1, "", "File"], [87, 0, 1, "", "Folder"], [88, 0, 1, "", "Function"], [89, 0, 1, "", "GCS"], [90, 0, 1, "", "GCSBucket"], [91, 0, 1, "", "GCSObject"], [92, 0, 1, "", "Google"], [93, 0, 1, "", "Infrastructure"], [94, 0, 1, "", "Insight"], [95, 0, 1, "", "Kafka"], [96, 0, 1, "", "KafkaConsumerGroup"], [97, 0, 1, "", "KafkaTopic"], [98, 0, 1, "", "Link"], [99, 0, 1, "", "Looker"], [100, 0, 1, "", "LookerDashboard"], [101, 0, 1, "", "LookerExplore"], [102, 0, 1, "", "LookerField"], [103, 0, 1, "", "LookerFolder"], [104, 0, 1, "", "LookerLook"], [105, 0, 1, "", "LookerModel"], [106, 0, 1, "", "LookerProject"], [107, 0, 1, "", "LookerQuery"], [108, 0, 1, "", "LookerTile"], [109, 0, 1, "", "LookerView"], [116, 0, 1, "", "MCIncident"], [117, 0, 1, "", "MCMonitor"], [110, 0, 1, "", "MaterialisedView"], [111, 0, 1, "", "Matillion"], [112, 0, 1, "", "MatillionComponent"], [113, 0, 1, "", "MatillionGroup"], [114, 0, 1, "", "MatillionJob"], [115, 0, 1, "", "MatillionProject"], [118, 0, 1, "", "Metabase"], [119, 0, 1, "", "MetabaseCollection"], [120, 0, 1, "", "MetabaseDashboard"], [121, 0, 1, "", "MetabaseQuestion"], [122, 0, 1, "", "Metric"], [123, 0, 1, "", "MicroStrategy"], [124, 0, 1, "", "MicroStrategyAttribute"], [125, 0, 1, "", "MicroStrategyCube"], [126, 0, 1, "", "MicroStrategyDocument"], [127, 0, 1, "", "MicroStrategyDossier"], [128, 0, 1, "", "MicroStrategyFact"], [129, 0, 1, "", "MicroStrategyMetric"], [130, 0, 1, "", "MicroStrategyProject"], [131, 0, 1, "", "MicroStrategyReport"], [132, 0, 1, "", "MicroStrategyVisualization"], [133, 0, 1, "", "Mode"], [134, 0, 1, "", "ModeChart"], [135, 0, 1, "", "ModeCollection"], [136, 0, 1, "", "ModeQuery"], [137, 0, 1, "", "ModeReport"], [138, 0, 1, "", "ModeWorkspace"], [139, 0, 1, "", "MongoDB"], [140, 0, 1, "", "MongoDBCollection"], [141, 0, 1, "", "MongoDBDatabase"], [142, 0, 1, "", "MonteCarlo"], [143, 0, 1, "", "MultiDimensionalDataset"], [144, 0, 1, "", "Namespace"], [145, 0, 1, "", "NoSQL"], [146, 0, 1, "", "ObjectStore"], [147, 0, 1, "", "Persona"], [148, 0, 1, "", "PowerBI"], [149, 0, 1, "", "PowerBIColumn"], [150, 0, 1, "", "PowerBIDashboard"], [151, 0, 1, "", "PowerBIDataflow"], [152, 0, 1, "", "PowerBIDataset"], [153, 0, 1, "", "PowerBIDatasource"], [154, 0, 1, "", "PowerBIMeasure"], [155, 0, 1, "", "PowerBIPage"], [156, 0, 1, "", "PowerBIReport"], [157, 0, 1, "", "PowerBITable"], [158, 0, 1, "", "PowerBITile"], [159, 0, 1, "", "PowerBIWorkspace"], [160, 0, 1, "", "Preset"], [161, 0, 1, "", "PresetChart"], [162, 0, 1, "", "PresetDashboard"], [163, 0, 1, "", "PresetDataset"], [164, 0, 1, "", "PresetWorkspace"], [165, 0, 1, "", "Procedure"], [166, 0, 1, "", "Process"], [167, 0, 1, "", "ProcessExecution"], [168, 0, 1, "", "Purpose"], [169, 0, 1, "", "Qlik"], [170, 0, 1, "", "QlikApp"], [171, 0, 1, "", "QlikChart"], [172, 0, 1, "", "QlikDataset"], [173, 0, 1, "", "QlikSheet"], [174, 0, 1, "", "QlikSpace"], [175, 0, 1, "", "QlikStream"], [176, 0, 1, "", "Query"], [177, 0, 1, "", "QuickSight"], [178, 0, 1, "", "QuickSightAnalysis"], [179, 0, 1, "", "QuickSightAnalysisVisual"], [180, 0, 1, "", "QuickSightDashboard"], [181, 0, 1, "", "QuickSightDashboardVisual"], [182, 0, 1, "", "QuickSightDataset"], [183, 0, 1, "", "QuickSightDatasetField"], [184, 0, 1, "", "QuickSightFolder"], [185, 0, 1, "", "Readme"], [186, 0, 1, "", "ReadmeTemplate"], [187, 0, 1, "", "Redash"], [188, 0, 1, "", "RedashDashboard"], [189, 0, 1, "", "RedashQuery"], [190, 0, 1, "", "RedashVisualization"], [191, 0, 1, "", "Referenceable"], [192, 0, 1, "", "Resource"], [193, 0, 1, "", "S3"], [194, 0, 1, "", "S3Bucket"], [195, 0, 1, "", "S3Object"], [227, 0, 1, "", "SQL"], [196, 0, 1, "", "SaaS"], [197, 0, 1, "", "Salesforce"], [198, 0, 1, "", "SalesforceDashboard"], [199, 0, 1, "", "SalesforceField"], [200, 0, 1, "", "SalesforceObject"], [201, 0, 1, "", "SalesforceOrganization"], [202, 0, 1, "", "SalesforceReport"], [203, 0, 1, "", "Schema"], [204, 0, 1, "", "SchemaRegistry"], [205, 0, 1, "", "SchemaRegistrySubject"], [206, 0, 1, "", "Sigma"], [207, 0, 1, "", "SigmaDataElement"], [208, 0, 1, "", "SigmaDataElementField"], [209, 0, 1, "", "SigmaDataset"], [210, 0, 1, "", "SigmaDatasetColumn"], [211, 0, 1, "", "SigmaPage"], [212, 0, 1, "", "SigmaWorkbook"], [213, 0, 1, "", "Sisense"], [214, 0, 1, "", "SisenseDashboard"], [215, 0, 1, "", "SisenseDatamodel"], [216, 0, 1, "", "SisenseDatamodelTable"], [217, 0, 1, "", "SisenseFolder"], [218, 0, 1, "", "SisenseWidget"], [219, 0, 1, "", "SnowflakeDynamicTable"], [220, 0, 1, "", "SnowflakePipe"], [221, 0, 1, "", "SnowflakeStream"], [222, 0, 1, "", "SnowflakeTag"], [223, 0, 1, "", "Soda"], [224, 0, 1, "", "SodaCheck"], [225, 0, 1, "", "Spark"], [226, 0, 1, "", "SparkJob"], [228, 0, 1, "", "Stakeholder"], [229, 0, 1, "", "StakeholderTitle"], [230, 0, 1, "", "Table"], [242, 0, 1, "", "TablePartition"], [231, 0, 1, "", "Tableau"], [232, 0, 1, "", "TableauCalculatedField"], [233, 0, 1, "", "TableauDashboard"], [234, 0, 1, "", "TableauDatasource"], [235, 0, 1, "", "TableauDatasourceField"], [236, 0, 1, "", "TableauFlow"], [237, 0, 1, "", "TableauMetric"], [238, 0, 1, "", "TableauProject"], [239, 0, 1, "", "TableauSite"], [240, 0, 1, "", "TableauWorkbook"], [241, 0, 1, "", "TableauWorksheet"], [243, 0, 1, "", "Tag"], [244, 0, 1, "", "TagAttachment"], [245, 0, 1, "", "Task"], [246, 0, 1, "", "Thoughtspot"], [247, 0, 1, "", "ThoughtspotAnswer"], [248, 0, 1, "", "ThoughtspotColumn"], [249, 0, 1, "", "ThoughtspotDashlet"], [250, 0, 1, "", "ThoughtspotLiveboard"], [251, 0, 1, "", "ThoughtspotTable"], [252, 0, 1, "", "ThoughtspotView"], [253, 0, 1, "", "ThoughtspotWorksheet"], [254, 0, 1, "", "View"], [255, 0, 1, "", "Workflow"], [256, 0, 1, "", "WorkflowRun"]], "pyatlan.model.assets.ADLS": [[1, 3, 1, "", "ADLS_ACCOUNT_QUALIFIED_NAME"], [1, 3, 1, "", "ADLS_ACCOUNT_SECONDARY_LOCATION"], [1, 3, 1, "", "AZURE_LOCATION"], [1, 3, 1, "", "AZURE_RESOURCE_ID"], [1, 3, 1, "", "AZURE_TAGS"]], "pyatlan.model.assets.ADLSAccount": [[2, 3, 1, "", "ADLS_ACCOUNT_ACCESS_TIER"], [2, 3, 1, "", "ADLS_ACCOUNT_KIND"], [2, 3, 1, "", "ADLS_ACCOUNT_PERFORMANCE"], [2, 3, 1, "", "ADLS_ACCOUNT_PROVISION_STATE"], [2, 3, 1, "", "ADLS_ACCOUNT_REPLICATION"], [2, 3, 1, "", "ADLS_ACCOUNT_RESOURCE_GROUP"], [2, 3, 1, "", "ADLS_ACCOUNT_SUBSCRIPTION"], [2, 3, 1, "", "ADLS_CONTAINERS"], [2, 3, 1, "", "ADLS_ENCRYPTION_TYPE"], [2, 3, 1, "", "ADLS_E_TAG"], [2, 3, 1, "", "ADLS_PRIMARY_DISK_STATE"]], "pyatlan.model.assets.ADLSContainer": [[3, 3, 1, "", "ADLS_ACCOUNT"], [3, 3, 1, "", "ADLS_CONTAINER_ENCRYPTION_SCOPE"], [3, 3, 1, "", "ADLS_CONTAINER_LEASE_STATE"], [3, 3, 1, "", "ADLS_CONTAINER_LEASE_STATUS"], [3, 3, 1, "", "ADLS_CONTAINER_URL"], [3, 3, 1, "", "ADLS_CONTAINER_VERSION_LEVEL_IMMUTABILITY_SUPPORT"], [3, 3, 1, "", "ADLS_OBJECTS"], [3, 3, 1, "", "ADLS_OBJECT_COUNT"]], "pyatlan.model.assets.ADLSObject": [[4, 3, 1, "", "ADLS_CONTAINER"], [4, 3, 1, "", "ADLS_CONTAINER_QUALIFIED_NAME"], [4, 3, 1, "", "ADLS_OBJECT_ACCESS_TIER"], [4, 3, 1, "", "ADLS_OBJECT_ACCESS_TIER_LAST_MODIFIED_TIME"], [4, 3, 1, "", "ADLS_OBJECT_ARCHIVE_STATUS"], [4, 3, 1, "", "ADLS_OBJECT_CACHE_CONTROL"], [4, 3, 1, "", "ADLS_OBJECT_CONTENT_LANGUAGE"], [4, 3, 1, "", "ADLS_OBJECT_CONTENT_MD5HASH"], [4, 3, 1, "", "ADLS_OBJECT_CONTENT_TYPE"], [4, 3, 1, "", "ADLS_OBJECT_LEASE_STATE"], [4, 3, 1, "", "ADLS_OBJECT_LEASE_STATUS"], [4, 3, 1, "", "ADLS_OBJECT_METADATA"], [4, 3, 1, "", "ADLS_OBJECT_SERVER_ENCRYPTED"], [4, 3, 1, "", "ADLS_OBJECT_SIZE"], [4, 3, 1, "", "ADLS_OBJECT_TYPE"], [4, 3, 1, "", "ADLS_OBJECT_URL"], [4, 3, 1, "", "ADLS_OBJECT_VERSION_ID"], [4, 3, 1, "", "ADLS_OBJECT_VERSION_LEVEL_IMMUTABILITY_SUPPORT"]], "pyatlan.model.assets.API": [[8, 3, 1, "", "API_EXTERNAL_DOCS"], [8, 3, 1, "", "API_IS_AUTH_OPTIONAL"], [8, 3, 1, "", "API_SPEC_NAME"], [8, 3, 1, "", "API_SPEC_QUALIFIED_NAME"], [8, 3, 1, "", "API_SPEC_TYPE"], [8, 3, 1, "", "API_SPEC_VERSION"]], "pyatlan.model.assets.APIPath": [[9, 3, 1, "", "API_PATH_AVAILABLE_OPERATIONS"], [9, 3, 1, "", "API_PATH_AVAILABLE_RESPONSE_CODES"], [9, 3, 1, "", "API_PATH_IS_INGRESS_EXPOSED"], [9, 3, 1, "", "API_PATH_IS_TEMPLATED"], [9, 3, 1, "", "API_PATH_RAW_URI"], [9, 3, 1, "", "API_PATH_SUMMARY"], [9, 3, 1, "", "API_SPEC"]], "pyatlan.model.assets.APISpec": [[10, 3, 1, "", "API_PATHS"], [10, 3, 1, "", "API_SPEC_CONTACT_EMAIL"], [10, 3, 1, "", "API_SPEC_CONTACT_NAME"], [10, 3, 1, "", "API_SPEC_CONTACT_URL"], [10, 3, 1, "", "API_SPEC_CONTRACT_VERSION"], [10, 3, 1, "", "API_SPEC_LICENSE_NAME"], [10, 3, 1, "", "API_SPEC_LICENSE_URL"], [10, 3, 1, "", "API_SPEC_SERVICE_ALIAS"], [10, 3, 1, "", "API_SPEC_TERMS_OF_SERVICE_URL"]], "pyatlan.model.assets.AWS": [[17, 3, 1, "", "AWS_ACCOUNT_ID"], [17, 3, 1, "", "AWS_ARN"], [17, 3, 1, "", "AWS_OWNER_ID"], [17, 3, 1, "", "AWS_OWNER_NAME"], [17, 3, 1, "", "AWS_PARTITION"], [17, 3, 1, "", "AWS_REGION"], [17, 3, 1, "", "AWS_RESOURCE_ID"], [17, 3, 1, "", "AWS_SERVICE"], [17, 3, 1, "", "AWS_TAGS"]], "pyatlan.model.assets.AccessControl": [[0, 3, 1, "", "CHANNEL_LINK"], [0, 3, 1, "", "DEFAULT_NAVIGATION"], [0, 3, 1, "", "DENY_ASSET_FILTERS"], [0, 3, 1, "", "DENY_ASSET_TABS"], [0, 3, 1, "", "DENY_ASSET_TYPES"], [0, 3, 1, "", "DENY_CUSTOM_METADATA_GUIDS"], [0, 3, 1, "", "DENY_NAVIGATION_PAGES"], [0, 3, 1, "", "DISPLAY_PREFERENCES"], [0, 3, 1, "", "IS_ACCESS_CONTROL_ENABLED"], [0, 3, 1, "", "POLICIES"]], "pyatlan.model.assets.Airflow": [[5, 3, 1, "", "AIRFLOW_RUN_END_TIME"], [5, 3, 1, "", "AIRFLOW_RUN_NAME"], [5, 3, 1, "", "AIRFLOW_RUN_OPEN_LINEAGE_STATE"], [5, 3, 1, "", "AIRFLOW_RUN_OPEN_LINEAGE_VERSION"], [5, 3, 1, "", "AIRFLOW_RUN_START_TIME"], [5, 3, 1, "", "AIRFLOW_RUN_TYPE"], [5, 3, 1, "", "AIRFLOW_RUN_VERSION"], [5, 3, 1, "", "AIRFLOW_TAGS"]], "pyatlan.model.assets.AirflowDag": [[6, 3, 1, "", "AIRFLOW_DAG_SCHEDULE"], [6, 3, 1, "", "AIRFLOW_DAG_SCHEDULE_DELTA"], [6, 3, 1, "", "AIRFLOW_TASKS"]], "pyatlan.model.assets.AirflowTask": [[7, 3, 1, "", "AIRFLOW_DAG"], [7, 3, 1, "", "AIRFLOW_DAG_NAME"], [7, 3, 1, "", "AIRFLOW_DAG_QUALIFIED_NAME"], [7, 3, 1, "", "AIRFLOW_TASK_CONNECTION_ID"], [7, 3, 1, "", "AIRFLOW_TASK_OPERATOR_CLASS"], [7, 3, 1, "", "AIRFLOW_TASK_POOL"], [7, 3, 1, "", "AIRFLOW_TASK_POOL_SLOTS"], [7, 3, 1, "", "AIRFLOW_TASK_PRIORITY_WEIGHT"], [7, 3, 1, "", "AIRFLOW_TASK_QUEUE"], [7, 3, 1, "", "AIRFLOW_TASK_RETRY_NUMBER"], [7, 3, 1, "", "AIRFLOW_TASK_SQL"], [7, 3, 1, "", "AIRFLOW_TASK_TRIGGER_RULE"], [7, 3, 1, "", "INPUTS"], [7, 3, 1, "", "OUTPUTS"], [7, 3, 1, "", "PROCESS"]], "pyatlan.model.assets.Asset": [[11, 3, 1, "", "ADMIN_GROUPS"], [11, 3, 1, "", "ADMIN_ROLES"], [11, 3, 1, "", "ADMIN_USERS"], [11, 3, 1, "", "ANNOUNCEMENT_MESSAGE"], [11, 3, 1, "", "ANNOUNCEMENT_TITLE"], [11, 3, 1, "", "ANNOUNCEMENT_TYPE"], [11, 3, 1, "", "ANNOUNCEMENT_UPDATED_AT"], [11, 3, 1, "", "ANNOUNCEMENT_UPDATED_BY"], [11, 3, 1, "", "ASSET_COVER_IMAGE"], [11, 3, 1, "", "ASSET_DBT_ACCOUNT_NAME"], [11, 3, 1, "", "ASSET_DBT_ALIAS"], [11, 3, 1, "", "ASSET_DBT_ENVIRONMENT_DBT_VERSION"], [11, 3, 1, "", "ASSET_DBT_ENVIRONMENT_NAME"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_ARTIFACTS_SAVED"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_ARTIFACT_S3PATH"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_CREATED_AT"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_DEQUED_AT"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_EXECUTED_BY_THREAD_ID"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_GIT_BRANCH"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_GIT_SHA"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_HAS_DOCS_GENERATED"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_HAS_SOURCES_GENERATED"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_NOTIFICATIONS_SENT"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_OWNER_THREAD_ID"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_QUEUED_DURATION"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_QUEUED_DURATION_HUMANIZED"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_RUN_DURATION"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_RUN_DURATION_HUMANIZED"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_STARTED_AT"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_STATUS_MESSAGE"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_TOTAL_DURATION"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_TOTAL_DURATION_HUMANIZED"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_UPDATED_AT"], [11, 3, 1, "", "ASSET_DBT_JOB_LAST_RUN_URL"], [11, 3, 1, "", "ASSET_DBT_JOB_NAME"], [11, 3, 1, "", "ASSET_DBT_JOB_NEXT_RUN"], [11, 3, 1, "", "ASSET_DBT_JOB_NEXT_RUN_HUMANIZED"], [11, 3, 1, "", "ASSET_DBT_JOB_SCHEDULE"], [11, 3, 1, "", "ASSET_DBT_JOB_SCHEDULE_CRON_HUMANIZED"], [11, 3, 1, "", "ASSET_DBT_JOB_STATUS"], [11, 3, 1, "", "ASSET_DBT_META"], [11, 3, 1, "", "ASSET_DBT_PACKAGE_NAME"], [11, 3, 1, "", "ASSET_DBT_PROJECT_NAME"], [11, 3, 1, "", "ASSET_DBT_SEMANTIC_LAYER_PROXY_URL"], [11, 3, 1, "", "ASSET_DBT_SOURCE_FRESHNESS_CRITERIA"], [11, 3, 1, "", "ASSET_DBT_TAGS"], [11, 3, 1, "", "ASSET_DBT_TEST_STATUS"], [11, 3, 1, "", "ASSET_DBT_UNIQUE_ID"], [11, 3, 1, "", "ASSET_DBT_WORKFLOW_LAST_UPDATED"], [11, 3, 1, "", "ASSET_ICON"], [11, 3, 1, "", "ASSET_MC_INCIDENT_NAMES"], [11, 3, 1, "", "ASSET_MC_INCIDENT_QUALIFIED_NAMES"], [11, 3, 1, "", "ASSET_MC_INCIDENT_SEVERITIES"], [11, 3, 1, "", "ASSET_MC_INCIDENT_STATES"], [11, 3, 1, "", "ASSET_MC_INCIDENT_SUB_TYPES"], [11, 3, 1, "", "ASSET_MC_INCIDENT_TYPES"], [11, 3, 1, "", "ASSET_MC_LAST_SYNC_RUN_AT"], [11, 3, 1, "", "ASSET_MC_MONITOR_NAMES"], [11, 3, 1, "", "ASSET_MC_MONITOR_QUALIFIED_NAMES"], [11, 3, 1, "", "ASSET_MC_MONITOR_SCHEDULE_TYPES"], [11, 3, 1, "", "ASSET_MC_MONITOR_STATUSES"], [11, 3, 1, "", "ASSET_MC_MONITOR_TYPES"], [11, 3, 1, "", "ASSET_SODA_CHECK_COUNT"], [11, 3, 1, "", "ASSET_SODA_CHECK_STATUSES"], [11, 3, 1, "", "ASSET_SODA_DQ_STATUS"], [11, 3, 1, "", "ASSET_SODA_LAST_SCAN_AT"], [11, 3, 1, "", "ASSET_SODA_LAST_SYNC_RUN_AT"], [11, 3, 1, "", "ASSET_SODA_SOURCE_URL"], [11, 3, 1, "", "ASSET_TAGS"], [11, 3, 1, "", "ASSET_THEME_HEX"], [11, 3, 1, "", "CERTIFICATE_STATUS"], [11, 3, 1, "", "CERTIFICATE_STATUS_MESSAGE"], [11, 3, 1, "", "CERTIFICATE_UPDATED_AT"], [11, 3, 1, "", "CERTIFICATE_UPDATED_BY"], [11, 3, 1, "", "CONNECTION_NAME"], [11, 3, 1, "", "CONNECTION_QUALIFIED_NAME"], [11, 3, 1, "", "CONNECTOR_NAME"], [11, 3, 1, "", "DATA_CONTRACT_LATEST"], [11, 3, 1, "", "DATA_CONTRACT_LATEST_CERTIFIED"], [11, 3, 1, "", "DBT_QUALIFIED_NAME"], [11, 3, 1, "", "DESCRIPTION"], [11, 3, 1, "", "DISPLAY_NAME"], [11, 3, 1, "", "FILES"], [11, 3, 1, "", "HAS_CONTRACT"], [11, 3, 1, "", "HAS_LINEAGE"], [11, 3, 1, "", "INPUT_PORT_DATA_PRODUCTS"], [11, 3, 1, "", "IS_AI_GENERATED"], [11, 3, 1, "", "IS_DISCOVERABLE"], [11, 3, 1, "", "IS_EDITABLE"], [11, 3, 1, "", "IS_PARTIAL"], [11, 3, 1, "", "LAST_ROW_CHANGED_AT"], [11, 3, 1, "", "LAST_SYNC_RUN"], [11, 3, 1, "", "LAST_SYNC_RUN_AT"], [11, 3, 1, "", "LAST_SYNC_WORKFLOW_NAME"], [11, 3, 1, "", "LINKS"], [11, 3, 1, "", "MC_INCIDENTS"], [11, 3, 1, "", "MC_MONITORS"], [11, 3, 1, "", "METRICS"], [11, 3, 1, "", "NAME"], [11, 3, 1, "", "OUTPUT_PORT_DATA_PRODUCTS"], [11, 3, 1, "", "OWNER_GROUPS"], [11, 3, 1, "", "OWNER_USERS"], [11, 3, 1, "", "POPULARITY_SCORE"], [11, 3, 1, "", "README"], [11, 3, 1, "", "SAMPLE_DATA_URL"], [11, 3, 1, "", "SCHEMA_REGISTRY_SUBJECTS"], [11, 3, 1, "", "SODA_CHECKS"], [11, 3, 1, "", "SOURCE_COST_UNIT"], [11, 3, 1, "", "SOURCE_CREATED_AT"], [11, 3, 1, "", "SOURCE_CREATED_BY"], [11, 3, 1, "", "SOURCE_EMBED_URL"], [11, 3, 1, "", "SOURCE_LAST_READ_AT"], [11, 3, 1, "", "SOURCE_OWNERS"], [11, 3, 1, "", "SOURCE_QUERY_COMPUTE_COST_LIST"], [11, 3, 1, "", "SOURCE_QUERY_COMPUTE_COST_RECORD_LIST"], [11, 3, 1, "", "SOURCE_READ_COUNT"], [11, 3, 1, "", "SOURCE_READ_EXPENSIVE_QUERY_RECORD_LIST"], [11, 3, 1, "", "SOURCE_READ_POPULAR_QUERY_RECORD_LIST"], [11, 3, 1, "", "SOURCE_READ_QUERY_COST"], [11, 3, 1, "", "SOURCE_READ_RECENT_USER_LIST"], [11, 3, 1, "", "SOURCE_READ_RECENT_USER_RECORD_LIST"], [11, 3, 1, "", "SOURCE_READ_SLOW_QUERY_RECORD_LIST"], [11, 3, 1, "", "SOURCE_READ_TOP_USER_LIST"], [11, 3, 1, "", "SOURCE_READ_TOP_USER_RECORD_LIST"], [11, 3, 1, "", "SOURCE_READ_USER_COUNT"], [11, 3, 1, "", "SOURCE_TOTAL_COST"], [11, 3, 1, "", "SOURCE_UPDATED_AT"], [11, 3, 1, "", "SOURCE_UPDATED_BY"], [11, 3, 1, "", "SOURCE_URL"], [11, 3, 1, "", "STARRED_BY"], [11, 3, 1, "", "STARRED_COUNT"], [11, 3, 1, "", "STARRED_DETAILS_LIST"], [11, 3, 1, "", "SUB_TYPE"], [11, 3, 1, "", "TENANT_ID"], [11, 3, 1, "", "USER_DESCRIPTION"], [11, 3, 1, "", "VIEWER_GROUPS"], [11, 3, 1, "", "VIEWER_USERS"], [11, 3, 1, "", "VIEW_SCORE"], [11, 1, 1, "", "lineage"]], "pyatlan.model.assets.AtlasGlossary": [[12, 3, 1, "", "ADDITIONAL_ATTRIBUTES"], [12, 3, 1, "", "CATEGORIES"], [12, 3, 1, "", "GLOSSARY_TYPE"], [12, 3, 1, "", "LANGUAGE"], [12, 3, 1, "", "LONG_DESCRIPTION"], [12, 3, 1, "", "SHORT_DESCRIPTION"], [12, 3, 1, "", "TERMS"], [12, 3, 1, "", "USAGE"]], "pyatlan.model.assets.AtlasGlossaryCategory": [[13, 3, 1, "", "ADDITIONAL_ATTRIBUTES"], [13, 3, 1, "", "ANCHOR"], [13, 3, 1, "", "CATEGORY_TYPE"], [13, 3, 1, "", "CHILDREN_CATEGORIES"], [13, 3, 1, "", "LONG_DESCRIPTION"], [13, 3, 1, "", "PARENT_CATEGORY"], [13, 3, 1, "", "SHORT_DESCRIPTION"], [13, 3, 1, "", "TERMS"], [13, 1, 1, "", "can_be_archived"]], "pyatlan.model.assets.AtlasGlossaryTerm": [[14, 3, 1, "", "ABBREVIATION"], [14, 3, 1, "", "ADDITIONAL_ATTRIBUTES"], [14, 3, 1, "", "ANCHOR"], [14, 3, 1, "", "ANTONYMS"], [14, 3, 1, "", "ASSIGNED_ENTITIES"], [14, 3, 1, "", "CATEGORIES"], [14, 3, 1, "", "CLASSIFIES"], [14, 3, 1, "", "EXAMPLES"], [14, 3, 1, "", "IS_A"], [14, 3, 1, "", "LONG_DESCRIPTION"], [14, 3, 1, "", "PREFERRED_TERMS"], [14, 3, 1, "", "PREFERRED_TO_TERMS"], [14, 3, 1, "", "REPLACED_BY"], [14, 3, 1, "", "REPLACEMENT_TERMS"], [14, 3, 1, "", "SEE_ALSO"], [14, 3, 1, "", "SHORT_DESCRIPTION"], [14, 3, 1, "", "SYNONYMS"], [14, 3, 1, "", "TERM_TYPE"], [14, 3, 1, "", "TRANSLATED_TERMS"], [14, 3, 1, "", "TRANSLATION_TERMS"], [14, 3, 1, "", "USAGE"], [14, 3, 1, "", "VALID_VALUES"], [14, 3, 1, "", "VALID_VALUES_FOR"]], "pyatlan.model.assets.AuthPolicy": [[15, 3, 1, "", "ACCESS_CONTROL"], [15, 3, 1, "", "IS_POLICY_ENABLED"], [15, 3, 1, "", "POLICY_ACTIONS"], [15, 3, 1, "", "POLICY_CATEGORY"], [15, 3, 1, "", "POLICY_CONDITIONS"], [15, 3, 1, "", "POLICY_DELEGATE_ADMIN"], [15, 3, 1, "", "POLICY_GROUPS"], [15, 3, 1, "", "POLICY_MASK_TYPE"], [15, 3, 1, "", "POLICY_PRIORITY"], [15, 3, 1, "", "POLICY_RESOURCES"], [15, 3, 1, "", "POLICY_RESOURCE_CATEGORY"], [15, 3, 1, "", "POLICY_RESOURCE_SIGNATURE"], [15, 3, 1, "", "POLICY_ROLES"], [15, 3, 1, "", "POLICY_SERVICE_NAME"], [15, 3, 1, "", "POLICY_SUB_CATEGORY"], [15, 3, 1, "", "POLICY_TYPE"], [15, 3, 1, "", "POLICY_USERS"], [15, 3, 1, "", "POLICY_VALIDITY_SCHEDULE"]], "pyatlan.model.assets.AuthService": [[16, 3, 1, "", "AUTH_SERVICE_CONFIG"], [16, 3, 1, "", "AUTH_SERVICE_IS_ENABLED"], [16, 3, 1, "", "AUTH_SERVICE_POLICY_LAST_SYNC"], [16, 3, 1, "", "AUTH_SERVICE_TYPE"], [16, 3, 1, "", "TAG_SERVICE"]], "pyatlan.model.assets.Azure": [[18, 3, 1, "", "ADLS_ACCOUNT_SECONDARY_LOCATION"], [18, 3, 1, "", "AZURE_LOCATION"], [18, 3, 1, "", "AZURE_RESOURCE_ID"], [18, 3, 1, "", "AZURE_TAGS"]], "pyatlan.model.assets.AzureEventHub": [[19, 3, 1, "", "AZURE_EVENT_HUB_STATUS"]], "pyatlan.model.assets.AzureServiceBus": [[21, 3, 1, "", "AZURE_SERVICE_BUS_NAMESPACE_NAME"], [21, 3, 1, "", "AZURE_SERVICE_BUS_NAMESPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.AzureServiceBusNamespace": [[22, 3, 1, "", "AZURE_SERVICE_BUS_TOPICS"]], "pyatlan.model.assets.AzureServiceBusTopic": [[23, 3, 1, "", "AZURE_SERVICE_BUS_NAMESPACE"]], "pyatlan.model.assets.BIProcess": [[26, 3, 1, "", "INPUTS"], [26, 3, 1, "", "OUTPUTS"]], "pyatlan.model.assets.Badge": [[24, 3, 1, "", "BADGE_CONDITIONS"], [24, 3, 1, "", "BADGE_METADATA_ATTRIBUTE"]], "pyatlan.model.assets.CalculationView": [[27, 3, 1, "", "ATLAN_SCHEMA"], [27, 3, 1, "", "CALCULATION_VIEW_ACTIVATED_AT"], [27, 3, 1, "", "CALCULATION_VIEW_ACTIVATED_BY"], [27, 3, 1, "", "CALCULATION_VIEW_VERSION_ID"], [27, 3, 1, "", "COLUMNS"], [27, 3, 1, "", "COLUMN_COUNT"]], "pyatlan.model.assets.Catalog": [[28, 3, 1, "", "INPUT_TO_AIRFLOW_TASKS"], [28, 3, 1, "", "INPUT_TO_PROCESSES"], [28, 3, 1, "", "INPUT_TO_SPARK_JOBS"], [28, 3, 1, "", "OUTPUT_FROM_AIRFLOW_TASKS"], [28, 3, 1, "", "OUTPUT_FROM_PROCESSES"], [28, 3, 1, "", "OUTPUT_FROM_SPARK_JOBS"]], "pyatlan.model.assets.Cognite3DModel": [[31, 3, 1, "", "COGNITE_ASSET"]], "pyatlan.model.assets.CogniteAsset": [[32, 3, 1, "", "COGNITE3DMODELS"], [32, 3, 1, "", "COGNITE_EVENTS"], [32, 3, 1, "", "COGNITE_FILES"], [32, 3, 1, "", "COGNITE_SEQUENCES"], [32, 3, 1, "", "COGNITE_TIMESERIES"]], "pyatlan.model.assets.CogniteEvent": [[33, 3, 1, "", "COGNITE_ASSET"]], "pyatlan.model.assets.CogniteFile": [[34, 3, 1, "", "COGNITE_ASSET"]], "pyatlan.model.assets.CogniteSequence": [[35, 3, 1, "", "COGNITE_ASSET"]], "pyatlan.model.assets.CogniteTimeSeries": [[36, 3, 1, "", "COGNITE_ASSET"]], "pyatlan.model.assets.Cognos": [[37, 3, 1, "", "COGNOS_DEFAULT_SCREEN_TIP"], [37, 3, 1, "", "COGNOS_ID"], [37, 3, 1, "", "COGNOS_IS_DISABLED"], [37, 3, 1, "", "COGNOS_IS_HIDDEN"], [37, 3, 1, "", "COGNOS_PARENT_NAME"], [37, 3, 1, "", "COGNOS_PARENT_QUALIFIED_NAME"], [37, 3, 1, "", "COGNOS_PATH"], [37, 3, 1, "", "COGNOS_TYPE"], [37, 3, 1, "", "COGNOS_VERSION"]], "pyatlan.model.assets.CognosDashboard": [[38, 3, 1, "", "COGNOS_FOLDER"]], "pyatlan.model.assets.CognosDatasource": [[39, 3, 1, "", "COGNOS_DATASOURCE_CONNECTION_STRING"]], "pyatlan.model.assets.CognosExploration": [[40, 3, 1, "", "COGNOS_FOLDER"]], "pyatlan.model.assets.CognosFile": [[41, 3, 1, "", "COGNOS_FOLDER"]], "pyatlan.model.assets.CognosFolder": [[42, 3, 1, "", "COGNOS_DASHBOARDS"], [42, 3, 1, "", "COGNOS_EXPLORATIONS"], [42, 3, 1, "", "COGNOS_FILES"], [42, 3, 1, "", "COGNOS_FOLDER"], [42, 3, 1, "", "COGNOS_FOLDER_CHILD_OBJECTS_COUNT"], [42, 3, 1, "", "COGNOS_FOLDER_SUB_FOLDER_COUNT"], [42, 3, 1, "", "COGNOS_MODULES"], [42, 3, 1, "", "COGNOS_PACKAGES"], [42, 3, 1, "", "COGNOS_REPORTS"], [42, 3, 1, "", "COGNOS_SUB_FOLDERS"]], "pyatlan.model.assets.CognosModule": [[43, 3, 1, "", "COGNOS_FOLDER"]], "pyatlan.model.assets.CognosPackage": [[44, 3, 1, "", "COGNOS_FOLDER"]], "pyatlan.model.assets.CognosReport": [[45, 3, 1, "", "COGNOS_FOLDER"]], "pyatlan.model.assets.Collection": [[46, 3, 1, "", "ICON"], [46, 3, 1, "", "ICON_TYPE"]], "pyatlan.model.assets.Column": [[47, 3, 1, "", "CALCULATION_VIEW"], [47, 3, 1, "", "COLUMN_AVERAGE"], [47, 3, 1, "", "COLUMN_AVERAGE_LENGTH"], [47, 3, 1, "", "COLUMN_DBT_MODEL_COLUMNS"], [47, 3, 1, "", "COLUMN_DEPTH_LEVEL"], [47, 3, 1, "", "COLUMN_DISTINCT_VALUES_COUNT"], [47, 3, 1, "", "COLUMN_DISTINCT_VALUES_COUNT_LONG"], [47, 3, 1, "", "COLUMN_DUPLICATE_VALUES_COUNT"], [47, 3, 1, "", "COLUMN_DUPLICATE_VALUES_COUNT_LONG"], [47, 3, 1, "", "COLUMN_HISTOGRAM"], [47, 3, 1, "", "COLUMN_MAX"], [47, 3, 1, "", "COLUMN_MAXIMUM_STRING_LENGTH"], [47, 3, 1, "", "COLUMN_MAXS"], [47, 3, 1, "", "COLUMN_MEAN"], [47, 3, 1, "", "COLUMN_MEDIAN"], [47, 3, 1, "", "COLUMN_MIN"], [47, 3, 1, "", "COLUMN_MINIMUM_STRING_LENGTH"], [47, 3, 1, "", "COLUMN_MINS"], [47, 3, 1, "", "COLUMN_MISSING_VALUES_COUNT"], [47, 3, 1, "", "COLUMN_MISSING_VALUES_COUNT_LONG"], [47, 3, 1, "", "COLUMN_MISSING_VALUES_PERCENTAGE"], [47, 3, 1, "", "COLUMN_STANDARD_DEVIATION"], [47, 3, 1, "", "COLUMN_SUM"], [47, 3, 1, "", "COLUMN_TOP_VALUES"], [47, 3, 1, "", "COLUMN_UNIQUENESS_PERCENTAGE"], [47, 3, 1, "", "COLUMN_UNIQUE_VALUES_COUNT"], [47, 3, 1, "", "COLUMN_UNIQUE_VALUES_COUNT_LONG"], [47, 3, 1, "", "COLUMN_VARIANCE"], [47, 3, 1, "", "DATA_QUALITY_METRIC_DIMENSIONS"], [47, 3, 1, "", "DATA_TYPE"], [47, 3, 1, "", "DBT_METRICS"], [47, 3, 1, "", "DBT_MODEL_COLUMNS"], [47, 3, 1, "", "DEFAULT_VALUE"], [47, 3, 1, "", "FOREIGN_KEY_FROM"], [47, 3, 1, "", "FOREIGN_KEY_TO"], [47, 3, 1, "", "IS_CLUSTERED"], [47, 3, 1, "", "IS_DIST"], [47, 3, 1, "", "IS_FOREIGN"], [47, 3, 1, "", "IS_INDEXED"], [47, 3, 1, "", "IS_NULLABLE"], [47, 3, 1, "", "IS_PARTITION"], [47, 3, 1, "", "IS_PINNED"], [47, 3, 1, "", "IS_PRIMARY"], [47, 3, 1, "", "IS_SORT"], [47, 3, 1, "", "MATERIALISED_VIEW"], [47, 3, 1, "", "MAX_LENGTH"], [47, 3, 1, "", "METRIC_TIMESTAMPS"], [47, 3, 1, "", "NESTED_COLUMNS"], [47, 3, 1, "", "NESTED_COLUMN_COUNT"], [47, 3, 1, "", "NUMERIC_SCALE"], [47, 3, 1, "", "ORDER"], [47, 3, 1, "", "PARENT_COLUMN"], [47, 3, 1, "", "PARENT_COLUMN_NAME"], [47, 3, 1, "", "PARENT_COLUMN_QUALIFIED_NAME"], [47, 3, 1, "", "PARTITION_ORDER"], [47, 3, 1, "", "PINNED_AT"], [47, 3, 1, "", "PINNED_BY"], [47, 3, 1, "", "PRECISION"], [47, 3, 1, "", "QUERIES"], [47, 3, 1, "", "RAW_DATA_TYPE_DEFINITION"], [47, 3, 1, "", "SNOWFLAKE_DYNAMIC_TABLE"], [47, 3, 1, "", "SUB_DATA_TYPE"], [47, 3, 1, "", "TABLE"], [47, 3, 1, "", "TABLE_PARTITION"], [47, 3, 1, "", "VALIDATIONS"], [47, 3, 1, "", "VIEW"]], "pyatlan.model.assets.ColumnProcess": [[48, 3, 1, "", "INPUTS"], [48, 3, 1, "", "OUTPUTS"], [48, 3, 1, "", "PROCESS"]], "pyatlan.model.assets.Connection": [[49, 3, 1, "", "ALLOW_QUERY"], [49, 3, 1, "", "ALLOW_QUERY_PREVIEW"], [49, 3, 1, "", "CATEGORY"], [49, 3, 1, "", "CONNECTION_DBT_ENVIRONMENTS"], [49, 3, 1, "", "CONNECTION_SSO_CREDENTIAL_GUID"], [49, 3, 1, "", "CONNECTOR_ICON"], [49, 3, 1, "", "CONNECTOR_IMAGE"], [49, 3, 1, "", "CREDENTIAL_STRATEGY"], [49, 3, 1, "", "DEFAULT_CREDENTIAL_GUID"], [49, 3, 1, "", "HAS_POPULARITY_INSIGHTS"], [49, 3, 1, "", "HOST"], [49, 3, 1, "", "IS_SAMPLE_DATA_PREVIEW_ENABLED"], [49, 3, 1, "", "OBJECT_STORAGE_UPLOAD_THRESHOLD"], [49, 3, 1, "", "POLICY_STRATEGY"], [49, 3, 1, "", "POLICY_STRATEGY_FOR_SAMPLE_PREVIEW"], [49, 3, 1, "", "POPULARITY_INSIGHTS_TIMEFRAME"], [49, 3, 1, "", "PORT"], [49, 3, 1, "", "PREVIEW_CREDENTIAL_STRATEGY"], [49, 3, 1, "", "QUERY_CONFIG"], [49, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [49, 3, 1, "", "QUERY_TIMEOUT"], [49, 3, 1, "", "QUERY_USERNAME_STRATEGY"], [49, 3, 1, "", "ROW_LIMIT"], [49, 3, 1, "", "SOURCE_LOGO"], [49, 3, 1, "", "SUB_CATEGORY"], [49, 3, 1, "", "USE_OBJECT_STORAGE"], [49, 3, 1, "", "VECTOR_EMBEDDINGS_ENABLED"], [49, 3, 1, "", "VECTOR_EMBEDDINGS_UPDATED_AT"]], "pyatlan.model.assets.CosmosMongoDBCollection": [[51, 3, 1, "", "ALIAS"], [51, 3, 1, "", "ATLAN_SCHEMA"], [51, 3, 1, "", "CALCULATION_VIEW_NAME"], [51, 3, 1, "", "CALCULATION_VIEW_QUALIFIED_NAME"], [51, 3, 1, "", "COLUMNS"], [51, 3, 1, "", "COLUMN_COUNT"], [51, 3, 1, "", "COSMOS_MONGO_DB_DATABASE"], [51, 3, 1, "", "DATABASE_NAME"], [51, 3, 1, "", "DATABASE_QUALIFIED_NAME"], [51, 3, 1, "", "DBT_MODELS"], [51, 3, 1, "", "DBT_SOURCES"], [51, 3, 1, "", "DBT_TESTS"], [51, 3, 1, "", "DIMENSIONS"], [51, 3, 1, "", "EXTERNAL_LOCATION"], [51, 3, 1, "", "EXTERNAL_LOCATION_FORMAT"], [51, 3, 1, "", "EXTERNAL_LOCATION_REGION"], [51, 3, 1, "", "FACTS"], [51, 3, 1, "", "IS_PARTITIONED"], [51, 3, 1, "", "IS_PROFILED"], [51, 3, 1, "", "IS_QUERY_PREVIEW"], [51, 3, 1, "", "IS_SHARDED"], [51, 3, 1, "", "IS_TEMPORARY"], [51, 3, 1, "", "LAST_PROFILED_AT"], [51, 3, 1, "", "MONGO_DB_COLLECTION_AVERAGE_OBJECT_SIZE"], [51, 3, 1, "", "MONGO_DB_COLLECTION_EXPIRE_AFTER_SECONDS"], [51, 3, 1, "", "MONGO_DB_COLLECTION_IS_CAPPED"], [51, 3, 1, "", "MONGO_DB_COLLECTION_MAXIMUM_DOCUMENT_COUNT"], [51, 3, 1, "", "MONGO_DB_COLLECTION_MAX_SIZE"], [51, 3, 1, "", "MONGO_DB_COLLECTION_NUM_INDEXES"], [51, 3, 1, "", "MONGO_DB_COLLECTION_NUM_ORPHAN_DOCS"], [51, 3, 1, "", "MONGO_DB_COLLECTION_SCHEMA_DEFINITION"], [51, 3, 1, "", "MONGO_DB_COLLECTION_SUBTYPE"], [51, 3, 1, "", "MONGO_DB_COLLECTION_TIME_FIELD"], [51, 3, 1, "", "MONGO_DB_COLLECTION_TIME_GRANULARITY"], [51, 3, 1, "", "MONGO_DB_COLLECTION_TOTAL_INDEX_SIZE"], [51, 3, 1, "", "MONGO_DB_DATABASE"], [51, 3, 1, "", "NO_SQL_SCHEMA_DEFINITION"], [51, 3, 1, "", "PARTITIONS"], [51, 3, 1, "", "PARTITION_COUNT"], [51, 3, 1, "", "PARTITION_LIST"], [51, 3, 1, "", "PARTITION_STRATEGY"], [51, 3, 1, "", "QUERIES"], [51, 3, 1, "", "QUERY_COUNT"], [51, 3, 1, "", "QUERY_COUNT_UPDATED_AT"], [51, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [51, 3, 1, "", "QUERY_USER_COUNT"], [51, 3, 1, "", "QUERY_USER_MAP"], [51, 3, 1, "", "ROW_COUNT"], [51, 3, 1, "", "SCHEMA_NAME"], [51, 3, 1, "", "SCHEMA_QUALIFIED_NAME"], [51, 3, 1, "", "SIZE_BYTES"], [51, 3, 1, "", "SQL_DBT_MODELS"], [51, 3, 1, "", "SQL_DBT_SOURCES"], [51, 3, 1, "", "TABLE_NAME"], [51, 3, 1, "", "TABLE_QUALIFIED_NAME"], [51, 3, 1, "", "VIEW_NAME"], [51, 3, 1, "", "VIEW_QUALIFIED_NAME"]], "pyatlan.model.assets.CosmosMongoDBDatabase": [[52, 3, 1, "", "CALCULATION_VIEW_NAME"], [52, 3, 1, "", "CALCULATION_VIEW_QUALIFIED_NAME"], [52, 3, 1, "", "COSMOS_MONGO_DB_COLLECTIONS"], [52, 3, 1, "", "DATABASE_NAME"], [52, 3, 1, "", "DATABASE_QUALIFIED_NAME"], [52, 3, 1, "", "DBT_MODELS"], [52, 3, 1, "", "DBT_SOURCES"], [52, 3, 1, "", "DBT_TESTS"], [52, 3, 1, "", "IS_PROFILED"], [52, 3, 1, "", "LAST_PROFILED_AT"], [52, 3, 1, "", "MONGO_DB_COLLECTIONS"], [52, 3, 1, "", "MONGO_DB_DATABASE_COLLECTION_COUNT"], [52, 3, 1, "", "NO_SQL_SCHEMA_DEFINITION"], [52, 3, 1, "", "QUERY_COUNT"], [52, 3, 1, "", "QUERY_COUNT_UPDATED_AT"], [52, 3, 1, "", "QUERY_USER_COUNT"], [52, 3, 1, "", "QUERY_USER_MAP"], [52, 3, 1, "", "SCHEMAS"], [52, 3, 1, "", "SCHEMA_COUNT"], [52, 3, 1, "", "SCHEMA_NAME"], [52, 3, 1, "", "SCHEMA_QUALIFIED_NAME"], [52, 3, 1, "", "SQL_DBT_MODELS"], [52, 3, 1, "", "SQL_DBT_SOURCES"], [52, 3, 1, "", "TABLE_NAME"], [52, 3, 1, "", "TABLE_QUALIFIED_NAME"], [52, 3, 1, "", "VIEW_NAME"], [52, 3, 1, "", "VIEW_QUALIFIED_NAME"]], "pyatlan.model.assets.Cube": [[53, 3, 1, "", "CUBE_DIMENSIONS"], [53, 3, 1, "", "CUBE_DIMENSION_COUNT"]], "pyatlan.model.assets.CubeDimension": [[54, 3, 1, "", "CUBE"], [54, 3, 1, "", "CUBE_HIERARCHIES"], [54, 3, 1, "", "CUBE_HIERARCHY_COUNT"]], "pyatlan.model.assets.CubeField": [[55, 3, 1, "", "CUBE_FIELD_LEVEL"], [55, 3, 1, "", "CUBE_FIELD_MEASURE_EXPRESSION"], [55, 3, 1, "", "CUBE_HIERARCHY"], [55, 3, 1, "", "CUBE_NESTED_FIELDS"], [55, 3, 1, "", "CUBE_PARENT_FIELD"], [55, 3, 1, "", "CUBE_PARENT_FIELD_NAME"], [55, 3, 1, "", "CUBE_PARENT_FIELD_QUALIFIED_NAME"], [55, 3, 1, "", "CUBE_SUB_FIELD_COUNT"]], "pyatlan.model.assets.CubeHierarchy": [[56, 3, 1, "", "CUBE_DIMENSION"], [56, 3, 1, "", "CUBE_FIELDS"], [56, 3, 1, "", "CUBE_FIELD_COUNT"]], "pyatlan.model.assets.DataContract": [[58, 3, 1, "", "DATA_CONTRACT_ASSET_CERTIFIED"], [58, 3, 1, "", "DATA_CONTRACT_ASSET_GUID"], [58, 3, 1, "", "DATA_CONTRACT_ASSET_LATEST"], [58, 3, 1, "", "DATA_CONTRACT_JSON"], [58, 3, 1, "", "DATA_CONTRACT_NEXT_VERSION"], [58, 3, 1, "", "DATA_CONTRACT_PREVIOUS_VERSION"], [58, 3, 1, "", "DATA_CONTRACT_VERSION"]], "pyatlan.model.assets.DataDomain": [[59, 3, 1, "", "DATA_PRODUCTS"], [59, 3, 1, "", "PARENT_DOMAIN"], [59, 3, 1, "", "STAKEHOLDERS"], [59, 3, 1, "", "SUB_DOMAINS"]], "pyatlan.model.assets.DataMesh": [[60, 3, 1, "", "PARENT_DOMAIN_QUALIFIED_NAME"], [60, 3, 1, "", "SUPER_DOMAIN_QUALIFIED_NAME"], [60, 1, 1, "", "get_super_domain_qualified_name"]], "pyatlan.model.assets.DataProduct": [[61, 3, 1, "", "DAAP_CRITICALITY"], [61, 3, 1, "", "DAAP_SENSITIVITY"], [61, 3, 1, "", "DAAP_STATUS"], [61, 3, 1, "", "DAAP_VISIBILITY"], [61, 3, 1, "", "DAAP_VISIBILITY_GROUPS"], [61, 3, 1, "", "DAAP_VISIBILITY_USERS"], [61, 3, 1, "", "DATA_DOMAIN"], [61, 3, 1, "", "DATA_PRODUCT_ASSETS_DSL"], [61, 3, 1, "", "DATA_PRODUCT_ASSETS_PLAYBOOK_FILTER"], [61, 3, 1, "", "DATA_PRODUCT_CRITICALITY"], [61, 3, 1, "", "DATA_PRODUCT_SCORE_UPDATED_AT"], [61, 3, 1, "", "DATA_PRODUCT_SCORE_VALUE"], [61, 3, 1, "", "DATA_PRODUCT_SENSITIVITY"], [61, 3, 1, "", "DATA_PRODUCT_STATUS"], [61, 3, 1, "", "DATA_PRODUCT_VISIBILITY"], [61, 3, 1, "", "INPUT_PORTS"], [61, 3, 1, "", "OUTPUT_PORTS"]], "pyatlan.model.assets.DataStudio": [[64, 3, 1, "", "GOOGLE_LABELS"], [64, 3, 1, "", "GOOGLE_LOCATION"], [64, 3, 1, "", "GOOGLE_LOCATION_TYPE"], [64, 3, 1, "", "GOOGLE_PROJECT_ID"], [64, 3, 1, "", "GOOGLE_PROJECT_NAME"], [64, 3, 1, "", "GOOGLE_PROJECT_NUMBER"], [64, 3, 1, "", "GOOGLE_SERVICE"], [64, 3, 1, "", "GOOGLE_TAGS"], [64, 3, 1, "", "INPUT_TO_AIRFLOW_TASKS"], [64, 3, 1, "", "INPUT_TO_PROCESSES"], [64, 3, 1, "", "INPUT_TO_SPARK_JOBS"], [64, 3, 1, "", "OUTPUT_FROM_AIRFLOW_TASKS"], [64, 3, 1, "", "OUTPUT_FROM_PROCESSES"], [64, 3, 1, "", "OUTPUT_FROM_SPARK_JOBS"]], "pyatlan.model.assets.DataStudioAsset": [[65, 3, 1, "", "DATA_STUDIO_ASSET_OWNER"], [65, 3, 1, "", "DATA_STUDIO_ASSET_TITLE"], [65, 3, 1, "", "DATA_STUDIO_ASSET_TYPE"], [65, 3, 1, "", "GOOGLE_LABELS"], [65, 3, 1, "", "GOOGLE_LOCATION"], [65, 3, 1, "", "GOOGLE_LOCATION_TYPE"], [65, 3, 1, "", "GOOGLE_PROJECT_ID"], [65, 3, 1, "", "GOOGLE_PROJECT_NAME"], [65, 3, 1, "", "GOOGLE_PROJECT_NUMBER"], [65, 3, 1, "", "GOOGLE_SERVICE"], [65, 3, 1, "", "GOOGLE_TAGS"], [65, 3, 1, "", "IS_TRASHED_DATA_STUDIO_ASSET"]], "pyatlan.model.assets.Database": [[57, 3, 1, "", "SCHEMAS"], [57, 3, 1, "", "SCHEMA_COUNT"]], "pyatlan.model.assets.Dbt": [[66, 3, 1, "", "DBT_ACCOUNT_NAME"], [66, 3, 1, "", "DBT_ALIAS"], [66, 3, 1, "", "DBT_CONNECTION_CONTEXT"], [66, 3, 1, "", "DBT_ENVIRONMENT_DBT_VERSION"], [66, 3, 1, "", "DBT_ENVIRONMENT_NAME"], [66, 3, 1, "", "DBT_JOB_LAST_RUN"], [66, 3, 1, "", "DBT_JOB_NAME"], [66, 3, 1, "", "DBT_JOB_NEXT_RUN"], [66, 3, 1, "", "DBT_JOB_NEXT_RUN_HUMANIZED"], [66, 3, 1, "", "DBT_JOB_SCHEDULE"], [66, 3, 1, "", "DBT_JOB_SCHEDULE_CRON_HUMANIZED"], [66, 3, 1, "", "DBT_JOB_STATUS"], [66, 3, 1, "", "DBT_META"], [66, 3, 1, "", "DBT_PACKAGE_NAME"], [66, 3, 1, "", "DBT_PROJECT_NAME"], [66, 3, 1, "", "DBT_SEMANTIC_LAYER_PROXY_URL"], [66, 3, 1, "", "DBT_TAGS"], [66, 3, 1, "", "DBT_UNIQUE_ID"]], "pyatlan.model.assets.DbtColumnProcess": [[67, 3, 1, "", "AIRFLOW_TASKS"], [67, 3, 1, "", "AST"], [67, 3, 1, "", "CODE"], [67, 3, 1, "", "COLUMN_PROCESSES"], [67, 3, 1, "", "DBT_ACCOUNT_NAME"], [67, 3, 1, "", "DBT_ALIAS"], [67, 3, 1, "", "DBT_COLUMN_PROCESS_JOB_STATUS"], [67, 3, 1, "", "DBT_CONNECTION_CONTEXT"], [67, 3, 1, "", "DBT_ENVIRONMENT_DBT_VERSION"], [67, 3, 1, "", "DBT_ENVIRONMENT_NAME"], [67, 3, 1, "", "DBT_JOB_LAST_RUN"], [67, 3, 1, "", "DBT_JOB_NAME"], [67, 3, 1, "", "DBT_JOB_NEXT_RUN"], [67, 3, 1, "", "DBT_JOB_NEXT_RUN_HUMANIZED"], [67, 3, 1, "", "DBT_JOB_SCHEDULE"], [67, 3, 1, "", "DBT_JOB_SCHEDULE_CRON_HUMANIZED"], [67, 3, 1, "", "DBT_JOB_STATUS"], [67, 3, 1, "", "DBT_META"], [67, 3, 1, "", "DBT_PACKAGE_NAME"], [67, 3, 1, "", "DBT_PROJECT_NAME"], [67, 3, 1, "", "DBT_SEMANTIC_LAYER_PROXY_URL"], [67, 3, 1, "", "DBT_TAGS"], [67, 3, 1, "", "DBT_UNIQUE_ID"], [67, 3, 1, "", "MATILLION_COMPONENT"], [67, 3, 1, "", "PROCESS"], [67, 3, 1, "", "SPARK_JOBS"], [67, 3, 1, "", "SQL"]], "pyatlan.model.assets.DbtMetric": [[68, 3, 1, "", "ASSETS"], [68, 3, 1, "", "DBT_ACCOUNT_NAME"], [68, 3, 1, "", "DBT_ALIAS"], [68, 3, 1, "", "DBT_CONNECTION_CONTEXT"], [68, 3, 1, "", "DBT_ENVIRONMENT_DBT_VERSION"], [68, 3, 1, "", "DBT_ENVIRONMENT_NAME"], [68, 3, 1, "", "DBT_JOB_LAST_RUN"], [68, 3, 1, "", "DBT_JOB_NAME"], [68, 3, 1, "", "DBT_JOB_NEXT_RUN"], [68, 3, 1, "", "DBT_JOB_NEXT_RUN_HUMANIZED"], [68, 3, 1, "", "DBT_JOB_SCHEDULE"], [68, 3, 1, "", "DBT_JOB_SCHEDULE_CRON_HUMANIZED"], [68, 3, 1, "", "DBT_JOB_STATUS"], [68, 3, 1, "", "DBT_META"], [68, 3, 1, "", "DBT_METRIC_FILTERS"], [68, 3, 1, "", "DBT_METRIC_FILTER_COLUMNS"], [68, 3, 1, "", "DBT_MODEL"], [68, 3, 1, "", "DBT_PACKAGE_NAME"], [68, 3, 1, "", "DBT_PROJECT_NAME"], [68, 3, 1, "", "DBT_SEMANTIC_LAYER_PROXY_URL"], [68, 3, 1, "", "DBT_TAGS"], [68, 3, 1, "", "DBT_UNIQUE_ID"], [68, 3, 1, "", "METRIC_DIMENSION_COLUMNS"], [68, 3, 1, "", "METRIC_FILTERS"], [68, 3, 1, "", "METRIC_SQL"], [68, 3, 1, "", "METRIC_TIMESTAMP_COLUMN"], [68, 3, 1, "", "METRIC_TIME_GRAINS"], [68, 3, 1, "", "METRIC_TYPE"]], "pyatlan.model.assets.DbtModel": [[69, 3, 1, "", "DBT_COMPILED_SQL"], [69, 3, 1, "", "DBT_ERROR"], [69, 3, 1, "", "DBT_MATERIALIZATION_TYPE"], [69, 3, 1, "", "DBT_METRICS"], [69, 3, 1, "", "DBT_MODEL_COLUMNS"], [69, 3, 1, "", "DBT_MODEL_COMPILE_COMPLETED_AT"], [69, 3, 1, "", "DBT_MODEL_COMPILE_STARTED_AT"], [69, 3, 1, "", "DBT_MODEL_EXECUTE_COMPLETED_AT"], [69, 3, 1, "", "DBT_MODEL_EXECUTE_STARTED_AT"], [69, 3, 1, "", "DBT_MODEL_EXECUTION_TIME"], [69, 3, 1, "", "DBT_MODEL_RUN_ELAPSED_TIME"], [69, 3, 1, "", "DBT_MODEL_RUN_GENERATED_AT"], [69, 3, 1, "", "DBT_MODEL_SQL_ASSETS"], [69, 3, 1, "", "DBT_RAW_SQL"], [69, 3, 1, "", "DBT_STATS"], [69, 3, 1, "", "DBT_STATUS"], [69, 3, 1, "", "DBT_TESTS"], [69, 3, 1, "", "SQL_ASSET"]], "pyatlan.model.assets.DbtModelColumn": [[70, 3, 1, "", "DBT_MODEL"], [70, 3, 1, "", "DBT_MODEL_COLUMN_DATA_TYPE"], [70, 3, 1, "", "DBT_MODEL_COLUMN_ORDER"], [70, 3, 1, "", "DBT_MODEL_COLUMN_SQL_COLUMNS"], [70, 3, 1, "", "DBT_MODEL_QUALIFIED_NAME"], [70, 3, 1, "", "DBT_TESTS"], [70, 3, 1, "", "SQL_COLUMN"]], "pyatlan.model.assets.DbtProcess": [[71, 3, 1, "", "AIRFLOW_TASKS"], [71, 3, 1, "", "AST"], [71, 3, 1, "", "CODE"], [71, 3, 1, "", "COLUMN_PROCESSES"], [71, 3, 1, "", "DBT_ACCOUNT_NAME"], [71, 3, 1, "", "DBT_ALIAS"], [71, 3, 1, "", "DBT_CONNECTION_CONTEXT"], [71, 3, 1, "", "DBT_ENVIRONMENT_DBT_VERSION"], [71, 3, 1, "", "DBT_ENVIRONMENT_NAME"], [71, 3, 1, "", "DBT_JOB_LAST_RUN"], [71, 3, 1, "", "DBT_JOB_NAME"], [71, 3, 1, "", "DBT_JOB_NEXT_RUN"], [71, 3, 1, "", "DBT_JOB_NEXT_RUN_HUMANIZED"], [71, 3, 1, "", "DBT_JOB_SCHEDULE"], [71, 3, 1, "", "DBT_JOB_SCHEDULE_CRON_HUMANIZED"], [71, 3, 1, "", "DBT_JOB_STATUS"], [71, 3, 1, "", "DBT_META"], [71, 3, 1, "", "DBT_PACKAGE_NAME"], [71, 3, 1, "", "DBT_PROCESS_JOB_STATUS"], [71, 3, 1, "", "DBT_PROJECT_NAME"], [71, 3, 1, "", "DBT_SEMANTIC_LAYER_PROXY_URL"], [71, 3, 1, "", "DBT_TAGS"], [71, 3, 1, "", "DBT_UNIQUE_ID"], [71, 3, 1, "", "MATILLION_COMPONENT"], [71, 3, 1, "", "SPARK_JOBS"], [71, 3, 1, "", "SQL"]], "pyatlan.model.assets.DbtSource": [[72, 3, 1, "", "DBT_FRESHNESS_CRITERIA"], [72, 3, 1, "", "DBT_STATE"], [72, 3, 1, "", "DBT_TESTS"], [72, 3, 1, "", "SQL_ASSET"], [72, 3, 1, "", "SQL_ASSETS"]], "pyatlan.model.assets.DbtTag": [[73, 3, 1, "", "DBT_ACCOUNT_NAME"], [73, 3, 1, "", "DBT_ALIAS"], [73, 3, 1, "", "DBT_CONNECTION_CONTEXT"], [73, 3, 1, "", "DBT_ENVIRONMENT_DBT_VERSION"], [73, 3, 1, "", "DBT_ENVIRONMENT_NAME"], [73, 3, 1, "", "DBT_JOB_LAST_RUN"], [73, 3, 1, "", "DBT_JOB_NAME"], [73, 3, 1, "", "DBT_JOB_NEXT_RUN"], [73, 3, 1, "", "DBT_JOB_NEXT_RUN_HUMANIZED"], [73, 3, 1, "", "DBT_JOB_SCHEDULE"], [73, 3, 1, "", "DBT_JOB_SCHEDULE_CRON_HUMANIZED"], [73, 3, 1, "", "DBT_JOB_STATUS"], [73, 3, 1, "", "DBT_META"], [73, 3, 1, "", "DBT_PACKAGE_NAME"], [73, 3, 1, "", "DBT_PROJECT_NAME"], [73, 3, 1, "", "DBT_SEMANTIC_LAYER_PROXY_URL"], [73, 3, 1, "", "DBT_TAGS"], [73, 3, 1, "", "DBT_UNIQUE_ID"], [73, 3, 1, "", "MAPPED_CLASSIFICATION_NAME"], [73, 3, 1, "", "TAG_ALLOWED_VALUES"], [73, 3, 1, "", "TAG_ATTRIBUTES"], [73, 3, 1, "", "TAG_ID"]], "pyatlan.model.assets.DbtTest": [[74, 3, 1, "", "DBT_MODELS"], [74, 3, 1, "", "DBT_MODEL_COLUMNS"], [74, 3, 1, "", "DBT_SOURCES"], [74, 3, 1, "", "DBT_TEST_COMPILED_CODE"], [74, 3, 1, "", "DBT_TEST_COMPILED_SQL"], [74, 3, 1, "", "DBT_TEST_ERROR"], [74, 3, 1, "", "DBT_TEST_LANGUAGE"], [74, 3, 1, "", "DBT_TEST_RAW_CODE"], [74, 3, 1, "", "DBT_TEST_RAW_SQL"], [74, 3, 1, "", "DBT_TEST_STATE"], [74, 3, 1, "", "DBT_TEST_STATUS"], [74, 3, 1, "", "SQL_ASSETS"]], "pyatlan.model.assets.Domo": [[75, 3, 1, "", "DOMO_ID"], [75, 3, 1, "", "DOMO_OWNER_ID"]], "pyatlan.model.assets.DomoCard": [[76, 3, 1, "", "DOMO_CARD_DASHBOARD_COUNT"], [76, 3, 1, "", "DOMO_CARD_TYPE"], [76, 3, 1, "", "DOMO_CARD_TYPE_VALUE"], [76, 3, 1, "", "DOMO_DASHBOARDS"], [76, 3, 1, "", "DOMO_DATASET"]], "pyatlan.model.assets.DomoDashboard": [[77, 3, 1, "", "DOMO_CARDS"], [77, 3, 1, "", "DOMO_DASHBOARD_CARD_COUNT"], [77, 3, 1, "", "DOMO_DASHBOARD_CHILDREN"], [77, 3, 1, "", "DOMO_DASHBOARD_PARENT"]], "pyatlan.model.assets.DomoDataset": [[78, 3, 1, "", "DOMO_CARDS"], [78, 3, 1, "", "DOMO_DATASET_CARD_COUNT"], [78, 3, 1, "", "DOMO_DATASET_COLUMNS"], [78, 3, 1, "", "DOMO_DATASET_COLUMN_COUNT"], [78, 3, 1, "", "DOMO_DATASET_LAST_RUN"], [78, 3, 1, "", "DOMO_DATASET_ROW_COUNT"]], "pyatlan.model.assets.DomoDatasetColumn": [[79, 3, 1, "", "DOMO_DATASET"], [79, 3, 1, "", "DOMO_DATASET_COLUMN_TYPE"], [79, 3, 1, "", "DOMO_DATASET_QUALIFIED_NAME"]], "pyatlan.model.assets.DynamoDB": [[80, 3, 1, "", "DYNAMO_DB_PARTITION_KEY"], [80, 3, 1, "", "DYNAMO_DB_READ_CAPACITY_UNITS"], [80, 3, 1, "", "DYNAMO_DB_SORT_KEY"], [80, 3, 1, "", "DYNAMO_DB_STATUS"], [80, 3, 1, "", "DYNAMO_DB_WRITE_CAPACITY_UNITS"]], "pyatlan.model.assets.DynamoDBGlobalSecondaryIndex": [[81, 3, 1, "", "DYNAMO_DB_TABLE"]], "pyatlan.model.assets.DynamoDBLocalSecondaryIndex": [[82, 3, 1, "", "DYNAMO_DB_TABLE"]], "pyatlan.model.assets.DynamoDBSecondaryIndex": [[83, 3, 1, "", "ALIAS"], [83, 3, 1, "", "CALCULATION_VIEW_NAME"], [83, 3, 1, "", "CALCULATION_VIEW_QUALIFIED_NAME"], [83, 3, 1, "", "COLUMN_COUNT"], [83, 3, 1, "", "DATABASE_NAME"], [83, 3, 1, "", "DATABASE_QUALIFIED_NAME"], [83, 3, 1, "", "DYNAMO_DB_PARTITION_KEY"], [83, 3, 1, "", "DYNAMO_DB_READ_CAPACITY_UNITS"], [83, 3, 1, "", "DYNAMO_DB_SECONDARY_INDEX_PROJECTION_TYPE"], [83, 3, 1, "", "DYNAMO_DB_SORT_KEY"], [83, 3, 1, "", "DYNAMO_DB_STATUS"], [83, 3, 1, "", "DYNAMO_DB_WRITE_CAPACITY_UNITS"], [83, 3, 1, "", "EXTERNAL_LOCATION"], [83, 3, 1, "", "EXTERNAL_LOCATION_FORMAT"], [83, 3, 1, "", "EXTERNAL_LOCATION_REGION"], [83, 3, 1, "", "IS_PARTITIONED"], [83, 3, 1, "", "IS_PROFILED"], [83, 3, 1, "", "IS_QUERY_PREVIEW"], [83, 3, 1, "", "IS_SHARDED"], [83, 3, 1, "", "IS_TEMPORARY"], [83, 3, 1, "", "LAST_PROFILED_AT"], [83, 3, 1, "", "NO_SQL_SCHEMA_DEFINITION"], [83, 3, 1, "", "PARTITION_COUNT"], [83, 3, 1, "", "PARTITION_LIST"], [83, 3, 1, "", "PARTITION_STRATEGY"], [83, 3, 1, "", "QUERY_COUNT"], [83, 3, 1, "", "QUERY_COUNT_UPDATED_AT"], [83, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [83, 3, 1, "", "QUERY_USER_COUNT"], [83, 3, 1, "", "QUERY_USER_MAP"], [83, 3, 1, "", "ROW_COUNT"], [83, 3, 1, "", "SCHEMA_NAME"], [83, 3, 1, "", "SCHEMA_QUALIFIED_NAME"], [83, 3, 1, "", "SIZE_BYTES"], [83, 3, 1, "", "TABLE_NAME"], [83, 3, 1, "", "TABLE_QUALIFIED_NAME"], [83, 3, 1, "", "VIEW_NAME"], [83, 3, 1, "", "VIEW_QUALIFIED_NAME"]], "pyatlan.model.assets.DynamoDBTable": [[84, 3, 1, "", "ALIAS"], [84, 3, 1, "", "CALCULATION_VIEW_NAME"], [84, 3, 1, "", "CALCULATION_VIEW_QUALIFIED_NAME"], [84, 3, 1, "", "COLUMN_COUNT"], [84, 3, 1, "", "DATABASE_NAME"], [84, 3, 1, "", "DATABASE_QUALIFIED_NAME"], [84, 3, 1, "", "DYNAMO_DB_GLOBAL_SECONDARY_INDEXES"], [84, 3, 1, "", "DYNAMO_DB_LOCAL_SECONDARY_INDEXES"], [84, 3, 1, "", "DYNAMO_DB_PARTITION_KEY"], [84, 3, 1, "", "DYNAMO_DB_READ_CAPACITY_UNITS"], [84, 3, 1, "", "DYNAMO_DB_SORT_KEY"], [84, 3, 1, "", "DYNAMO_DB_STATUS"], [84, 3, 1, "", "DYNAMO_DB_TABLE_GSI_COUNT"], [84, 3, 1, "", "DYNAMO_DB_TABLE_LSI_COUNT"], [84, 3, 1, "", "DYNAMO_DB_WRITE_CAPACITY_UNITS"], [84, 3, 1, "", "EXTERNAL_LOCATION"], [84, 3, 1, "", "EXTERNAL_LOCATION_FORMAT"], [84, 3, 1, "", "EXTERNAL_LOCATION_REGION"], [84, 3, 1, "", "IS_PARTITIONED"], [84, 3, 1, "", "IS_PROFILED"], [84, 3, 1, "", "IS_QUERY_PREVIEW"], [84, 3, 1, "", "IS_SHARDED"], [84, 3, 1, "", "IS_TEMPORARY"], [84, 3, 1, "", "LAST_PROFILED_AT"], [84, 3, 1, "", "NO_SQL_SCHEMA_DEFINITION"], [84, 3, 1, "", "PARTITION_COUNT"], [84, 3, 1, "", "PARTITION_LIST"], [84, 3, 1, "", "PARTITION_STRATEGY"], [84, 3, 1, "", "QUERY_COUNT"], [84, 3, 1, "", "QUERY_COUNT_UPDATED_AT"], [84, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [84, 3, 1, "", "QUERY_USER_COUNT"], [84, 3, 1, "", "QUERY_USER_MAP"], [84, 3, 1, "", "ROW_COUNT"], [84, 3, 1, "", "SCHEMA_NAME"], [84, 3, 1, "", "SCHEMA_QUALIFIED_NAME"], [84, 3, 1, "", "SIZE_BYTES"], [84, 3, 1, "", "TABLE_NAME"], [84, 3, 1, "", "TABLE_QUALIFIED_NAME"], [84, 3, 1, "", "VIEW_NAME"], [84, 3, 1, "", "VIEW_QUALIFIED_NAME"]], "pyatlan.model.assets.File": [[86, 3, 1, "", "FILE_ASSETS"], [86, 3, 1, "", "FILE_PATH"], [86, 3, 1, "", "FILE_TYPE"]], "pyatlan.model.assets.Folder": [[87, 3, 1, "", "COLLECTION_QUALIFIED_NAME"], [87, 3, 1, "", "PARENT"], [87, 3, 1, "", "PARENT_QUALIFIED_NAME"]], "pyatlan.model.assets.Function": [[88, 3, 1, "", "FUNCTION_ARGUMENTS"], [88, 3, 1, "", "FUNCTION_DEFINITION"], [88, 3, 1, "", "FUNCTION_IS_EXTERNAL"], [88, 3, 1, "", "FUNCTION_IS_MEMOIZABLE"], [88, 3, 1, "", "FUNCTION_IS_SECURE"], [88, 3, 1, "", "FUNCTION_LANGUAGE"], [88, 3, 1, "", "FUNCTION_RETURN_TYPE"], [88, 3, 1, "", "FUNCTION_SCHEMA"], [88, 3, 1, "", "FUNCTION_TYPE"]], "pyatlan.model.assets.GCS": [[89, 3, 1, "", "GCS_ACCESS_CONTROL"], [89, 3, 1, "", "GCS_ENCRYPTION_TYPE"], [89, 3, 1, "", "GCS_E_TAG"], [89, 3, 1, "", "GCS_META_GENERATION_ID"], [89, 3, 1, "", "GCS_REQUESTER_PAYS"], [89, 3, 1, "", "GCS_STORAGE_CLASS"], [89, 3, 1, "", "GOOGLE_LABELS"], [89, 3, 1, "", "GOOGLE_LOCATION"], [89, 3, 1, "", "GOOGLE_LOCATION_TYPE"], [89, 3, 1, "", "GOOGLE_PROJECT_ID"], [89, 3, 1, "", "GOOGLE_PROJECT_NAME"], [89, 3, 1, "", "GOOGLE_PROJECT_NUMBER"], [89, 3, 1, "", "GOOGLE_SERVICE"], [89, 3, 1, "", "GOOGLE_TAGS"], [89, 3, 1, "", "INPUT_TO_AIRFLOW_TASKS"], [89, 3, 1, "", "INPUT_TO_PROCESSES"], [89, 3, 1, "", "INPUT_TO_SPARK_JOBS"], [89, 3, 1, "", "OUTPUT_FROM_AIRFLOW_TASKS"], [89, 3, 1, "", "OUTPUT_FROM_PROCESSES"], [89, 3, 1, "", "OUTPUT_FROM_SPARK_JOBS"]], "pyatlan.model.assets.GCSBucket": [[90, 3, 1, "", "GCS_BUCKET_LIFECYCLE_RULES"], [90, 3, 1, "", "GCS_BUCKET_RETENTION_EFFECTIVE_TIME"], [90, 3, 1, "", "GCS_BUCKET_RETENTION_LOCKED"], [90, 3, 1, "", "GCS_BUCKET_RETENTION_PERIOD"], [90, 3, 1, "", "GCS_BUCKET_RETENTION_POLICY"], [90, 3, 1, "", "GCS_BUCKET_VERSIONING_ENABLED"], [90, 3, 1, "", "GCS_OBJECTS"], [90, 3, 1, "", "GCS_OBJECT_COUNT"]], "pyatlan.model.assets.GCSObject": [[91, 3, 1, "", "GCS_BUCKET"], [91, 3, 1, "", "GCS_BUCKET_NAME"], [91, 3, 1, "", "GCS_BUCKET_QUALIFIED_NAME"], [91, 3, 1, "", "GCS_OBJECT_CONTENT_DISPOSITION"], [91, 3, 1, "", "GCS_OBJECT_CONTENT_ENCODING"], [91, 3, 1, "", "GCS_OBJECT_CONTENT_LANGUAGE"], [91, 3, 1, "", "GCS_OBJECT_CONTENT_TYPE"], [91, 3, 1, "", "GCS_OBJECT_CRC32C_HASH"], [91, 3, 1, "", "GCS_OBJECT_DATA_LAST_MODIFIED_TIME"], [91, 3, 1, "", "GCS_OBJECT_GENERATION_ID"], [91, 3, 1, "", "GCS_OBJECT_HOLD_TYPE"], [91, 3, 1, "", "GCS_OBJECT_KEY"], [91, 3, 1, "", "GCS_OBJECT_MD5HASH"], [91, 3, 1, "", "GCS_OBJECT_MEDIA_LINK"], [91, 3, 1, "", "GCS_OBJECT_RETENTION_EXPIRATION_DATE"], [91, 3, 1, "", "GCS_OBJECT_SIZE"]], "pyatlan.model.assets.Google": [[92, 3, 1, "", "GOOGLE_LABELS"], [92, 3, 1, "", "GOOGLE_LOCATION"], [92, 3, 1, "", "GOOGLE_LOCATION_TYPE"], [92, 3, 1, "", "GOOGLE_PROJECT_ID"], [92, 3, 1, "", "GOOGLE_PROJECT_NAME"], [92, 3, 1, "", "GOOGLE_PROJECT_NUMBER"], [92, 3, 1, "", "GOOGLE_SERVICE"], [92, 3, 1, "", "GOOGLE_TAGS"]], "pyatlan.model.assets.KafkaConsumerGroup": [[96, 3, 1, "", "KAFKA_CONSUMER_GROUP_MEMBER_COUNT"], [96, 3, 1, "", "KAFKA_CONSUMER_GROUP_TOPIC_CONSUMPTION_PROPERTIES"], [96, 3, 1, "", "KAFKA_TOPICS"], [96, 3, 1, "", "KAFKA_TOPIC_NAMES"], [96, 3, 1, "", "KAFKA_TOPIC_QUALIFIED_NAMES"]], "pyatlan.model.assets.KafkaTopic": [[97, 3, 1, "", "KAFKA_CONSUMER_GROUPS"], [97, 3, 1, "", "KAFKA_TOPIC_CLEANUP_POLICY"], [97, 3, 1, "", "KAFKA_TOPIC_COMPRESSION_TYPE"], [97, 3, 1, "", "KAFKA_TOPIC_IS_INTERNAL"], [97, 3, 1, "", "KAFKA_TOPIC_PARTITIONS_COUNT"], [97, 3, 1, "", "KAFKA_TOPIC_RECORD_COUNT"], [97, 3, 1, "", "KAFKA_TOPIC_REPLICATION_FACTOR"], [97, 3, 1, "", "KAFKA_TOPIC_RETENTION_TIME_IN_MS"], [97, 3, 1, "", "KAFKA_TOPIC_SEGMENT_BYTES"], [97, 3, 1, "", "KAFKA_TOPIC_SIZE_IN_BYTES"]], "pyatlan.model.assets.Link": [[98, 3, 1, "", "ASSET"], [98, 3, 1, "", "ICON"], [98, 3, 1, "", "ICON_TYPE"]], "pyatlan.model.assets.LookerDashboard": [[100, 3, 1, "", "FOLDER"], [100, 3, 1, "", "FOLDER_NAME"], [100, 3, 1, "", "LOOKS"], [100, 3, 1, "", "SOURCELAST_UPDATER_ID"], [100, 3, 1, "", "SOURCE_LAST_ACCESSED_AT"], [100, 3, 1, "", "SOURCE_LAST_VIEWED_AT"], [100, 3, 1, "", "SOURCE_METADATA_ID"], [100, 3, 1, "", "SOURCE_USER_ID"], [100, 3, 1, "", "SOURCE_VIEW_COUNT"], [100, 3, 1, "", "TILES"]], "pyatlan.model.assets.LookerExplore": [[101, 3, 1, "", "FIELDS"], [101, 3, 1, "", "MODEL"], [101, 3, 1, "", "MODEL_NAME"], [101, 3, 1, "", "PROJECT"], [101, 3, 1, "", "PROJECT_NAME"], [101, 3, 1, "", "SOURCE_CONNECTION_NAME"], [101, 3, 1, "", "SQL_TABLE_NAME"], [101, 3, 1, "", "VIEW_NAME"]], "pyatlan.model.assets.LookerField": [[102, 3, 1, "", "EXPLORE"], [102, 3, 1, "", "LOOKER_EXPLORE_QUALIFIED_NAME"], [102, 3, 1, "", "LOOKER_FIELD_DATA_TYPE"], [102, 3, 1, "", "LOOKER_TIMES_USED"], [102, 3, 1, "", "LOOKER_VIEW_QUALIFIED_NAME"], [102, 3, 1, "", "MODEL"], [102, 3, 1, "", "MODEL_NAME"], [102, 3, 1, "", "PROJECT"], [102, 3, 1, "", "PROJECT_NAME"], [102, 3, 1, "", "SOURCE_DEFINITION"], [102, 3, 1, "", "VIEW"]], "pyatlan.model.assets.LookerFolder": [[103, 3, 1, "", "DASHBOARDS"], [103, 3, 1, "", "LOOKER_PARENT_FOLDER"], [103, 3, 1, "", "LOOKER_SUB_FOLDERS"], [103, 3, 1, "", "LOOKS"], [103, 3, 1, "", "SOURCE_CHILD_COUNT"], [103, 3, 1, "", "SOURCE_CONTENT_METADATA_ID"], [103, 3, 1, "", "SOURCE_CREATOR_ID"], [103, 3, 1, "", "SOURCE_PARENT_ID"]], "pyatlan.model.assets.LookerLook": [[104, 3, 1, "", "DASHBOARD"], [104, 3, 1, "", "FOLDER"], [104, 3, 1, "", "FOLDER_NAME"], [104, 3, 1, "", "MODEL"], [104, 3, 1, "", "MODEL_NAME"], [104, 3, 1, "", "QUERY"], [104, 3, 1, "", "SOURCELAST_UPDATER_ID"], [104, 3, 1, "", "SOURCE_CONTENT_METADATA_ID"], [104, 3, 1, "", "SOURCE_LAST_ACCESSED_AT"], [104, 3, 1, "", "SOURCE_LAST_VIEWED_AT"], [104, 3, 1, "", "SOURCE_QUERY_ID"], [104, 3, 1, "", "SOURCE_USER_ID"], [104, 3, 1, "", "SOURCE_VIEW_COUNT"], [104, 3, 1, "", "TILE"]], "pyatlan.model.assets.LookerModel": [[105, 3, 1, "", "EXPLORES"], [105, 3, 1, "", "FIELDS"], [105, 3, 1, "", "LOOK"], [105, 3, 1, "", "PROJECT"], [105, 3, 1, "", "PROJECT_NAME"], [105, 3, 1, "", "QUERIES"]], "pyatlan.model.assets.LookerProject": [[106, 3, 1, "", "EXPLORES"], [106, 3, 1, "", "FIELDS"], [106, 3, 1, "", "LOOKER_CHILD_PROJECTS"], [106, 3, 1, "", "LOOKER_PARENT_PROJECTS"], [106, 3, 1, "", "MODELS"], [106, 3, 1, "", "VIEWS"]], "pyatlan.model.assets.LookerQuery": [[107, 3, 1, "", "FIELDS"], [107, 3, 1, "", "LOOKS"], [107, 3, 1, "", "MODEL"], [107, 3, 1, "", "SOURCE_DEFINITION"], [107, 3, 1, "", "SOURCE_DEFINITION_DATABASE"], [107, 3, 1, "", "SOURCE_DEFINITION_SCHEMA"], [107, 3, 1, "", "TILES"]], "pyatlan.model.assets.LookerTile": [[108, 3, 1, "", "DASHBOARD"], [108, 3, 1, "", "LOOK"], [108, 3, 1, "", "LOOKML_LINK_ID"], [108, 3, 1, "", "LOOK_ID"], [108, 3, 1, "", "MERGE_RESULT_ID"], [108, 3, 1, "", "NOTE_TEXT"], [108, 3, 1, "", "QUERY"], [108, 3, 1, "", "QUERY_ID"], [108, 3, 1, "", "RESULT_MAKER_ID"], [108, 3, 1, "", "SUBTITLE_TEXT"]], "pyatlan.model.assets.LookerView": [[109, 3, 1, "", "FIELDS"], [109, 3, 1, "", "LOOKER_VIEW_FILE_NAME"], [109, 3, 1, "", "LOOKER_VIEW_FILE_PATH"], [109, 3, 1, "", "PROJECT"], [109, 3, 1, "", "PROJECT_NAME"]], "pyatlan.model.assets.MCIncident": [[116, 3, 1, "", "MC_INCIDENT_ASSETS"], [116, 3, 1, "", "MC_INCIDENT_ID"], [116, 3, 1, "", "MC_INCIDENT_SEVERITY"], [116, 3, 1, "", "MC_INCIDENT_STATE"], [116, 3, 1, "", "MC_INCIDENT_SUB_TYPES"], [116, 3, 1, "", "MC_INCIDENT_TYPE"], [116, 3, 1, "", "MC_INCIDENT_WAREHOUSE"], [116, 3, 1, "", "MC_MONITOR"]], "pyatlan.model.assets.MCMonitor": [[117, 3, 1, "", "MC_MONITOR_ALERT_CONDITION"], [117, 3, 1, "", "MC_MONITOR_ASSETS"], [117, 3, 1, "", "MC_MONITOR_BREACH_RATE"], [117, 3, 1, "", "MC_MONITOR_ID"], [117, 3, 1, "", "MC_MONITOR_INCIDENT_COUNT"], [117, 3, 1, "", "MC_MONITOR_NAMESPACE"], [117, 3, 1, "", "MC_MONITOR_RULE_COMPARISONS"], [117, 3, 1, "", "MC_MONITOR_RULE_CUSTOM_SQL"], [117, 3, 1, "", "MC_MONITOR_RULE_IS_SNOOZED"], [117, 3, 1, "", "MC_MONITOR_RULE_NEXT_EXECUTION_TIME"], [117, 3, 1, "", "MC_MONITOR_RULE_PREVIOUS_EXECUTION_TIME"], [117, 3, 1, "", "MC_MONITOR_RULE_SCHEDULE_CONFIG"], [117, 3, 1, "", "MC_MONITOR_RULE_SCHEDULE_CONFIG_HUMANIZED"], [117, 3, 1, "", "MC_MONITOR_RULE_TYPE"], [117, 3, 1, "", "MC_MONITOR_SCHEDULE_TYPE"], [117, 3, 1, "", "MC_MONITOR_STATUS"], [117, 3, 1, "", "MC_MONITOR_TYPE"], [117, 3, 1, "", "MC_MONITOR_WAREHOUSE"]], "pyatlan.model.assets.MaterialisedView": [[110, 3, 1, "", "ALIAS"], [110, 3, 1, "", "ATLAN_SCHEMA"], [110, 3, 1, "", "COLUMNS"], [110, 3, 1, "", "COLUMN_COUNT"], [110, 3, 1, "", "DEFINITION"], [110, 3, 1, "", "IS_QUERY_PREVIEW"], [110, 3, 1, "", "IS_TEMPORARY"], [110, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [110, 3, 1, "", "REFRESH_METHOD"], [110, 3, 1, "", "REFRESH_MODE"], [110, 3, 1, "", "ROW_COUNT"], [110, 3, 1, "", "SIZE_BYTES"], [110, 3, 1, "", "STALENESS"], [110, 3, 1, "", "STALE_SINCE_DATE"]], "pyatlan.model.assets.Matillion": [[111, 3, 1, "", "MATILLION_VERSION"]], "pyatlan.model.assets.MatillionComponent": [[112, 3, 1, "", "MATILLION_COMPONENT_ID"], [112, 3, 1, "", "MATILLION_COMPONENT_IMPLEMENTATION_ID"], [112, 3, 1, "", "MATILLION_COMPONENT_LAST_FIVE_RUN_STATUS"], [112, 3, 1, "", "MATILLION_COMPONENT_LAST_RUN_STATUS"], [112, 3, 1, "", "MATILLION_COMPONENT_LINKED_JOB"], [112, 3, 1, "", "MATILLION_COMPONENT_SQLS"], [112, 3, 1, "", "MATILLION_JOB"], [112, 3, 1, "", "MATILLION_JOB_NAME"], [112, 3, 1, "", "MATILLION_JOB_QUALIFIED_NAME"], [112, 3, 1, "", "MATILLION_PROCESS"]], "pyatlan.model.assets.MatillionGroup": [[113, 3, 1, "", "MATILLION_PROJECTS"], [113, 3, 1, "", "MATILLION_PROJECT_COUNT"]], "pyatlan.model.assets.MatillionJob": [[114, 3, 1, "", "MATILLION_COMPONENTS"], [114, 3, 1, "", "MATILLION_JOB_COMPONENT_COUNT"], [114, 3, 1, "", "MATILLION_JOB_PATH"], [114, 3, 1, "", "MATILLION_JOB_SCHEDULE"], [114, 3, 1, "", "MATILLION_JOB_TYPE"], [114, 3, 1, "", "MATILLION_PROJECT"], [114, 3, 1, "", "MATILLION_PROJECT_NAME"], [114, 3, 1, "", "MATILLION_PROJECT_QUALIFIED_NAME"]], "pyatlan.model.assets.MatillionProject": [[115, 3, 1, "", "MATILLION_ENVIRONMENTS"], [115, 3, 1, "", "MATILLION_GROUP"], [115, 3, 1, "", "MATILLION_GROUP_NAME"], [115, 3, 1, "", "MATILLION_GROUP_QUALIFIED_NAME"], [115, 3, 1, "", "MATILLION_JOBS"], [115, 3, 1, "", "MATILLION_PROJECT_JOB_COUNT"], [115, 3, 1, "", "MATILLION_VERSIONS"]], "pyatlan.model.assets.Metabase": [[118, 3, 1, "", "METABASE_COLLECTION_NAME"], [118, 3, 1, "", "METABASE_COLLECTION_QUALIFIED_NAME"]], "pyatlan.model.assets.MetabaseCollection": [[119, 3, 1, "", "METABASE_COLOR"], [119, 3, 1, "", "METABASE_DASHBOARDS"], [119, 3, 1, "", "METABASE_IS_PERSONAL_COLLECTION"], [119, 3, 1, "", "METABASE_NAMESPACE"], [119, 3, 1, "", "METABASE_QUESTIONS"], [119, 3, 1, "", "METABASE_SLUG"]], "pyatlan.model.assets.MetabaseDashboard": [[120, 3, 1, "", "METABASE_COLLECTION"], [120, 3, 1, "", "METABASE_QUESTIONS"], [120, 3, 1, "", "METABASE_QUESTION_COUNT"]], "pyatlan.model.assets.MetabaseQuestion": [[121, 3, 1, "", "METABASE_COLLECTION"], [121, 3, 1, "", "METABASE_DASHBOARDS"], [121, 3, 1, "", "METABASE_DASHBOARD_COUNT"], [121, 3, 1, "", "METABASE_QUERY"], [121, 3, 1, "", "METABASE_QUERY_TYPE"]], "pyatlan.model.assets.Metric": [[122, 3, 1, "", "ASSETS"], [122, 3, 1, "", "METRIC_DIMENSION_COLUMNS"], [122, 3, 1, "", "METRIC_FILTERS"], [122, 3, 1, "", "METRIC_SQL"], [122, 3, 1, "", "METRIC_TIMESTAMP_COLUMN"], [122, 3, 1, "", "METRIC_TIME_GRAINS"], [122, 3, 1, "", "METRIC_TYPE"]], "pyatlan.model.assets.MicroStrategy": [[123, 3, 1, "", "MICRO_STRATEGY_CERTIFIED_AT"], [123, 3, 1, "", "MICRO_STRATEGY_CERTIFIED_BY"], [123, 3, 1, "", "MICRO_STRATEGY_CUBE_NAMES"], [123, 3, 1, "", "MICRO_STRATEGY_CUBE_QUALIFIED_NAMES"], [123, 3, 1, "", "MICRO_STRATEGY_IS_CERTIFIED"], [123, 3, 1, "", "MICRO_STRATEGY_LOCATION"], [123, 3, 1, "", "MICRO_STRATEGY_PROJECT_NAME"], [123, 3, 1, "", "MICRO_STRATEGY_PROJECT_QUALIFIED_NAME"], [123, 3, 1, "", "MICRO_STRATEGY_REPORT_NAMES"], [123, 3, 1, "", "MICRO_STRATEGY_REPORT_QUALIFIED_NAMES"]], "pyatlan.model.assets.MicroStrategyAttribute": [[124, 3, 1, "", "MICRO_STRATEGY_ATTRIBUTE_FORMS"], [124, 3, 1, "", "MICRO_STRATEGY_CUBES"], [124, 3, 1, "", "MICRO_STRATEGY_METRICS"], [124, 3, 1, "", "MICRO_STRATEGY_PROJECT"], [124, 3, 1, "", "MICRO_STRATEGY_REPORTS"]], "pyatlan.model.assets.MicroStrategyCube": [[125, 3, 1, "", "MICRO_STRATEGY_ATTRIBUTES"], [125, 3, 1, "", "MICRO_STRATEGY_CUBE_QUERY"], [125, 3, 1, "", "MICRO_STRATEGY_CUBE_TYPE"], [125, 3, 1, "", "MICRO_STRATEGY_METRICS"], [125, 3, 1, "", "MICRO_STRATEGY_PROJECT"]], "pyatlan.model.assets.MicroStrategyDocument": [[126, 3, 1, "", "MICRO_STRATEGY_PROJECT"]], "pyatlan.model.assets.MicroStrategyDossier": [[127, 3, 1, "", "MICRO_STRATEGY_DOSSIER_CHAPTER_NAMES"], [127, 3, 1, "", "MICRO_STRATEGY_PROJECT"], [127, 3, 1, "", "MICRO_STRATEGY_VISUALIZATIONS"]], "pyatlan.model.assets.MicroStrategyFact": [[128, 3, 1, "", "MICRO_STRATEGY_FACT_EXPRESSIONS"], [128, 3, 1, "", "MICRO_STRATEGY_METRICS"], [128, 3, 1, "", "MICRO_STRATEGY_PROJECT"]], "pyatlan.model.assets.MicroStrategyMetric": [[129, 3, 1, "", "MICRO_STRATEGY_ATTRIBUTES"], [129, 3, 1, "", "MICRO_STRATEGY_ATTRIBUTE_NAMES"], [129, 3, 1, "", "MICRO_STRATEGY_ATTRIBUTE_QUALIFIED_NAMES"], [129, 3, 1, "", "MICRO_STRATEGY_CUBES"], [129, 3, 1, "", "MICRO_STRATEGY_FACTS"], [129, 3, 1, "", "MICRO_STRATEGY_FACT_NAMES"], [129, 3, 1, "", "MICRO_STRATEGY_FACT_QUALIFIED_NAMES"], [129, 3, 1, "", "MICRO_STRATEGY_METRIC_CHILDREN"], [129, 3, 1, "", "MICRO_STRATEGY_METRIC_EXPRESSION"], [129, 3, 1, "", "MICRO_STRATEGY_METRIC_PARENTS"], [129, 3, 1, "", "MICRO_STRATEGY_METRIC_PARENT_NAMES"], [129, 3, 1, "", "MICRO_STRATEGY_METRIC_PARENT_QUALIFIED_NAMES"], [129, 3, 1, "", "MICRO_STRATEGY_PROJECT"], [129, 3, 1, "", "MICRO_STRATEGY_REPORTS"]], "pyatlan.model.assets.MicroStrategyProject": [[130, 3, 1, "", "MICRO_STRATEGY_ATTRIBUTES"], [130, 3, 1, "", "MICRO_STRATEGY_CUBES"], [130, 3, 1, "", "MICRO_STRATEGY_DOCUMENTS"], [130, 3, 1, "", "MICRO_STRATEGY_DOSSIERS"], [130, 3, 1, "", "MICRO_STRATEGY_FACTS"], [130, 3, 1, "", "MICRO_STRATEGY_METRICS"], [130, 3, 1, "", "MICRO_STRATEGY_REPORTS"], [130, 3, 1, "", "MICRO_STRATEGY_VISUALIZATIONS"]], "pyatlan.model.assets.MicroStrategyReport": [[131, 3, 1, "", "MICRO_STRATEGY_ATTRIBUTES"], [131, 3, 1, "", "MICRO_STRATEGY_METRICS"], [131, 3, 1, "", "MICRO_STRATEGY_PROJECT"], [131, 3, 1, "", "MICRO_STRATEGY_REPORT_TYPE"]], "pyatlan.model.assets.MicroStrategyVisualization": [[132, 3, 1, "", "MICRO_STRATEGY_DOSSIER"], [132, 3, 1, "", "MICRO_STRATEGY_DOSSIER_NAME"], [132, 3, 1, "", "MICRO_STRATEGY_DOSSIER_QUALIFIED_NAME"], [132, 3, 1, "", "MICRO_STRATEGY_PROJECT"], [132, 3, 1, "", "MICRO_STRATEGY_VISUALIZATION_TYPE"]], "pyatlan.model.assets.Mode": [[133, 3, 1, "", "MODE_ID"], [133, 3, 1, "", "MODE_QUERY_NAME"], [133, 3, 1, "", "MODE_QUERY_QUALIFIED_NAME"], [133, 3, 1, "", "MODE_REPORT_NAME"], [133, 3, 1, "", "MODE_REPORT_QUALIFIED_NAME"], [133, 3, 1, "", "MODE_TOKEN"], [133, 3, 1, "", "MODE_WORKSPACE_NAME"], [133, 3, 1, "", "MODE_WORKSPACE_QUALIFIED_NAME"], [133, 3, 1, "", "MODE_WORKSPACE_USERNAME"]], "pyatlan.model.assets.ModeChart": [[134, 3, 1, "", "MODE_CHART_TYPE"], [134, 3, 1, "", "MODE_QUERY"]], "pyatlan.model.assets.ModeCollection": [[135, 3, 1, "", "MODE_COLLECTION_STATE"], [135, 3, 1, "", "MODE_COLLECTION_TYPE"], [135, 3, 1, "", "MODE_REPORTS"], [135, 3, 1, "", "MODE_WORKSPACE"]], "pyatlan.model.assets.ModeQuery": [[136, 3, 1, "", "MODE_CHARTS"], [136, 3, 1, "", "MODE_RAW_QUERY"], [136, 3, 1, "", "MODE_REPORT"], [136, 3, 1, "", "MODE_REPORT_IMPORT_COUNT"]], "pyatlan.model.assets.ModeReport": [[137, 3, 1, "", "MODE_CHART_COUNT"], [137, 3, 1, "", "MODE_COLLECTIONS"], [137, 3, 1, "", "MODE_COLLECTION_TOKEN"], [137, 3, 1, "", "MODE_IS_PUBLIC"], [137, 3, 1, "", "MODE_IS_SHARED"], [137, 3, 1, "", "MODE_QUERIES"], [137, 3, 1, "", "MODE_QUERY_COUNT"], [137, 3, 1, "", "MODE_QUERY_PREVIEW"], [137, 3, 1, "", "MODE_REPORT_PUBLISHED_AT"]], "pyatlan.model.assets.ModeWorkspace": [[138, 3, 1, "", "MODE_COLLECTIONS"], [138, 3, 1, "", "MODE_COLLECTION_COUNT"]], "pyatlan.model.assets.MongoDBCollection": [[140, 3, 1, "", "ALIAS"], [140, 3, 1, "", "CALCULATION_VIEW_NAME"], [140, 3, 1, "", "CALCULATION_VIEW_QUALIFIED_NAME"], [140, 3, 1, "", "COLUMN_COUNT"], [140, 3, 1, "", "DATABASE_NAME"], [140, 3, 1, "", "DATABASE_QUALIFIED_NAME"], [140, 3, 1, "", "EXTERNAL_LOCATION"], [140, 3, 1, "", "EXTERNAL_LOCATION_FORMAT"], [140, 3, 1, "", "EXTERNAL_LOCATION_REGION"], [140, 3, 1, "", "IS_PARTITIONED"], [140, 3, 1, "", "IS_PROFILED"], [140, 3, 1, "", "IS_QUERY_PREVIEW"], [140, 3, 1, "", "IS_SHARDED"], [140, 3, 1, "", "IS_TEMPORARY"], [140, 3, 1, "", "LAST_PROFILED_AT"], [140, 3, 1, "", "MONGO_DB_COLLECTION_AVERAGE_OBJECT_SIZE"], [140, 3, 1, "", "MONGO_DB_COLLECTION_EXPIRE_AFTER_SECONDS"], [140, 3, 1, "", "MONGO_DB_COLLECTION_IS_CAPPED"], [140, 3, 1, "", "MONGO_DB_COLLECTION_MAXIMUM_DOCUMENT_COUNT"], [140, 3, 1, "", "MONGO_DB_COLLECTION_MAX_SIZE"], [140, 3, 1, "", "MONGO_DB_COLLECTION_NUM_INDEXES"], [140, 3, 1, "", "MONGO_DB_COLLECTION_NUM_ORPHAN_DOCS"], [140, 3, 1, "", "MONGO_DB_COLLECTION_SCHEMA_DEFINITION"], [140, 3, 1, "", "MONGO_DB_COLLECTION_SUBTYPE"], [140, 3, 1, "", "MONGO_DB_COLLECTION_TIME_FIELD"], [140, 3, 1, "", "MONGO_DB_COLLECTION_TIME_GRANULARITY"], [140, 3, 1, "", "MONGO_DB_COLLECTION_TOTAL_INDEX_SIZE"], [140, 3, 1, "", "MONGO_DB_DATABASE"], [140, 3, 1, "", "NO_SQL_SCHEMA_DEFINITION"], [140, 3, 1, "", "PARTITION_COUNT"], [140, 3, 1, "", "PARTITION_LIST"], [140, 3, 1, "", "PARTITION_STRATEGY"], [140, 3, 1, "", "QUERY_COUNT"], [140, 3, 1, "", "QUERY_COUNT_UPDATED_AT"], [140, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [140, 3, 1, "", "QUERY_USER_COUNT"], [140, 3, 1, "", "QUERY_USER_MAP"], [140, 3, 1, "", "ROW_COUNT"], [140, 3, 1, "", "SCHEMA_NAME"], [140, 3, 1, "", "SCHEMA_QUALIFIED_NAME"], [140, 3, 1, "", "SIZE_BYTES"], [140, 3, 1, "", "TABLE_NAME"], [140, 3, 1, "", "TABLE_QUALIFIED_NAME"], [140, 3, 1, "", "VIEW_NAME"], [140, 3, 1, "", "VIEW_QUALIFIED_NAME"]], "pyatlan.model.assets.MongoDBDatabase": [[141, 3, 1, "", "CALCULATION_VIEW_NAME"], [141, 3, 1, "", "CALCULATION_VIEW_QUALIFIED_NAME"], [141, 3, 1, "", "DATABASE_NAME"], [141, 3, 1, "", "DATABASE_QUALIFIED_NAME"], [141, 3, 1, "", "IS_PROFILED"], [141, 3, 1, "", "LAST_PROFILED_AT"], [141, 3, 1, "", "MONGO_DB_COLLECTIONS"], [141, 3, 1, "", "MONGO_DB_DATABASE_COLLECTION_COUNT"], [141, 3, 1, "", "NO_SQL_SCHEMA_DEFINITION"], [141, 3, 1, "", "QUERY_COUNT"], [141, 3, 1, "", "QUERY_COUNT_UPDATED_AT"], [141, 3, 1, "", "QUERY_USER_COUNT"], [141, 3, 1, "", "QUERY_USER_MAP"], [141, 3, 1, "", "SCHEMA_COUNT"], [141, 3, 1, "", "SCHEMA_NAME"], [141, 3, 1, "", "SCHEMA_QUALIFIED_NAME"], [141, 3, 1, "", "TABLE_NAME"], [141, 3, 1, "", "TABLE_QUALIFIED_NAME"], [141, 3, 1, "", "VIEW_NAME"], [141, 3, 1, "", "VIEW_QUALIFIED_NAME"]], "pyatlan.model.assets.MonteCarlo": [[142, 3, 1, "", "MC_ASSET_QUALIFIED_NAMES"], [142, 3, 1, "", "MC_LABELS"]], "pyatlan.model.assets.MultiDimensionalDataset": [[143, 3, 1, "", "CUBE_DIMENSION_NAME"], [143, 3, 1, "", "CUBE_DIMENSION_QUALIFIED_NAME"], [143, 3, 1, "", "CUBE_HIERARCHY_NAME"], [143, 3, 1, "", "CUBE_HIERARCHY_QUALIFIED_NAME"], [143, 3, 1, "", "CUBE_NAME"], [143, 3, 1, "", "CUBE_QUALIFIED_NAME"]], "pyatlan.model.assets.Namespace": [[144, 3, 1, "", "CHILDREN_FOLDERS"], [144, 3, 1, "", "CHILDREN_QUERIES"]], "pyatlan.model.assets.NoSQL": [[145, 3, 1, "", "NO_SQL_SCHEMA_DEFINITION"]], "pyatlan.model.assets.Persona": [[147, 3, 1, "", "PERSONA_GROUPS"], [147, 3, 1, "", "PERSONA_USERS"], [147, 3, 1, "", "ROLE_ID"]], "pyatlan.model.assets.PowerBI": [[148, 3, 1, "", "POWER_BI_ENDORSEMENT"], [148, 3, 1, "", "POWER_BI_FORMAT_STRING"], [148, 3, 1, "", "POWER_BI_IS_HIDDEN"], [148, 3, 1, "", "POWER_BI_TABLE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIColumn": [[149, 3, 1, "", "DATASET_QUALIFIED_NAME"], [149, 3, 1, "", "POWER_BI_COLUMN_DATA_CATEGORY"], [149, 3, 1, "", "POWER_BI_COLUMN_DATA_TYPE"], [149, 3, 1, "", "POWER_BI_COLUMN_SUMMARIZE_BY"], [149, 3, 1, "", "POWER_BI_SORT_BY_COLUMN"], [149, 3, 1, "", "TABLE"], [149, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIDashboard": [[150, 3, 1, "", "TILES"], [150, 3, 1, "", "TILE_COUNT"], [150, 3, 1, "", "WEB_URL"], [150, 3, 1, "", "WORKSPACE"], [150, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIDataflow": [[151, 3, 1, "", "DATASETS"], [151, 3, 1, "", "WEB_URL"], [151, 3, 1, "", "WORKSPACE"], [151, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIDataset": [[152, 3, 1, "", "DATAFLOWS"], [152, 3, 1, "", "DATASOURCES"], [152, 3, 1, "", "REPORTS"], [152, 3, 1, "", "TABLES"], [152, 3, 1, "", "TILES"], [152, 3, 1, "", "WEB_URL"], [152, 3, 1, "", "WORKSPACE"], [152, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIDatasource": [[153, 3, 1, "", "CONNECTION_DETAILS"], [153, 3, 1, "", "DATASETS"]], "pyatlan.model.assets.PowerBIMeasure": [[154, 3, 1, "", "DATASET_QUALIFIED_NAME"], [154, 3, 1, "", "POWER_BI_IS_EXTERNAL_MEASURE"], [154, 3, 1, "", "POWER_BI_MEASURE_EXPRESSION"], [154, 3, 1, "", "TABLE"], [154, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIPage": [[155, 3, 1, "", "REPORT"], [155, 3, 1, "", "REPORT_QUALIFIED_NAME"], [155, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIReport": [[156, 3, 1, "", "DATASET"], [156, 3, 1, "", "DATASET_QUALIFIED_NAME"], [156, 3, 1, "", "PAGES"], [156, 3, 1, "", "PAGE_COUNT"], [156, 3, 1, "", "TILES"], [156, 3, 1, "", "WEB_URL"], [156, 3, 1, "", "WORKSPACE"], [156, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBITable": [[157, 3, 1, "", "COLUMNS"], [157, 3, 1, "", "DATASET"], [157, 3, 1, "", "DATASET_QUALIFIED_NAME"], [157, 3, 1, "", "MEASURES"], [157, 3, 1, "", "POWER_BI_TABLE_COLUMN_COUNT"], [157, 3, 1, "", "POWER_BI_TABLE_MEASURE_COUNT"], [157, 3, 1, "", "POWER_BI_TABLE_SOURCE_EXPRESSIONS"], [157, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBITile": [[158, 3, 1, "", "DASHBOARD"], [158, 3, 1, "", "DASHBOARD_QUALIFIED_NAME"], [158, 3, 1, "", "DATASET"], [158, 3, 1, "", "REPORT"], [158, 3, 1, "", "WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PowerBIWorkspace": [[159, 3, 1, "", "DASHBOARDS"], [159, 3, 1, "", "DASHBOARD_COUNT"], [159, 3, 1, "", "DATAFLOWS"], [159, 3, 1, "", "DATAFLOW_COUNT"], [159, 3, 1, "", "DATASETS"], [159, 3, 1, "", "DATASET_COUNT"], [159, 3, 1, "", "REPORTS"], [159, 3, 1, "", "REPORT_COUNT"], [159, 3, 1, "", "WEB_URL"]], "pyatlan.model.assets.Preset": [[160, 3, 1, "", "PRESET_DASHBOARD_ID"], [160, 3, 1, "", "PRESET_DASHBOARD_QUALIFIED_NAME"], [160, 3, 1, "", "PRESET_WORKSPACE_ID"], [160, 3, 1, "", "PRESET_WORKSPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.PresetChart": [[161, 3, 1, "", "PRESET_CHART_DESCRIPTION_MARKDOWN"], [161, 3, 1, "", "PRESET_CHART_FORM_DATA"], [161, 3, 1, "", "PRESET_DASHBOARD"]], "pyatlan.model.assets.PresetDashboard": [[162, 3, 1, "", "PRESET_CHARTS"], [162, 3, 1, "", "PRESET_DASHBOARD_CHANGED_BY_NAME"], [162, 3, 1, "", "PRESET_DASHBOARD_CHANGED_BY_URL"], [162, 3, 1, "", "PRESET_DASHBOARD_CHART_COUNT"], [162, 3, 1, "", "PRESET_DASHBOARD_IS_MANAGED_EXTERNALLY"], [162, 3, 1, "", "PRESET_DASHBOARD_IS_PUBLISHED"], [162, 3, 1, "", "PRESET_DASHBOARD_THUMBNAIL_URL"], [162, 3, 1, "", "PRESET_DATASETS"], [162, 3, 1, "", "PRESET_WORKSPACE"]], "pyatlan.model.assets.PresetDataset": [[163, 3, 1, "", "PRESET_DASHBOARD"], [163, 3, 1, "", "PRESET_DATASET_DATASOURCE_NAME"], [163, 3, 1, "", "PRESET_DATASET_ID"], [163, 3, 1, "", "PRESET_DATASET_TYPE"]], "pyatlan.model.assets.PresetWorkspace": [[164, 3, 1, "", "PRESET_DASHBOARDS"], [164, 3, 1, "", "PRESET_WORKSPACE_CLUSTER_ID"], [164, 3, 1, "", "PRESET_WORKSPACE_DASHBOARD_COUNT"], [164, 3, 1, "", "PRESET_WORKSPACE_DATASET_COUNT"], [164, 3, 1, "", "PRESET_WORKSPACE_DEPLOYMENT_ID"], [164, 3, 1, "", "PRESET_WORKSPACE_HOSTNAME"], [164, 3, 1, "", "PRESET_WORKSPACE_IS_IN_MAINTENANCE_MODE"], [164, 3, 1, "", "PRESET_WORKSPACE_PUBLIC_DASHBOARDS_ALLOWED"], [164, 3, 1, "", "PRESET_WORKSPACE_REGION"], [164, 3, 1, "", "PRESET_WORKSPACE_STATUS"]], "pyatlan.model.assets.Procedure": [[165, 3, 1, "", "ATLAN_SCHEMA"], [165, 3, 1, "", "DEFINITION"]], "pyatlan.model.assets.Process": [[166, 3, 1, "", "AIRFLOW_TASKS"], [166, 3, 1, "", "AST"], [166, 3, 1, "", "CODE"], [166, 3, 1, "", "COLUMN_PROCESSES"], [166, 3, 1, "", "MATILLION_COMPONENT"], [166, 3, 1, "", "SPARK_JOBS"], [166, 3, 1, "", "SQL"]], "pyatlan.model.assets.Purpose": [[168, 3, 1, "", "PURPOSE_CLASSIFICATIONS"]], "pyatlan.model.assets.Qlik": [[169, 3, 1, "", "QLIK_APP_ID"], [169, 3, 1, "", "QLIK_APP_QUALIFIED_NAME"], [169, 3, 1, "", "QLIK_ID"], [169, 3, 1, "", "QLIK_IS_PUBLISHED"], [169, 3, 1, "", "QLIK_OWNER_ID"], [169, 3, 1, "", "QLIK_QRI"], [169, 3, 1, "", "QLIK_SPACE_ID"], [169, 3, 1, "", "QLIK_SPACE_QUALIFIED_NAME"]], "pyatlan.model.assets.QlikApp": [[170, 3, 1, "", "QLIK_APP_STATIC_BYTE_SIZE"], [170, 3, 1, "", "QLIK_HAS_SECTION_ACCESS"], [170, 3, 1, "", "QLIK_IS_DIRECT_QUERY_MODE"], [170, 3, 1, "", "QLIK_IS_ENCRYPTED"], [170, 3, 1, "", "QLIK_ORIGIN_APP_ID"], [170, 3, 1, "", "QLIK_SHEETS"], [170, 3, 1, "", "QLIK_SPACE"]], "pyatlan.model.assets.QlikChart": [[171, 3, 1, "", "QLIK_CHART_FOOTNOTE"], [171, 3, 1, "", "QLIK_CHART_ORIENTATION"], [171, 3, 1, "", "QLIK_CHART_SUBTITLE"], [171, 3, 1, "", "QLIK_CHART_TYPE"], [171, 3, 1, "", "QLIK_SHEET"]], "pyatlan.model.assets.QlikDataset": [[172, 3, 1, "", "QLIK_DATASET_SUBTYPE"], [172, 3, 1, "", "QLIK_DATASET_TECHNICAL_NAME"], [172, 3, 1, "", "QLIK_DATASET_TYPE"], [172, 3, 1, "", "QLIK_DATASET_URI"], [172, 3, 1, "", "QLIK_SPACE"]], "pyatlan.model.assets.QlikSheet": [[173, 3, 1, "", "QLIK_APP"], [173, 3, 1, "", "QLIK_CHARTS"], [173, 3, 1, "", "QLIK_SHEET_IS_APPROVED"]], "pyatlan.model.assets.QlikSpace": [[174, 3, 1, "", "QLIK_APPS"], [174, 3, 1, "", "QLIK_DATASETS"], [174, 3, 1, "", "QLIK_SPACE_TYPE"]], "pyatlan.model.assets.Query": [[176, 3, 1, "", "COLLECTION_QUALIFIED_NAME"], [176, 3, 1, "", "COLUMNS"], [176, 3, 1, "", "DEFAULT_DATABASE_QUALIFIED_NAME"], [176, 3, 1, "", "DEFAULT_SCHEMA_QUALIFIED_NAME"], [176, 3, 1, "", "IS_PRIVATE"], [176, 3, 1, "", "IS_SQL_SNIPPET"], [176, 3, 1, "", "IS_VISUAL_QUERY"], [176, 3, 1, "", "LONG_RAW_QUERY"], [176, 3, 1, "", "PARENT"], [176, 3, 1, "", "PARENT_QUALIFIED_NAME"], [176, 3, 1, "", "RAW_QUERY"], [176, 3, 1, "", "RAW_QUERY_TEXT"], [176, 3, 1, "", "TABLES"], [176, 3, 1, "", "VARIABLES_SCHEMA_BASE64"], [176, 3, 1, "", "VIEWS"], [176, 3, 1, "", "VISUAL_BUILDER_SCHEMA_BASE64"]], "pyatlan.model.assets.QuickSight": [[177, 3, 1, "", "QUICK_SIGHT_ID"], [177, 3, 1, "", "QUICK_SIGHT_SHEET_ID"], [177, 3, 1, "", "QUICK_SIGHT_SHEET_NAME"]], "pyatlan.model.assets.QuickSightAnalysis": [[178, 3, 1, "", "QUICK_SIGHT_ANALYSIS_CALCULATED_FIELDS"], [178, 3, 1, "", "QUICK_SIGHT_ANALYSIS_FILTER_GROUPS"], [178, 3, 1, "", "QUICK_SIGHT_ANALYSIS_FOLDERS"], [178, 3, 1, "", "QUICK_SIGHT_ANALYSIS_PARAMETER_DECLARATIONS"], [178, 3, 1, "", "QUICK_SIGHT_ANALYSIS_STATUS"], [178, 3, 1, "", "QUICK_SIGHT_ANALYSIS_VISUALS"]], "pyatlan.model.assets.QuickSightAnalysisVisual": [[179, 3, 1, "", "QUICK_SIGHT_ANALYSIS"], [179, 3, 1, "", "QUICK_SIGHT_ANALYSIS_QUALIFIED_NAME"]], "pyatlan.model.assets.QuickSightDashboard": [[180, 3, 1, "", "QUICK_SIGHT_DASHBOARD_FOLDERS"], [180, 3, 1, "", "QUICK_SIGHT_DASHBOARD_LAST_PUBLISHED_TIME"], [180, 3, 1, "", "QUICK_SIGHT_DASHBOARD_PUBLISHED_VERSION_NUMBER"], [180, 3, 1, "", "QUICK_SIGHT_DASHBOARD_VISUALS"]], "pyatlan.model.assets.QuickSightDashboardVisual": [[181, 3, 1, "", "QUICK_SIGHT_DASHBOARD"], [181, 3, 1, "", "QUICK_SIGHT_DASHBOARD_QUALIFIED_NAME"]], "pyatlan.model.assets.QuickSightDataset": [[182, 3, 1, "", "QUICK_SIGHT_DATASET_COLUMN_COUNT"], [182, 3, 1, "", "QUICK_SIGHT_DATASET_FIELDS"], [182, 3, 1, "", "QUICK_SIGHT_DATASET_FOLDERS"], [182, 3, 1, "", "QUICK_SIGHT_DATASET_IMPORT_MODE"]], "pyatlan.model.assets.QuickSightDatasetField": [[183, 3, 1, "", "QUICK_SIGHT_DATASET"], [183, 3, 1, "", "QUICK_SIGHT_DATASET_FIELD_TYPE"], [183, 3, 1, "", "QUICK_SIGHT_DATASET_QUALIFIED_NAME"]], "pyatlan.model.assets.QuickSightFolder": [[184, 3, 1, "", "QUICK_SIGHT_ANALYSES"], [184, 3, 1, "", "QUICK_SIGHT_DASHBOARDS"], [184, 3, 1, "", "QUICK_SIGHT_DATASETS"], [184, 3, 1, "", "QUICK_SIGHT_FOLDER_HIERARCHY"], [184, 3, 1, "", "QUICK_SIGHT_FOLDER_TYPE"]], "pyatlan.model.assets.Readme": [[185, 3, 1, "", "ASSET"], [185, 3, 1, "", "SEE_ALSO"]], "pyatlan.model.assets.ReadmeTemplate": [[186, 3, 1, "", "ICON"], [186, 3, 1, "", "ICON_TYPE"]], "pyatlan.model.assets.Redash": [[187, 3, 1, "", "REDASH_IS_PUBLISHED"]], "pyatlan.model.assets.RedashDashboard": [[188, 3, 1, "", "REDASH_DASHBOARD_WIDGET_COUNT"]], "pyatlan.model.assets.RedashQuery": [[189, 3, 1, "", "REDASH_QUERY_LAST_EXECUTED_AT"], [189, 3, 1, "", "REDASH_QUERY_LAST_EXECUTION_RUNTIME"], [189, 3, 1, "", "REDASH_QUERY_PARAMETERS"], [189, 3, 1, "", "REDASH_QUERY_SCHEDULE"], [189, 3, 1, "", "REDASH_QUERY_SCHEDULE_HUMANIZED"], [189, 3, 1, "", "REDASH_QUERY_SQL"], [189, 3, 1, "", "REDASH_VISUALIZATIONS"]], "pyatlan.model.assets.RedashVisualization": [[190, 3, 1, "", "REDASH_QUERY"], [190, 3, 1, "", "REDASH_QUERY_NAME"], [190, 3, 1, "", "REDASH_QUERY_QUALIFIED_NAME"], [190, 3, 1, "", "REDASH_VISUALIZATION_TYPE"]], "pyatlan.model.assets.Referenceable": [[191, 3, 1, "", "ASSIGNED_TERMS"], [191, 3, 1, "", "ATLAN_TAGS"], [191, 3, 1, "", "CREATED_BY"], [191, 3, 1, "", "CREATE_TIME"], [191, 3, 1, "", "GUID"], [191, 3, 1, "", "PROPAGATED_ATLAN_TAGS"], [191, 3, 1, "", "QUALIFIED_NAME"], [191, 3, 1, "", "STATUS"], [191, 3, 1, "", "SUPER_TYPE_NAMES"], [191, 3, 1, "", "TYPE_NAME"], [191, 3, 1, "", "UPDATED_BY"], [191, 3, 1, "", "UPDATE_TIME"], [191, 1, 1, "", "can_be_archived"], [191, 1, 1, "", "json"]], "pyatlan.model.assets.Resource": [[192, 3, 1, "", "IS_GLOBAL"], [192, 3, 1, "", "LINK"], [192, 3, 1, "", "REFERENCE"], [192, 3, 1, "", "RESOURCE_METADATA"]], "pyatlan.model.assets.S3": [[193, 3, 1, "", "AWS_ACCOUNT_ID"], [193, 3, 1, "", "AWS_ARN"], [193, 3, 1, "", "AWS_OWNER_ID"], [193, 3, 1, "", "AWS_OWNER_NAME"], [193, 3, 1, "", "AWS_PARTITION"], [193, 3, 1, "", "AWS_REGION"], [193, 3, 1, "", "AWS_RESOURCE_ID"], [193, 3, 1, "", "AWS_SERVICE"], [193, 3, 1, "", "AWS_TAGS"], [193, 3, 1, "", "S3ENCRYPTION"], [193, 3, 1, "", "S3E_TAG"]], "pyatlan.model.assets.S3Bucket": [[194, 3, 1, "", "OBJECTS"], [194, 3, 1, "", "S3BUCKET_VERSIONING_ENABLED"], [194, 3, 1, "", "S3OBJECT_COUNT"]], "pyatlan.model.assets.S3Object": [[195, 3, 1, "", "BUCKET"], [195, 3, 1, "", "S3BUCKET_NAME"], [195, 3, 1, "", "S3BUCKET_QUALIFIED_NAME"], [195, 3, 1, "", "S3OBJECT_CONTENT_DISPOSITION"], [195, 3, 1, "", "S3OBJECT_CONTENT_TYPE"], [195, 3, 1, "", "S3OBJECT_KEY"], [195, 3, 1, "", "S3OBJECT_LAST_MODIFIED_TIME"], [195, 3, 1, "", "S3OBJECT_SIZE"], [195, 3, 1, "", "S3OBJECT_STORAGE_CLASS"], [195, 3, 1, "", "S3OBJECT_VERSION_ID"]], "pyatlan.model.assets.SQL": [[227, 3, 1, "", "CALCULATION_VIEW_NAME"], [227, 3, 1, "", "CALCULATION_VIEW_QUALIFIED_NAME"], [227, 3, 1, "", "DATABASE_NAME"], [227, 3, 1, "", "DATABASE_QUALIFIED_NAME"], [227, 3, 1, "", "DBT_MODELS"], [227, 3, 1, "", "DBT_SOURCES"], [227, 3, 1, "", "DBT_TESTS"], [227, 3, 1, "", "IS_PROFILED"], [227, 3, 1, "", "LAST_PROFILED_AT"], [227, 3, 1, "", "QUERY_COUNT"], [227, 3, 1, "", "QUERY_COUNT_UPDATED_AT"], [227, 3, 1, "", "QUERY_USER_COUNT"], [227, 3, 1, "", "QUERY_USER_MAP"], [227, 3, 1, "", "SCHEMA_NAME"], [227, 3, 1, "", "SCHEMA_QUALIFIED_NAME"], [227, 3, 1, "", "SQL_DBT_MODELS"], [227, 3, 1, "", "SQL_DBT_SOURCES"], [227, 3, 1, "", "TABLE_NAME"], [227, 3, 1, "", "TABLE_QUALIFIED_NAME"], [227, 3, 1, "", "VIEW_NAME"], [227, 3, 1, "", "VIEW_QUALIFIED_NAME"]], "pyatlan.model.assets.Salesforce": [[197, 3, 1, "", "API_NAME"], [197, 3, 1, "", "ORGANIZATION_QUALIFIED_NAME"]], "pyatlan.model.assets.SalesforceDashboard": [[198, 3, 1, "", "DASHBOARD_TYPE"], [198, 3, 1, "", "ORGANIZATION"], [198, 3, 1, "", "REPORTS"], [198, 3, 1, "", "REPORT_COUNT"], [198, 3, 1, "", "SOURCE_ID"]], "pyatlan.model.assets.SalesforceField": [[199, 3, 1, "", "DATA_TYPE"], [199, 3, 1, "", "DEFAULT_VALUE_FORMULA"], [199, 3, 1, "", "FORMULA"], [199, 3, 1, "", "INLINE_HELP_TEXT"], [199, 3, 1, "", "IS_CALCULATED"], [199, 3, 1, "", "IS_CASE_SENSITIVE"], [199, 3, 1, "", "IS_ENCRYPTED"], [199, 3, 1, "", "IS_NULLABLE"], [199, 3, 1, "", "IS_POLYMORPHIC_FOREIGN_KEY"], [199, 3, 1, "", "IS_UNIQUE"], [199, 3, 1, "", "LOOKUP_OBJECTS"], [199, 3, 1, "", "MAX_LENGTH"], [199, 3, 1, "", "NUMERIC_SCALE"], [199, 3, 1, "", "OBJECT"], [199, 3, 1, "", "OBJECT_QUALIFIED_NAME"], [199, 3, 1, "", "ORDER"], [199, 3, 1, "", "PICKLIST_VALUES"], [199, 3, 1, "", "PRECISION"]], "pyatlan.model.assets.SalesforceObject": [[200, 3, 1, "", "FIELDS"], [200, 3, 1, "", "FIELD_COUNT"], [200, 3, 1, "", "IS_CUSTOM"], [200, 3, 1, "", "IS_MERGABLE"], [200, 3, 1, "", "IS_QUERYABLE"], [200, 3, 1, "", "LOOKUP_FIELDS"], [200, 3, 1, "", "ORGANIZATION"]], "pyatlan.model.assets.SalesforceOrganization": [[201, 3, 1, "", "DASHBOARDS"], [201, 3, 1, "", "OBJECTS"], [201, 3, 1, "", "REPORTS"], [201, 3, 1, "", "SOURCE_ID"]], "pyatlan.model.assets.SalesforceReport": [[202, 3, 1, "", "DASHBOARDS"], [202, 3, 1, "", "DETAIL_COLUMNS"], [202, 3, 1, "", "ORGANIZATION"], [202, 3, 1, "", "REPORT_TYPE"], [202, 3, 1, "", "SOURCE_ID"]], "pyatlan.model.assets.Schema": [[203, 3, 1, "", "CALCULATION_VIEWS"], [203, 3, 1, "", "DATABASE"], [203, 3, 1, "", "FUNCTIONS"], [203, 3, 1, "", "LINKED_SCHEMA_QUALIFIED_NAME"], [203, 3, 1, "", "MATERIALISED_VIEWS"], [203, 3, 1, "", "PROCEDURES"], [203, 3, 1, "", "SNOWFLAKE_DYNAMIC_TABLES"], [203, 3, 1, "", "SNOWFLAKE_PIPES"], [203, 3, 1, "", "SNOWFLAKE_STREAMS"], [203, 3, 1, "", "SNOWFLAKE_TAGS"], [203, 3, 1, "", "TABLES"], [203, 3, 1, "", "TABLE_COUNT"], [203, 3, 1, "", "VIEWS"], [203, 3, 1, "", "VIEWS_COUNT"]], "pyatlan.model.assets.SchemaRegistry": [[204, 3, 1, "", "SCHEMA_REGISTRY_SCHEMA_ID"], [204, 3, 1, "", "SCHEMA_REGISTRY_SCHEMA_TYPE"]], "pyatlan.model.assets.SchemaRegistrySubject": [[205, 3, 1, "", "ASSETS"], [205, 3, 1, "", "SCHEMA_REGISTRY_SUBJECT_BASE_NAME"], [205, 3, 1, "", "SCHEMA_REGISTRY_SUBJECT_GOVERNING_ASSET_QUALIFIED_NAMES"], [205, 3, 1, "", "SCHEMA_REGISTRY_SUBJECT_IS_KEY_SCHEMA"], [205, 3, 1, "", "SCHEMA_REGISTRY_SUBJECT_LATEST_SCHEMA_DEFINITION"], [205, 3, 1, "", "SCHEMA_REGISTRY_SUBJECT_LATEST_SCHEMA_VERSION"], [205, 3, 1, "", "SCHEMA_REGISTRY_SUBJECT_SCHEMA_COMPATIBILITY"]], "pyatlan.model.assets.Sigma": [[206, 3, 1, "", "SIGMA_DATA_ELEMENT_NAME"], [206, 3, 1, "", "SIGMA_DATA_ELEMENT_QUALIFIED_NAME"], [206, 3, 1, "", "SIGMA_PAGE_NAME"], [206, 3, 1, "", "SIGMA_PAGE_QUALIFIED_NAME"], [206, 3, 1, "", "SIGMA_WORKBOOK_NAME"], [206, 3, 1, "", "SIGMA_WORKBOOK_QUALIFIED_NAME"]], "pyatlan.model.assets.SigmaDataElement": [[207, 3, 1, "", "SIGMA_DATA_ELEMENT_FIELDS"], [207, 3, 1, "", "SIGMA_DATA_ELEMENT_FIELD_COUNT"], [207, 3, 1, "", "SIGMA_DATA_ELEMENT_QUERY"], [207, 3, 1, "", "SIGMA_DATA_ELEMENT_TYPE"], [207, 3, 1, "", "SIGMA_PAGE"]], "pyatlan.model.assets.SigmaDataElementField": [[208, 3, 1, "", "SIGMA_DATA_ELEMENT"], [208, 3, 1, "", "SIGMA_DATA_ELEMENT_FIELD_FORMULA"], [208, 3, 1, "", "SIGMA_DATA_ELEMENT_FIELD_IS_HIDDEN"]], "pyatlan.model.assets.SigmaDataset": [[209, 3, 1, "", "SIGMA_DATASET_COLUMNS"], [209, 3, 1, "", "SIGMA_DATASET_COLUMN_COUNT"]], "pyatlan.model.assets.SigmaDatasetColumn": [[210, 3, 1, "", "SIGMA_DATASET"], [210, 3, 1, "", "SIGMA_DATASET_NAME"], [210, 3, 1, "", "SIGMA_DATASET_QUALIFIED_NAME"]], "pyatlan.model.assets.SigmaPage": [[211, 3, 1, "", "SIGMA_DATA_ELEMENTS"], [211, 3, 1, "", "SIGMA_DATA_ELEMENT_COUNT"], [211, 3, 1, "", "SIGMA_WORKBOOK"]], "pyatlan.model.assets.SigmaWorkbook": [[212, 3, 1, "", "SIGMA_PAGES"], [212, 3, 1, "", "SIGMA_PAGE_COUNT"]], "pyatlan.model.assets.SisenseDashboard": [[214, 3, 1, "", "SISENSE_DASHBOARD_FOLDER_QUALIFIED_NAME"], [214, 3, 1, "", "SISENSE_DASHBOARD_WIDGET_COUNT"], [214, 3, 1, "", "SISENSE_DATAMODELS"], [214, 3, 1, "", "SISENSE_FOLDER"], [214, 3, 1, "", "SISENSE_WIDGETS"]], "pyatlan.model.assets.SisenseDatamodel": [[215, 3, 1, "", "SISENSE_DASHBOARDS"], [215, 3, 1, "", "SISENSE_DATAMODEL_LAST_BUILD_TIME"], [215, 3, 1, "", "SISENSE_DATAMODEL_LAST_PUBLISH_TIME"], [215, 3, 1, "", "SISENSE_DATAMODEL_LAST_SUCCESSFUL_BUILD_TIME"], [215, 3, 1, "", "SISENSE_DATAMODEL_RELATION_TYPE"], [215, 3, 1, "", "SISENSE_DATAMODEL_REVISION"], [215, 3, 1, "", "SISENSE_DATAMODEL_SERVER"], [215, 3, 1, "", "SISENSE_DATAMODEL_TABLES"], [215, 3, 1, "", "SISENSE_DATAMODEL_TABLE_COUNT"], [215, 3, 1, "", "SISENSE_DATAMODEL_TYPE"]], "pyatlan.model.assets.SisenseDatamodelTable": [[216, 3, 1, "", "SISENSE_DATAMODEL"], [216, 3, 1, "", "SISENSE_DATAMODEL_QUALIFIED_NAME"], [216, 3, 1, "", "SISENSE_DATAMODEL_TABLE_COLUMN_COUNT"], [216, 3, 1, "", "SISENSE_DATAMODEL_TABLE_EXPRESSION"], [216, 3, 1, "", "SISENSE_DATAMODEL_TABLE_IS_HIDDEN"], [216, 3, 1, "", "SISENSE_DATAMODEL_TABLE_IS_MATERIALIZED"], [216, 3, 1, "", "SISENSE_DATAMODEL_TABLE_LIVE_QUERY_SETTINGS"], [216, 3, 1, "", "SISENSE_DATAMODEL_TABLE_SCHEDULE"], [216, 3, 1, "", "SISENSE_DATAMODEL_TABLE_TYPE"], [216, 3, 1, "", "SISENSE_WIDGETS"]], "pyatlan.model.assets.SisenseFolder": [[217, 3, 1, "", "SISENSE_CHILD_FOLDERS"], [217, 3, 1, "", "SISENSE_DASHBOARDS"], [217, 3, 1, "", "SISENSE_FOLDER_PARENT_FOLDER_QUALIFIED_NAME"], [217, 3, 1, "", "SISENSE_PARENT_FOLDER"], [217, 3, 1, "", "SISENSE_WIDGETS"]], "pyatlan.model.assets.SisenseWidget": [[218, 3, 1, "", "SISENSE_DASHBOARD"], [218, 3, 1, "", "SISENSE_DATAMODEL_TABLES"], [218, 3, 1, "", "SISENSE_FOLDER"], [218, 3, 1, "", "SISENSE_WIDGET_COLUMN_COUNT"], [218, 3, 1, "", "SISENSE_WIDGET_DASHBOARD_QUALIFIED_NAME"], [218, 3, 1, "", "SISENSE_WIDGET_FOLDER_QUALIFIED_NAME"], [218, 3, 1, "", "SISENSE_WIDGET_SIZE"], [218, 3, 1, "", "SISENSE_WIDGET_SUB_TYPE"]], "pyatlan.model.assets.SnowflakeDynamicTable": [[219, 3, 1, "", "DEFINITION"]], "pyatlan.model.assets.SnowflakePipe": [[220, 3, 1, "", "ATLAN_SCHEMA"], [220, 3, 1, "", "DEFINITION"], [220, 3, 1, "", "SNOWFLAKE_PIPE_IS_AUTO_INGEST_ENABLED"], [220, 3, 1, "", "SNOWFLAKE_PIPE_NOTIFICATION_CHANNEL_NAME"]], "pyatlan.model.assets.SnowflakeStream": [[221, 3, 1, "", "ATLAN_SCHEMA"], [221, 3, 1, "", "SNOWFLAKE_STREAM_IS_STALE"], [221, 3, 1, "", "SNOWFLAKE_STREAM_MODE"], [221, 3, 1, "", "SNOWFLAKE_STREAM_SOURCE_TYPE"], [221, 3, 1, "", "SNOWFLAKE_STREAM_STALE_AFTER"], [221, 3, 1, "", "SNOWFLAKE_STREAM_TYPE"]], "pyatlan.model.assets.SnowflakeTag": [[222, 3, 1, "", "ATLAN_SCHEMA"], [222, 3, 1, "", "CALCULATION_VIEW_NAME"], [222, 3, 1, "", "CALCULATION_VIEW_QUALIFIED_NAME"], [222, 3, 1, "", "DATABASE_NAME"], [222, 3, 1, "", "DATABASE_QUALIFIED_NAME"], [222, 3, 1, "", "DBT_MODELS"], [222, 3, 1, "", "DBT_SOURCES"], [222, 3, 1, "", "DBT_TESTS"], [222, 3, 1, "", "IS_PROFILED"], [222, 3, 1, "", "LAST_PROFILED_AT"], [222, 3, 1, "", "MAPPED_CLASSIFICATION_NAME"], [222, 3, 1, "", "QUERY_COUNT"], [222, 3, 1, "", "QUERY_COUNT_UPDATED_AT"], [222, 3, 1, "", "QUERY_USER_COUNT"], [222, 3, 1, "", "QUERY_USER_MAP"], [222, 3, 1, "", "SCHEMA_NAME"], [222, 3, 1, "", "SCHEMA_QUALIFIED_NAME"], [222, 3, 1, "", "SQL_DBT_MODELS"], [222, 3, 1, "", "SQL_DBT_SOURCES"], [222, 3, 1, "", "TABLE_NAME"], [222, 3, 1, "", "TABLE_QUALIFIED_NAME"], [222, 3, 1, "", "TAG_ALLOWED_VALUES"], [222, 3, 1, "", "TAG_ATTRIBUTES"], [222, 3, 1, "", "TAG_ID"], [222, 3, 1, "", "VIEW_NAME"], [222, 3, 1, "", "VIEW_QUALIFIED_NAME"]], "pyatlan.model.assets.SodaCheck": [[224, 3, 1, "", "SODA_CHECK_ASSETS"], [224, 3, 1, "", "SODA_CHECK_COLUMNS"], [224, 3, 1, "", "SODA_CHECK_DEFINITION"], [224, 3, 1, "", "SODA_CHECK_EVALUATION_STATUS"], [224, 3, 1, "", "SODA_CHECK_ID"], [224, 3, 1, "", "SODA_CHECK_INCIDENT_COUNT"], [224, 3, 1, "", "SODA_CHECK_LAST_SCAN_AT"]], "pyatlan.model.assets.Spark": [[225, 3, 1, "", "SPARK_RUN_END_TIME"], [225, 3, 1, "", "SPARK_RUN_OPEN_LINEAGE_STATE"], [225, 3, 1, "", "SPARK_RUN_OPEN_LINEAGE_VERSION"], [225, 3, 1, "", "SPARK_RUN_START_TIME"], [225, 3, 1, "", "SPARK_RUN_VERSION"]], "pyatlan.model.assets.SparkJob": [[226, 3, 1, "", "INPUTS"], [226, 3, 1, "", "OUTPUTS"], [226, 3, 1, "", "PROCESS"], [226, 3, 1, "", "SPARK_APP_NAME"], [226, 3, 1, "", "SPARK_MASTER"]], "pyatlan.model.assets.Stakeholder": [[228, 3, 1, "", "STAKEHOLDER_DATA_DOMAIN"], [228, 3, 1, "", "STAKEHOLDER_DOMAIN_QUALIFIED_NAME"], [228, 3, 1, "", "STAKEHOLDER_TITLE"], [228, 3, 1, "", "STAKEHOLDER_TITLE_GUID"]], "pyatlan.model.assets.StakeholderTitle": [[229, 3, 1, "", "STAKEHOLDERS"], [229, 3, 1, "", "STAKEHOLDER_TITLE_DOMAIN_QUALIFIED_NAMES"]], "pyatlan.model.assets.Table": [[230, 3, 1, "", "ALIAS"], [230, 3, 1, "", "ATLAN_SCHEMA"], [230, 3, 1, "", "COLUMNS"], [230, 3, 1, "", "COLUMN_COUNT"], [230, 3, 1, "", "DIMENSIONS"], [230, 3, 1, "", "EXTERNAL_LOCATION"], [230, 3, 1, "", "EXTERNAL_LOCATION_FORMAT"], [230, 3, 1, "", "EXTERNAL_LOCATION_REGION"], [230, 3, 1, "", "FACTS"], [230, 3, 1, "", "IS_PARTITIONED"], [230, 3, 1, "", "IS_QUERY_PREVIEW"], [230, 3, 1, "", "IS_SHARDED"], [230, 3, 1, "", "IS_TEMPORARY"], [230, 3, 1, "", "PARTITIONS"], [230, 3, 1, "", "PARTITION_COUNT"], [230, 3, 1, "", "PARTITION_LIST"], [230, 3, 1, "", "PARTITION_STRATEGY"], [230, 3, 1, "", "QUERIES"], [230, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [230, 3, 1, "", "ROW_COUNT"], [230, 3, 1, "", "SIZE_BYTES"]], "pyatlan.model.assets.TablePartition": [[242, 3, 1, "", "ALIAS"], [242, 3, 1, "", "CHILD_TABLE_PARTITIONS"], [242, 3, 1, "", "COLUMNS"], [242, 3, 1, "", "COLUMN_COUNT"], [242, 3, 1, "", "CONSTRAINT"], [242, 3, 1, "", "EXTERNAL_LOCATION"], [242, 3, 1, "", "EXTERNAL_LOCATION_FORMAT"], [242, 3, 1, "", "EXTERNAL_LOCATION_REGION"], [242, 3, 1, "", "IS_PARTITIONED"], [242, 3, 1, "", "IS_QUERY_PREVIEW"], [242, 3, 1, "", "IS_TEMPORARY"], [242, 3, 1, "", "PARENT_TABLE"], [242, 3, 1, "", "PARENT_TABLE_PARTITION"], [242, 3, 1, "", "PARTITION_COUNT"], [242, 3, 1, "", "PARTITION_LIST"], [242, 3, 1, "", "PARTITION_STRATEGY"], [242, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [242, 3, 1, "", "ROW_COUNT"], [242, 3, 1, "", "SIZE_BYTES"]], "pyatlan.model.assets.TableauCalculatedField": [[232, 3, 1, "", "DATASOURCE"], [232, 3, 1, "", "DATASOURCE_QUALIFIED_NAME"], [232, 3, 1, "", "DATA_CATEGORY"], [232, 3, 1, "", "FORMULA"], [232, 3, 1, "", "PROJECT_HIERARCHY"], [232, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [232, 3, 1, "", "ROLE"], [232, 3, 1, "", "SITE_QUALIFIED_NAME"], [232, 3, 1, "", "TABLEAU_DATA_TYPE"], [232, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"], [232, 3, 1, "", "UPSTREAM_FIELDS"], [232, 3, 1, "", "WORKBOOK_QUALIFIED_NAME"], [232, 3, 1, "", "WORKSHEETS"]], "pyatlan.model.assets.TableauDashboard": [[233, 3, 1, "", "PROJECT_HIERARCHY"], [233, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [233, 3, 1, "", "SITE_QUALIFIED_NAME"], [233, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"], [233, 3, 1, "", "WORKBOOK"], [233, 3, 1, "", "WORKBOOK_QUALIFIED_NAME"], [233, 3, 1, "", "WORKSHEETS"]], "pyatlan.model.assets.TableauDatasource": [[234, 3, 1, "", "CERTIFICATION_NOTE"], [234, 3, 1, "", "CERTIFIER"], [234, 3, 1, "", "CERTIFIER_DISPLAY_NAME"], [234, 3, 1, "", "FIELDS"], [234, 3, 1, "", "HAS_EXTRACTS"], [234, 3, 1, "", "IS_CERTIFIED"], [234, 3, 1, "", "IS_PUBLISHED"], [234, 3, 1, "", "PROJECT"], [234, 3, 1, "", "PROJECT_HIERARCHY"], [234, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [234, 3, 1, "", "SITE_QUALIFIED_NAME"], [234, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"], [234, 3, 1, "", "UPSTREAM_DATASOURCES"], [234, 3, 1, "", "UPSTREAM_TABLES"], [234, 3, 1, "", "WORKBOOK"], [234, 3, 1, "", "WORKBOOK_QUALIFIED_NAME"]], "pyatlan.model.assets.TableauDatasourceField": [[235, 3, 1, "", "DATASOURCE"], [235, 3, 1, "", "DATASOURCE_FIELD_TYPE"], [235, 3, 1, "", "DATASOURCE_QUALIFIED_NAME"], [235, 3, 1, "", "FULLY_QUALIFIED_NAME"], [235, 3, 1, "", "PROJECT_HIERARCHY"], [235, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [235, 3, 1, "", "SITE_QUALIFIED_NAME"], [235, 3, 1, "", "TABLEAU_DATASOURCE_FIELD_BIN_SIZE"], [235, 3, 1, "", "TABLEAU_DATASOURCE_FIELD_DATA_CATEGORY"], [235, 3, 1, "", "TABLEAU_DATASOURCE_FIELD_DATA_TYPE"], [235, 3, 1, "", "TABLEAU_DATASOURCE_FIELD_FORMULA"], [235, 3, 1, "", "TABLEAU_DATASOURCE_FIELD_ROLE"], [235, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"], [235, 3, 1, "", "UPSTREAM_COLUMNS"], [235, 3, 1, "", "UPSTREAM_FIELDS"], [235, 3, 1, "", "UPSTREAM_TABLES"], [235, 3, 1, "", "WORKBOOK_QUALIFIED_NAME"], [235, 3, 1, "", "WORKSHEETS"]], "pyatlan.model.assets.TableauFlow": [[236, 3, 1, "", "INPUT_FIELDS"], [236, 3, 1, "", "OUTPUT_FIELDS"], [236, 3, 1, "", "OUTPUT_STEPS"], [236, 3, 1, "", "PROJECT"], [236, 3, 1, "", "PROJECT_HIERARCHY"], [236, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [236, 3, 1, "", "SITE_QUALIFIED_NAME"], [236, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "pyatlan.model.assets.TableauMetric": [[237, 3, 1, "", "PROJECT"], [237, 3, 1, "", "PROJECT_HIERARCHY"], [237, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [237, 3, 1, "", "SITE_QUALIFIED_NAME"], [237, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "pyatlan.model.assets.TableauProject": [[238, 3, 1, "", "CHILD_PROJECTS"], [238, 3, 1, "", "DATASOURCES"], [238, 3, 1, "", "FLOWS"], [238, 3, 1, "", "IS_TOP_LEVEL_PROJECT"], [238, 3, 1, "", "PARENT_PROJECT"], [238, 3, 1, "", "PROJECT_HIERARCHY"], [238, 3, 1, "", "SITE"], [238, 3, 1, "", "SITE_QUALIFIED_NAME"], [238, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"], [238, 3, 1, "", "WORKBOOKS"]], "pyatlan.model.assets.TableauSite": [[239, 3, 1, "", "PROJECTS"]], "pyatlan.model.assets.TableauWorkbook": [[240, 3, 1, "", "DASHBOARDS"], [240, 3, 1, "", "DATASOURCES"], [240, 3, 1, "", "PROJECT"], [240, 3, 1, "", "PROJECT_HIERARCHY"], [240, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [240, 3, 1, "", "SITE_QUALIFIED_NAME"], [240, 3, 1, "", "TOP_LEVEL_PROJECT_NAME"], [240, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"], [240, 3, 1, "", "WORKSHEETS"]], "pyatlan.model.assets.TableauWorksheet": [[241, 3, 1, "", "CALCULATED_FIELDS"], [241, 3, 1, "", "DASHBOARDS"], [241, 3, 1, "", "DATASOURCE_FIELDS"], [241, 3, 1, "", "PROJECT_HIERARCHY"], [241, 3, 1, "", "PROJECT_QUALIFIED_NAME"], [241, 3, 1, "", "SITE_QUALIFIED_NAME"], [241, 3, 1, "", "TOP_LEVEL_PROJECT_QUALIFIED_NAME"], [241, 3, 1, "", "WORKBOOK"], [241, 3, 1, "", "WORKBOOK_QUALIFIED_NAME"]], "pyatlan.model.assets.Tag": [[243, 3, 1, "", "MAPPED_CLASSIFICATION_NAME"], [243, 3, 1, "", "TAG_ALLOWED_VALUES"], [243, 3, 1, "", "TAG_ATTRIBUTES"], [243, 3, 1, "", "TAG_ID"]], "pyatlan.model.assets.TagAttachment": [[244, 3, 1, "", "TAG_ATTACHMENT_STRING_VALUE"], [244, 3, 1, "", "TAG_QUALIFIED_NAME"]], "pyatlan.model.assets.Task": [[245, 3, 1, "", "TASK_ACTIONS"], [245, 3, 1, "", "TASK_EXECUTION_ACTION"], [245, 3, 1, "", "TASK_EXECUTION_COMMENT"], [245, 3, 1, "", "TASK_EXPIRES_AT"], [245, 3, 1, "", "TASK_IS_READ"], [245, 3, 1, "", "TASK_PROPOSALS"], [245, 3, 1, "", "TASK_RECIPIENT"], [245, 3, 1, "", "TASK_RELATED_ASSET_GUID"], [245, 3, 1, "", "TASK_REQUESTOR"], [245, 3, 1, "", "TASK_REQUESTOR_COMMENT"], [245, 3, 1, "", "TASK_TYPE"]], "pyatlan.model.assets.Thoughtspot": [[246, 3, 1, "", "THOUGHTSPOT_CHART_TYPE"], [246, 3, 1, "", "THOUGHTSPOT_COLUMN_COUNT"], [246, 3, 1, "", "THOUGHTSPOT_JOIN_COUNT"], [246, 3, 1, "", "THOUGHTSPOT_QUESTION_TEXT"]], "pyatlan.model.assets.ThoughtspotColumn": [[248, 3, 1, "", "THOUGHTSPOT_COLUMN_DATA_TYPE"], [248, 3, 1, "", "THOUGHTSPOT_COLUMN_TYPE"], [248, 3, 1, "", "THOUGHTSPOT_TABLE"], [248, 3, 1, "", "THOUGHTSPOT_TABLE_QUALIFIED_NAME"], [248, 3, 1, "", "THOUGHTSPOT_VIEW"], [248, 3, 1, "", "THOUGHTSPOT_VIEW_QUALIFIED_NAME"], [248, 3, 1, "", "THOUGHTSPOT_WORKSHEET"], [248, 3, 1, "", "THOUGHTSPOT_WORKSHEET_QUALIFIED_NAME"]], "pyatlan.model.assets.ThoughtspotDashlet": [[249, 3, 1, "", "THOUGHTSPOT_LIVEBOARD"], [249, 3, 1, "", "THOUGHTSPOT_LIVEBOARD_NAME"], [249, 3, 1, "", "THOUGHTSPOT_LIVEBOARD_QUALIFIED_NAME"]], "pyatlan.model.assets.ThoughtspotLiveboard": [[250, 3, 1, "", "THOUGHTSPOT_DASHLETS"]], "pyatlan.model.assets.ThoughtspotTable": [[251, 3, 1, "", "THOUGHTSPOT_COLUMNS"]], "pyatlan.model.assets.ThoughtspotView": [[252, 3, 1, "", "THOUGHTSPOT_COLUMNS"]], "pyatlan.model.assets.ThoughtspotWorksheet": [[253, 3, 1, "", "THOUGHTSPOT_COLUMNS"]], "pyatlan.model.assets.View": [[254, 3, 1, "", "ALIAS"], [254, 3, 1, "", "ATLAN_SCHEMA"], [254, 3, 1, "", "COLUMNS"], [254, 3, 1, "", "COLUMN_COUNT"], [254, 3, 1, "", "DEFINITION"], [254, 3, 1, "", "IS_QUERY_PREVIEW"], [254, 3, 1, "", "IS_TEMPORARY"], [254, 3, 1, "", "QUERIES"], [254, 3, 1, "", "QUERY_PREVIEW_CONFIG"], [254, 3, 1, "", "ROW_COUNT"], [254, 3, 1, "", "SIZE_BYTES"]], "pyatlan.model.assets.Workflow": [[255, 3, 1, "", "WORKFLOW_CONFIG"], [255, 3, 1, "", "WORKFLOW_CREATED_BY"], [255, 3, 1, "", "WORKFLOW_DELETED_AT"], [255, 3, 1, "", "WORKFLOW_RUN_EXPIRES_IN"], [255, 3, 1, "", "WORKFLOW_STATUS"], [255, 3, 1, "", "WORKFLOW_TEMPLATE_GUID"], [255, 3, 1, "", "WORKFLOW_TYPE"], [255, 3, 1, "", "WORKFLOW_UPDATED_BY"]], "pyatlan.model.assets.WorkflowRun": [[256, 3, 1, "", "WORKFLOW_RUN_COMMENT"], [256, 3, 1, "", "WORKFLOW_RUN_CONFIG"], [256, 3, 1, "", "WORKFLOW_RUN_CREATED_BY"], [256, 3, 1, "", "WORKFLOW_RUN_DELETED_AT"], [256, 3, 1, "", "WORKFLOW_RUN_EXPIRES_AT"], [256, 3, 1, "", "WORKFLOW_RUN_ON_ASSET_GUID"], [256, 3, 1, "", "WORKFLOW_RUN_STATUS"], [256, 3, 1, "", "WORKFLOW_RUN_TYPE"], [256, 3, 1, "", "WORKFLOW_RUN_UPDATED_BY"], [256, 3, 1, "", "WORKFLOW_RUN_WORKFLOW_GUID"]], "pyatlan.model.atlan_image": [[280, 0, 1, "", "AtlanImage"]], "pyatlan.model.core": [[281, 0, 1, "", "Announcement"], [281, 0, 1, "", "AssetRequest"], [281, 0, 1, "", "AssetResponse"], [281, 0, 1, "", "AtlanTag"], [281, 0, 1, "", "AtlanTagName"], [281, 0, 1, "", "AtlanTags"], [281, 0, 1, "", "BulkRequest"], [281, 0, 1, "", "SearchRequest"]], "pyatlan.model.core.AtlanTagName": [[281, 1, 1, "", "get_deleted_sentinel"]], "pyatlan.model.custom_metadata": [[282, 0, 1, "", "CustomMetadataDict"], [282, 0, 1, "", "CustomMetadataProxy"], [282, 0, 1, "", "CustomMetadataRequest"]], "pyatlan.model.custom_metadata.CustomMetadataDict": [[282, 4, 1, "", "business_attributes"], [282, 1, 1, "", "clear_all"], [282, 1, 1, "", "clear_unset"], [282, 1, 1, "", "get_deleted_sentinel"], [282, 1, 1, "", "is_set"], [282, 4, 1, "", "modified"]], "pyatlan.model.fields.atlan_fields": [[278, 0, 1, "", "AtlanField"], [268, 0, 1, "", "BooleanField"], [269, 0, 1, "", "CustomMetadataField"], [270, 0, 1, "", "KeywordField"], [271, 0, 1, "", "KeywordTextField"], [272, 0, 1, "", "KeywordTextStemmedField"], [273, 0, 1, "", "NumericField"], [274, 0, 1, "", "NumericRankField"], [275, 0, 1, "", "RelationField"], [276, 0, 1, "", "SearchableField"], [277, 0, 1, "", "TextField"]], "pyatlan.model.fields.atlan_fields.BooleanField": [[268, 4, 1, "", "boolean_field_name"], [268, 1, 1, "", "bucket_by"], [268, 1, 1, "", "eq"], [268, 1, 1, "", "has_any_value"], [268, 4, 1, "", "in_lineage"], [268, 1, 1, "", "order"]], "pyatlan.model.fields.atlan_fields.CustomMetadataField": [[269, 1, 1, "", "between"], [269, 1, 1, "", "bucket_by"], [269, 1, 1, "", "eq"], [269, 1, 1, "", "gt"], [269, 1, 1, "", "gte"], [269, 1, 1, "", "has_any_value"], [269, 1, 1, "", "lt"], [269, 1, 1, "", "lte"], [269, 1, 1, "", "match"], [269, 1, 1, "", "order"], [269, 1, 1, "", "startswith"], [269, 1, 1, "", "within"]], "pyatlan.model.fields.atlan_fields.KeywordField": [[270, 1, 1, "", "bucket_by"], [270, 1, 1, "", "eq"], [270, 1, 1, "", "has_any_value"], [270, 4, 1, "", "in_lineage"], [270, 4, 1, "", "keyword_field_name"], [270, 1, 1, "", "order"], [270, 1, 1, "", "regexp"], [270, 1, 1, "", "startswith"], [270, 1, 1, "", "wildcard"], [270, 1, 1, "", "within"]], "pyatlan.model.fields.atlan_fields.KeywordTextField": [[271, 1, 1, "", "bucket_by"], [271, 1, 1, "", "eq"], [271, 1, 1, "", "has_any_value"], [271, 4, 1, "", "in_lineage"], [271, 4, 1, "", "keyword_field_name"], [271, 1, 1, "", "match"], [271, 1, 1, "", "order"], [271, 1, 1, "", "regexp"], [271, 1, 1, "", "startswith"], [271, 4, 1, "", "text_field_name"], [271, 1, 1, "", "wildcard"], [271, 1, 1, "", "within"]], "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField": [[272, 1, 1, "", "bucket_by"], [272, 1, 1, "", "eq"], [272, 1, 1, "", "has_any_value"], [272, 4, 1, "", "in_lineage"], [272, 4, 1, "", "keyword_field_name"], [272, 1, 1, "", "match"], [272, 1, 1, "", "match_stemmed"], [272, 1, 1, "", "order"], [272, 1, 1, "", "regexp"], [272, 1, 1, "", "startswith"], [272, 4, 1, "", "text_field_name"], [272, 1, 1, "", "wildcard"], [272, 1, 1, "", "within"]], "pyatlan.model.fields.atlan_fields.NumericField": [[273, 1, 1, "", "avg"], [273, 1, 1, "", "between"], [273, 1, 1, "", "bucket_by"], [273, 1, 1, "", "eq"], [273, 1, 1, "", "gt"], [273, 1, 1, "", "gte"], [273, 1, 1, "", "has_any_value"], [273, 4, 1, "", "in_lineage"], [273, 1, 1, "", "lt"], [273, 1, 1, "", "lte"], [273, 1, 1, "", "max"], [273, 1, 1, "", "min"], [273, 4, 1, "", "numeric_field_name"], [273, 1, 1, "", "order"], [273, 1, 1, "", "sum"]], "pyatlan.model.fields.atlan_fields.NumericRankField": [[274, 1, 1, "", "avg"], [274, 1, 1, "", "between"], [274, 1, 1, "", "bucket_by"], [274, 1, 1, "", "eq"], [274, 1, 1, "", "gt"], [274, 1, 1, "", "gte"], [274, 1, 1, "", "has_any_value"], [274, 4, 1, "", "in_lineage"], [274, 1, 1, "", "lt"], [274, 1, 1, "", "lte"], [274, 1, 1, "", "max"], [274, 1, 1, "", "min"], [274, 4, 1, "", "numeric_field_name"], [274, 1, 1, "", "order"], [274, 1, 1, "", "sum"]], "pyatlan.model.fields.atlan_fields.SearchableField": [[276, 1, 1, "", "bucket_by"], [276, 1, 1, "", "has_any_value"], [276, 1, 1, "", "order"]], "pyatlan.model.fields.atlan_fields.TextField": [[277, 1, 1, "", "bucket_by"], [277, 1, 1, "", "has_any_value"], [277, 4, 1, "", "in_lineage"], [277, 1, 1, "", "match"], [277, 1, 1, "", "order"], [277, 4, 1, "", "text_field_name"]], "pyatlan.model.group": [[283, 0, 1, "", "AtlanGroup"]], "pyatlan.model.keycloak_events": [[284, 0, 1, "", "AdminEvent"], [284, 0, 1, "", "KeycloakEvent"]], "pyatlan.model.lineage": [[285, 0, 1, "", "EntityFilter"], [285, 0, 1, "", "FilterList"], [285, 0, 1, "", "LineageGraph"], [285, 0, 1, "", "LineageListRequest"], [285, 0, 1, "", "LineageRequest"], [285, 0, 1, "", "LineageResponse"]], "pyatlan.model.lineage.FilterList": [[285, 0, 1, "", "Condition"]], "pyatlan.model.role": [[286, 0, 1, "", "AtlanRole"]], "pyatlan.model.role.AtlanRole": [[286, 3, 1, "", "id"]], "pyatlan.model.typedef": [[287, 0, 1, "", "AtlanTagDef"], [287, 0, 1, "", "AttributeDef"], [287, 0, 1, "", "CustomMetadataDef"], [287, 0, 1, "", "EntityDef"], [287, 0, 1, "", "EnumDef"], [287, 0, 1, "", "RelationshipAttributeDef"], [287, 0, 1, "", "RelationshipDef"], [287, 0, 1, "", "StructDef"], [287, 0, 1, "", "TypeDef"], [287, 0, 1, "", "TypeDefResponse"]], "pyatlan.model.typedef.AttributeDef": [[287, 4, 1, "", "applicable_asset_types"], [287, 4, 1, "", "applicable_connections"], [287, 4, 1, "", "applicable_domain_types"], [287, 4, 1, "", "applicable_domains"], [287, 4, 1, "", "applicable_entity_types"], [287, 4, 1, "", "applicable_glossaries"], [287, 4, 1, "", "applicable_glossary_types"], [287, 4, 1, "", "applicable_other_asset_types"]], "pyatlan.model.typedef.EnumDef": [[287, 1, 1, "", "create"], [287, 1, 1, "", "get_valid_values"], [287, 1, 1, "", "update"]], "pyatlan.model.user": [[288, 0, 1, "", "AtlanUser"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:exception", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "exception", "Python exception"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"accesscontrol": 0, "adl": 1, "adlsaccount": 2, "adlscontain": 3, "adlsobject": 4, "airflow": 5, "airflowdag": 6, "airflowtask": 7, "api": 8, "apipath": 9, "apispec": 10, "asset": [11, 257], "atlasglossari": 12, "atlasglossarycategori": 13, "atlasglossaryterm": 14, "authpolici": 15, "authservic": 16, "aw": 17, "azur": 18, "azureeventhub": 19, "azureeventhubconsumergroup": 20, "azureservicebu": 21, "azureservicebusnamespac": 22, "azureservicebustop": 23, "badg": 24, "bi": 25, "biprocess": 26, "calculationview": 27, "catalog": 28, "cloud": 29, "cognit": 30, "cognite3dmodel": 31, "cogniteasset": 32, "cogniteev": 33, "cognitefil": 34, "cognitesequ": 35, "cognitetimeseri": 36, "cogno": 37, "cognosdashboard": 38, "cognosdatasourc": 39, "cognosexplor": 40, "cognosfil": 41, "cognosfold": 42, "cognosmodul": 43, "cognospackag": 44, "cognosreport": 45, "collect": 46, "column": 47, "columnprocess": 48, "connect": 49, "cosmosmongodb": 50, "cosmosmongodbcollect": 51, "cosmosmongodbdatabas": 52, "cube": 53, "cubedimens": 54, "cubefield": 55, "cubehierarchi": 56, "databas": 57, "datacontract": 58, "datadomain": 59, "datamesh": 60, "dataproduct": 61, "dataqu": 62, "dataset": 63, "datastudio": 64, "datastudioasset": 65, "dbt": 66, "dbtcolumnprocess": 67, "dbtmetric": 68, "dbtmodel": 69, "dbtmodelcolumn": 70, "dbtprocess": 71, "dbtsourc": 72, "dbttag": 73, "dbttest": 74, "domo": 75, "domocard": 76, "domodashboard": 77, "domodataset": 78, "domodatasetcolumn": 79, "dynamodb": 80, "dynamodbglobalsecondaryindex": 81, "dynamodblocalsecondaryindex": 82, "dynamodbsecondaryindex": 83, "dynamodbt": 84, "eventstor": 85, "file": 86, "folder": 87, "function": 88, "gc": 89, "gcsbucket": 90, "gcsobject": 91, "googl": 92, "infrastructur": 93, "insight": 94, "kafka": 95, "kafkaconsumergroup": 96, "kafkatop": 97, "link": 98, "looker": 99, "lookerdashboard": 100, "lookerexplor": 101, "lookerfield": 102, "lookerfold": 103, "lookerlook": 104, "lookermodel": 105, "lookerproject": 106, "lookerqueri": 107, "lookertil": 108, "lookerview": 109, "materialisedview": 110, "matillion": 111, "matillioncompon": 112, "matilliongroup": 113, "matillionjob": 114, "matillionproject": 115, "mcincid": 116, "mcmonitor": 117, "metabas": 118, "metabasecollect": 119, "metabasedashboard": 120, "metabasequest": 121, "metric": 122, "microstrategi": 123, "microstrategyattribut": 124, "microstrategycub": 125, "microstrategydocu": 126, "microstrategydossi": 127, "microstrategyfact": 128, "microstrategymetr": 129, "microstrategyproject": 130, "microstrategyreport": 131, "microstrategyvisu": 132, "mode": 133, "modechart": 134, "modecollect": 135, "modequeri": 136, "modereport": 137, "modeworkspac": 138, "mongodb": 139, "mongodbcollect": 140, "mongodbdatabas": 141, "montecarlo": 142, "multidimensionaldataset": 143, "namespac": 144, "nosql": 145, "objectstor": 146, "persona": 147, "powerbi": 148, "powerbicolumn": 149, "powerbidashboard": 150, "powerbidataflow": 151, "powerbidataset": 152, "powerbidatasourc": 153, "powerbimeasur": 154, "powerbipag": 155, "powerbireport": 156, "powerbit": 157, "powerbitil": 158, "powerbiworkspac": 159, "preset": 160, "presetchart": 161, "presetdashboard": 162, "presetdataset": 163, "presetworkspac": 164, "procedur": 165, "process": 166, "processexecut": 167, "purpos": 168, "qlik": 169, "qlikapp": 170, "qlikchart": 171, "qlikdataset": 172, "qliksheet": 173, "qlikspac": 174, "qlikstream": 175, "queri": 176, "quicksight": 177, "quicksightanalysi": 178, "quicksightanalysisvisu": 179, "quicksightdashboard": 180, "quicksightdashboardvisu": 181, "quicksightdataset": 182, "quicksightdatasetfield": 183, "quicksightfold": 184, "readm": 185, "readmetempl": 186, "redash": 187, "redashdashboard": 188, "redashqueri": 189, "redashvisu": 190, "referenc": 191, "resourc": 192, "s3": 193, "s3bucket": 194, "s3object": 195, "saa": 196, "salesforc": 197, "salesforcedashboard": 198, "salesforcefield": 199, "salesforceobject": 200, "salesforceorgan": 201, "salesforcereport": 202, "schema": 203, "schemaregistri": 204, "schemaregistrysubject": 205, "sigma": 206, "sigmadatael": 207, "sigmadataelementfield": 208, "sigmadataset": 209, "sigmadatasetcolumn": 210, "sigmapag": 211, "sigmaworkbook": 212, "sisens": 213, "sisensedashboard": 214, "sisensedatamodel": 215, "sisensedatamodelt": 216, "sisensefold": 217, "sisensewidget": 218, "snowflakedynamict": 219, "snowflakepip": 220, "snowflakestream": 221, "snowflaketag": 222, "soda": 223, "sodacheck": 224, "spark": 225, "sparkjob": 226, "sql": 227, "stakehold": 228, "stakeholdertitl": 229, "tabl": 230, "tableau": 231, "tableaucalculatedfield": 232, "tableaudashboard": 233, "tableaudatasourc": 234, "tableaudatasourcefield": 235, "tableauflow": 236, "tableaumetr": 237, "tableauproject": 238, "tableausit": 239, "tableauworkbook": 240, "tableauworksheet": 241, "tablepartit": 242, "tag": 243, "tagattach": 244, "task": 245, "thoughtspot": 246, "thoughtspotansw": 247, "thoughtspotcolumn": 248, "thoughtspotdashlet": 249, "thoughtspotliveboard": 250, "thoughtspott": 251, "thoughtspotview": 252, "thoughtspotworksheet": 253, "view": 254, "workflow": 255, "workflowrun": 256, "atlantagcach": 258, "custommetadatacach": 259, "enumcach": 260, "groupcach": 261, "rolecach": 262, "usercach": 263, "cach": 264, "atlan": [265, 280], "client": 265, "interfac": 265, "event": [266, 284], "atlaneventhandl": 266, "error": 267, "handl": 267, "booleanfield": 268, "custommetadatafield": 269, "keywordfield": 270, "keywordtextfield": 271, "keywordtextstemmedfield": 272, "numericfield": 273, "numericrankfield": 274, "relationfield": 275, "searchablefield": 276, "textfield": 277, "field": 278, "atlanfield": 278, "pyatlan": 279, "imag": 280, "core": 281, "model": [281, 289], "custom": 282, "metadata": 282, "group": 283, "keycloak": 284, "lineag": 285, "role": 286, "typedef": 287, "user": 288, "other": 289}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"AccessControl": [[0, "accesscontrol"]], "ADLS": [[1, "adls"]], "ADLSAccount": [[2, "adlsaccount"]], "ADLSContainer": [[3, "adlscontainer"]], "ADLSObject": [[4, "adlsobject"]], "Airflow": [[5, "airflow"]], "AirflowDag": [[6, "airflowdag"]], "AirflowTask": [[7, "airflowtask"]], "API": [[8, "api"]], "APIPath": [[9, "apipath"]], "APISpec": [[10, "apispec"]], "Asset": [[11, "asset"]], "AtlasGlossary": [[12, "atlasglossary"]], "AtlasGlossaryCategory": [[13, "atlasglossarycategory"]], "AtlasGlossaryTerm": [[14, "atlasglossaryterm"]], "AuthPolicy": [[15, "authpolicy"]], "AuthService": [[16, "authservice"]], "AWS": [[17, "aws"]], "Azure": [[18, "azure"]], "AzureEventHub": [[19, "azureeventhub"]], "AzureEventHubConsumerGroup": [[20, "azureeventhubconsumergroup"]], "AzureServiceBus": [[21, "azureservicebus"]], "AzureServiceBusNamespace": [[22, "azureservicebusnamespace"]], "AzureServiceBusTopic": [[23, "azureservicebustopic"]], "Badge": [[24, "badge"]], "BI": [[25, "bi"]], "BIProcess": [[26, "biprocess"]], "CalculationView": [[27, "calculationview"]], "Catalog": [[28, "catalog"]], "Cloud": [[29, "cloud"]], "Cognite": [[30, "cognite"]], "Cognite3DModel": [[31, "cognite3dmodel"]], "CogniteAsset": [[32, "cogniteasset"]], "CogniteEvent": [[33, "cogniteevent"]], "CogniteFile": [[34, "cognitefile"]], "CogniteSequence": [[35, "cognitesequence"]], "CogniteTimeSeries": [[36, "cognitetimeseries"]], "Cognos": [[37, "cognos"]], "CognosDashboard": [[38, "cognosdashboard"]], "CognosDatasource": [[39, "cognosdatasource"]], "CognosExploration": [[40, "cognosexploration"]], "CognosFile": [[41, "cognosfile"]], "CognosFolder": [[42, "cognosfolder"]], "CognosModule": [[43, "cognosmodule"]], "CognosPackage": [[44, "cognospackage"]], "CognosReport": [[45, "cognosreport"]], "Collection": [[46, "collection"]], "Column": [[47, "column"]], "ColumnProcess": [[48, "columnprocess"]], "Connection": [[49, "connection"]], "CosmosMongoDB": [[50, "cosmosmongodb"]], "CosmosMongoDBCollection": [[51, "cosmosmongodbcollection"]], "CosmosMongoDBDatabase": [[52, "cosmosmongodbdatabase"]], "Cube": [[53, "cube"]], "CubeDimension": [[54, "cubedimension"]], "CubeField": [[55, "cubefield"]], "CubeHierarchy": [[56, "cubehierarchy"]], "Database": [[57, "database"]], "DataContract": [[58, "datacontract"]], "DataDomain": [[59, "datadomain"]], "DataMesh": [[60, "datamesh"]], "DataProduct": [[61, "dataproduct"]], "DataQuality": [[62, "dataquality"]], "DataSet": [[63, "dataset"]], "DataStudio": [[64, "datastudio"]], "DataStudioAsset": [[65, "datastudioasset"]], "Dbt": [[66, "dbt"]], "DbtColumnProcess": [[67, "dbtcolumnprocess"]], "DbtMetric": [[68, "dbtmetric"]], "DbtModel": [[69, "dbtmodel"]], "DbtModelColumn": [[70, "dbtmodelcolumn"]], "DbtProcess": [[71, "dbtprocess"]], "DbtSource": [[72, "dbtsource"]], "DbtTag": [[73, "dbttag"]], "DbtTest": [[74, "dbttest"]], "Domo": [[75, "domo"]], "DomoCard": [[76, "domocard"]], "DomoDashboard": [[77, "domodashboard"]], "DomoDataset": [[78, "domodataset"]], "DomoDatasetColumn": [[79, "domodatasetcolumn"]], "DynamoDB": [[80, "dynamodb"]], "DynamoDBGlobalSecondaryIndex": [[81, "dynamodbglobalsecondaryindex"]], "DynamoDBLocalSecondaryIndex": [[82, "dynamodblocalsecondaryindex"]], "DynamoDBSecondaryIndex": [[83, "dynamodbsecondaryindex"]], "DynamoDBTable": [[84, "dynamodbtable"]], "EventStore": [[85, "eventstore"]], "File": [[86, "file"]], "Folder": [[87, "folder"]], "Function": [[88, "function"]], "GCS": [[89, "gcs"]], "GCSBucket": [[90, "gcsbucket"]], "GCSObject": [[91, "gcsobject"]], "Google": [[92, "google"]], "Infrastructure": [[93, "infrastructure"]], "Insight": [[94, "insight"]], "Kafka": [[95, "kafka"]], "KafkaConsumerGroup": [[96, "kafkaconsumergroup"]], "KafkaTopic": [[97, "kafkatopic"]], "Link": [[98, "link"]], "Looker": [[99, "looker"]], "LookerDashboard": [[100, "lookerdashboard"]], "LookerExplore": [[101, "lookerexplore"]], "LookerField": [[102, "lookerfield"]], "LookerFolder": [[103, "lookerfolder"]], "LookerLook": [[104, "lookerlook"]], "LookerModel": [[105, "lookermodel"]], "LookerProject": [[106, "lookerproject"]], "LookerQuery": [[107, "lookerquery"]], "LookerTile": [[108, "lookertile"]], "LookerView": [[109, "lookerview"]], "MaterialisedView": [[110, "materialisedview"]], "Matillion": [[111, "matillion"]], "MatillionComponent": [[112, "matillioncomponent"]], "MatillionGroup": [[113, "matilliongroup"]], "MatillionJob": [[114, "matillionjob"]], "MatillionProject": [[115, "matillionproject"]], "MCIncident": [[116, "mcincident"]], "MCMonitor": [[117, "mcmonitor"]], "Metabase": [[118, "metabase"]], "MetabaseCollection": [[119, "metabasecollection"]], "MetabaseDashboard": [[120, "metabasedashboard"]], "MetabaseQuestion": [[121, "metabasequestion"]], "Metric": [[122, "metric"]], "MicroStrategy": [[123, "microstrategy"]], "MicroStrategyAttribute": [[124, "microstrategyattribute"]], "MicroStrategyCube": [[125, "microstrategycube"]], "MicroStrategyDocument": [[126, "microstrategydocument"]], "MicroStrategyDossier": [[127, "microstrategydossier"]], "MicroStrategyFact": [[128, "microstrategyfact"]], "MicroStrategyMetric": [[129, "microstrategymetric"]], "MicroStrategyProject": [[130, "microstrategyproject"]], "MicroStrategyReport": [[131, "microstrategyreport"]], "MicroStrategyVisualization": [[132, "microstrategyvisualization"]], "Mode": [[133, "mode"]], "ModeChart": [[134, "modechart"]], "ModeCollection": [[135, "modecollection"]], "ModeQuery": [[136, "modequery"]], "ModeReport": [[137, "modereport"]], "ModeWorkspace": [[138, "modeworkspace"]], "MongoDB": [[139, "mongodb"]], "MongoDBCollection": [[140, "mongodbcollection"]], "MongoDBDatabase": [[141, "mongodbdatabase"]], "MonteCarlo": [[142, "montecarlo"]], "MultiDimensionalDataset": [[143, "multidimensionaldataset"]], "Namespace": [[144, "namespace"]], "NoSQL": [[145, "nosql"]], "ObjectStore": [[146, "objectstore"]], "Persona": [[147, "persona"]], "PowerBI": [[148, "powerbi"]], "PowerBIColumn": [[149, "powerbicolumn"]], "PowerBIDashboard": [[150, "powerbidashboard"]], "PowerBIDataflow": [[151, "powerbidataflow"]], "PowerBIDataset": [[152, "powerbidataset"]], "PowerBIDatasource": [[153, "powerbidatasource"]], "PowerBIMeasure": [[154, "powerbimeasure"]], "PowerBIPage": [[155, "powerbipage"]], "PowerBIReport": [[156, "powerbireport"]], "PowerBITable": [[157, "powerbitable"]], "PowerBITile": [[158, "powerbitile"]], "PowerBIWorkspace": [[159, "powerbiworkspace"]], "Preset": [[160, "preset"]], "PresetChart": [[161, "presetchart"]], "PresetDashboard": [[162, "presetdashboard"]], "PresetDataset": [[163, "presetdataset"]], "PresetWorkspace": [[164, "presetworkspace"]], "Procedure": [[165, "procedure"]], "Process": [[166, "process"]], "ProcessExecution": [[167, "processexecution"]], "Purpose": [[168, "purpose"]], "Qlik": [[169, "qlik"]], "QlikApp": [[170, "qlikapp"]], "QlikChart": [[171, "qlikchart"]], "QlikDataset": [[172, "qlikdataset"]], "QlikSheet": [[173, "qliksheet"]], "QlikSpace": [[174, "qlikspace"]], "QlikStream": [[175, "qlikstream"]], "Query": [[176, "query"]], "QuickSight": [[177, "quicksight"]], "QuickSightAnalysis": [[178, "quicksightanalysis"]], "QuickSightAnalysisVisual": [[179, "quicksightanalysisvisual"]], "QuickSightDashboard": [[180, "quicksightdashboard"]], "QuickSightDashboardVisual": [[181, "quicksightdashboardvisual"]], "QuickSightDataset": [[182, "quicksightdataset"]], "QuickSightDatasetField": [[183, "quicksightdatasetfield"]], "QuickSightFolder": [[184, "quicksightfolder"]], "Readme": [[185, "readme"]], "ReadmeTemplate": [[186, "readmetemplate"]], "Redash": [[187, "redash"]], "RedashDashboard": [[188, "redashdashboard"]], "RedashQuery": [[189, "redashquery"]], "RedashVisualization": [[190, "redashvisualization"]], "Referenceable": [[191, "referenceable"]], "Resource": [[192, "resource"]], "S3": [[193, "s3"]], "S3Bucket": [[194, "s3bucket"]], "S3Object": [[195, "s3object"]], "SaaS": [[196, "saas"]], "Salesforce": [[197, "salesforce"]], "SalesforceDashboard": [[198, "salesforcedashboard"]], "SalesforceField": [[199, "salesforcefield"]], "SalesforceObject": [[200, "salesforceobject"]], "SalesforceOrganization": [[201, "salesforceorganization"]], "SalesforceReport": [[202, "salesforcereport"]], "Schema": [[203, "schema"]], "SchemaRegistry": [[204, "schemaregistry"]], "SchemaRegistrySubject": [[205, "schemaregistrysubject"]], "Sigma": [[206, "sigma"]], "SigmaDataElement": [[207, "sigmadataelement"]], "SigmaDataElementField": [[208, "sigmadataelementfield"]], "SigmaDataset": [[209, "sigmadataset"]], "SigmaDatasetColumn": [[210, "sigmadatasetcolumn"]], "SigmaPage": [[211, "sigmapage"]], "SigmaWorkbook": [[212, "sigmaworkbook"]], "Sisense": [[213, "sisense"]], "SisenseDashboard": [[214, "sisensedashboard"]], "SisenseDatamodel": [[215, "sisensedatamodel"]], "SisenseDatamodelTable": [[216, "sisensedatamodeltable"]], "SisenseFolder": [[217, "sisensefolder"]], "SisenseWidget": [[218, "sisensewidget"]], "SnowflakeDynamicTable": [[219, "snowflakedynamictable"]], "SnowflakePipe": [[220, "snowflakepipe"]], "SnowflakeStream": [[221, "snowflakestream"]], "SnowflakeTag": [[222, "snowflaketag"]], "Soda": [[223, "soda"]], "SodaCheck": [[224, "sodacheck"]], "Spark": [[225, "spark"]], "SparkJob": [[226, "sparkjob"]], "SQL": [[227, "sql"]], "Stakeholder": [[228, "stakeholder"]], "StakeholderTitle": [[229, "stakeholdertitle"]], "Table": [[230, "table"]], "Tableau": [[231, "tableau"]], "TableauCalculatedField": [[232, "tableaucalculatedfield"]], "TableauDashboard": [[233, "tableaudashboard"]], "TableauDatasource": [[234, "tableaudatasource"]], "TableauDatasourceField": [[235, "tableaudatasourcefield"]], "TableauFlow": [[236, "tableauflow"]], "TableauMetric": [[237, "tableaumetric"]], "TableauProject": [[238, "tableauproject"]], "TableauSite": [[239, "tableausite"]], "TableauWorkbook": [[240, "tableauworkbook"]], "TableauWorksheet": [[241, "tableauworksheet"]], "TablePartition": [[242, "tablepartition"]], "Tag": [[243, "tag"]], "TagAttachment": [[244, "tagattachment"]], "Task": [[245, "task"]], "Thoughtspot": [[246, "thoughtspot"]], "ThoughtspotAnswer": [[247, "thoughtspotanswer"]], "ThoughtspotColumn": [[248, "thoughtspotcolumn"]], "ThoughtspotDashlet": [[249, "thoughtspotdashlet"]], "ThoughtspotLiveboard": [[250, "thoughtspotliveboard"]], "ThoughtspotTable": [[251, "thoughtspottable"]], "ThoughtspotView": [[252, "thoughtspotview"]], "ThoughtspotWorksheet": [[253, "thoughtspotworksheet"]], "View": [[254, "view"]], "Workflow": [[255, "workflow"]], "WorkflowRun": [[256, "workflowrun"]], "Assets": [[257, "assets"]], "AtlanTagCache": [[258, "atlantagcache"]], "CustomMetadataCache": [[259, "custommetadatacache"]], "EnumCache": [[260, "enumcache"]], "GroupCache": [[261, "groupcache"]], "RoleCache": [[262, "rolecache"]], "UserCache": [[263, "usercache"]], "Caches": [[264, "caches"]], "Atlan Client Interface": [[265, "atlan-client-interface"]], "Events": [[266, "events"]], "AtlanEventHandler": [[266, "atlaneventhandler"]], "Error Handling": [[267, "error-handling"]], "BooleanField": [[268, "booleanfield"]], "CustomMetadataField": [[269, "custommetadatafield"]], "KeywordField": [[270, "keywordfield"]], "KeywordTextField": [[271, "keywordtextfield"]], "KeywordTextStemmedField": [[272, "keywordtextstemmedfield"]], "NumericField": [[273, "numericfield"]], "NumericRankField": [[274, "numericrankfield"]], "RelationField": [[275, "relationfield"]], "SearchableField": [[276, "searchablefield"]], "TextField": [[277, "textfield"]], "Fields": [[278, "fields"]], "AtlanField": [[278, "atlanfield"]], "pyatlan": [[279, "pyatlan"]], "Atlan image": [[280, "atlan-image"]], "Core model": [[281, "core-model"]], "Custom metadata": [[282, "custom-metadata"]], "Group": [[283, "group"]], "Keycloak events": [[284, "keycloak-events"]], "Lineage": [[285, "lineage"]], "Role": [[286, "role"]], "TypeDef": [[287, "typedef"]], "User": [[288, "user"]], "Other models": [[289, "other-models"]]}, "indexentries": {"accesscontrol (class in pyatlan.model.assets)": [[0, "pyatlan.model.assets.AccessControl"]], "channel_link (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.CHANNEL_LINK"]], "default_navigation (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.DEFAULT_NAVIGATION"]], "deny_asset_filters (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.DENY_ASSET_FILTERS"]], "deny_asset_tabs (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.DENY_ASSET_TABS"]], "deny_asset_types (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.DENY_ASSET_TYPES"]], "deny_custom_metadata_guids (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.DENY_CUSTOM_METADATA_GUIDS"]], "deny_navigation_pages (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.DENY_NAVIGATION_PAGES"]], "display_preferences (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.DISPLAY_PREFERENCES"]], "is_access_control_enabled (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.IS_ACCESS_CONTROL_ENABLED"]], "policies (pyatlan.model.assets.accesscontrol attribute)": [[0, "pyatlan.model.assets.AccessControl.POLICIES"]], "adls (class in pyatlan.model.assets)": [[1, "pyatlan.model.assets.ADLS"]], "adls_account_qualified_name (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.ADLS_ACCOUNT_QUALIFIED_NAME"]], "adls_account_secondary_location (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.ADLS_ACCOUNT_SECONDARY_LOCATION"]], "azure_location (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.AZURE_LOCATION"]], "azure_resource_id (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.AZURE_RESOURCE_ID"]], "azure_tags (pyatlan.model.assets.adls attribute)": [[1, "pyatlan.model.assets.ADLS.AZURE_TAGS"]], "adlsaccount (class in pyatlan.model.assets)": [[2, "pyatlan.model.assets.ADLSAccount"]], "adls_account_access_tier (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ACCOUNT_ACCESS_TIER"]], "adls_account_kind (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ACCOUNT_KIND"]], "adls_account_performance (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ACCOUNT_PERFORMANCE"]], "adls_account_provision_state (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ACCOUNT_PROVISION_STATE"]], "adls_account_replication (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ACCOUNT_REPLICATION"]], "adls_account_resource_group (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ACCOUNT_RESOURCE_GROUP"]], "adls_account_subscription (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ACCOUNT_SUBSCRIPTION"]], "adls_containers (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_CONTAINERS"]], "adls_encryption_type (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_ENCRYPTION_TYPE"]], "adls_e_tag (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_E_TAG"]], "adls_primary_disk_state (pyatlan.model.assets.adlsaccount attribute)": [[2, "pyatlan.model.assets.ADLSAccount.ADLS_PRIMARY_DISK_STATE"]], "adlscontainer (class in pyatlan.model.assets)": [[3, "pyatlan.model.assets.ADLSContainer"]], "adls_account (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_ACCOUNT"]], "adls_container_encryption_scope (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_CONTAINER_ENCRYPTION_SCOPE"]], "adls_container_lease_state (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_CONTAINER_LEASE_STATE"]], "adls_container_lease_status (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_CONTAINER_LEASE_STATUS"]], "adls_container_url (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_CONTAINER_URL"]], "adls_container_version_level_immutability_support (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_CONTAINER_VERSION_LEVEL_IMMUTABILITY_SUPPORT"]], "adls_objects (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_OBJECTS"]], "adls_object_count (pyatlan.model.assets.adlscontainer attribute)": [[3, "pyatlan.model.assets.ADLSContainer.ADLS_OBJECT_COUNT"]], "adlsobject (class in pyatlan.model.assets)": [[4, "pyatlan.model.assets.ADLSObject"]], "adls_container (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_CONTAINER"]], "adls_container_qualified_name (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_CONTAINER_QUALIFIED_NAME"]], "adls_object_access_tier (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_ACCESS_TIER"]], "adls_object_access_tier_last_modified_time (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_ACCESS_TIER_LAST_MODIFIED_TIME"]], "adls_object_archive_status (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_ARCHIVE_STATUS"]], "adls_object_cache_control (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_CACHE_CONTROL"]], "adls_object_content_language (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_CONTENT_LANGUAGE"]], "adls_object_content_md5hash (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_CONTENT_MD5HASH"]], "adls_object_content_type (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_CONTENT_TYPE"]], "adls_object_lease_state (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_LEASE_STATE"]], "adls_object_lease_status (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_LEASE_STATUS"]], "adls_object_metadata (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_METADATA"]], "adls_object_server_encrypted (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_SERVER_ENCRYPTED"]], "adls_object_size (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_SIZE"]], "adls_object_type (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_TYPE"]], "adls_object_url (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_URL"]], "adls_object_version_id (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_VERSION_ID"]], "adls_object_version_level_immutability_support (pyatlan.model.assets.adlsobject attribute)": [[4, "pyatlan.model.assets.ADLSObject.ADLS_OBJECT_VERSION_LEVEL_IMMUTABILITY_SUPPORT"]], "airflow_run_end_time (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_RUN_END_TIME"]], "airflow_run_name (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_RUN_NAME"]], "airflow_run_open_lineage_state (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_RUN_OPEN_LINEAGE_STATE"]], "airflow_run_open_lineage_version (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_RUN_OPEN_LINEAGE_VERSION"]], "airflow_run_start_time (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_RUN_START_TIME"]], "airflow_run_type (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_RUN_TYPE"]], "airflow_run_version (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_RUN_VERSION"]], "airflow_tags (pyatlan.model.assets.airflow attribute)": [[5, "pyatlan.model.assets.Airflow.AIRFLOW_TAGS"]], "airflow (class in pyatlan.model.assets)": [[5, "pyatlan.model.assets.Airflow"]], "airflow_dag_schedule (pyatlan.model.assets.airflowdag attribute)": [[6, "pyatlan.model.assets.AirflowDag.AIRFLOW_DAG_SCHEDULE"]], "airflow_dag_schedule_delta (pyatlan.model.assets.airflowdag attribute)": [[6, "pyatlan.model.assets.AirflowDag.AIRFLOW_DAG_SCHEDULE_DELTA"]], "airflow_tasks (pyatlan.model.assets.airflowdag attribute)": [[6, "pyatlan.model.assets.AirflowDag.AIRFLOW_TASKS"]], "airflowdag (class in pyatlan.model.assets)": [[6, "pyatlan.model.assets.AirflowDag"]], "airflow_dag (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_DAG"]], "airflow_dag_name (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_DAG_NAME"]], "airflow_dag_qualified_name (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_DAG_QUALIFIED_NAME"]], "airflow_task_connection_id (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_CONNECTION_ID"]], "airflow_task_operator_class (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_OPERATOR_CLASS"]], "airflow_task_pool (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_POOL"]], "airflow_task_pool_slots (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_POOL_SLOTS"]], "airflow_task_priority_weight (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_PRIORITY_WEIGHT"]], "airflow_task_queue (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_QUEUE"]], "airflow_task_retry_number (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_RETRY_NUMBER"]], "airflow_task_sql (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_SQL"]], "airflow_task_trigger_rule (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.AIRFLOW_TASK_TRIGGER_RULE"]], "airflowtask (class in pyatlan.model.assets)": [[7, "pyatlan.model.assets.AirflowTask"]], "inputs (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.INPUTS"]], "outputs (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.OUTPUTS"]], "process (pyatlan.model.assets.airflowtask attribute)": [[7, "pyatlan.model.assets.AirflowTask.PROCESS"]], "api (class in pyatlan.model.assets)": [[8, "pyatlan.model.assets.API"]], "api_external_docs (pyatlan.model.assets.api attribute)": [[8, "pyatlan.model.assets.API.API_EXTERNAL_DOCS"]], "api_is_auth_optional (pyatlan.model.assets.api attribute)": [[8, "pyatlan.model.assets.API.API_IS_AUTH_OPTIONAL"]], "api_spec_name (pyatlan.model.assets.api attribute)": [[8, "pyatlan.model.assets.API.API_SPEC_NAME"]], "api_spec_qualified_name (pyatlan.model.assets.api attribute)": [[8, "pyatlan.model.assets.API.API_SPEC_QUALIFIED_NAME"]], "api_spec_type (pyatlan.model.assets.api attribute)": [[8, "pyatlan.model.assets.API.API_SPEC_TYPE"]], "api_spec_version (pyatlan.model.assets.api attribute)": [[8, "pyatlan.model.assets.API.API_SPEC_VERSION"]], "apipath (class in pyatlan.model.assets)": [[9, "pyatlan.model.assets.APIPath"]], "api_path_available_operations (pyatlan.model.assets.apipath attribute)": [[9, "pyatlan.model.assets.APIPath.API_PATH_AVAILABLE_OPERATIONS"]], "api_path_available_response_codes (pyatlan.model.assets.apipath attribute)": [[9, "pyatlan.model.assets.APIPath.API_PATH_AVAILABLE_RESPONSE_CODES"]], "api_path_is_ingress_exposed (pyatlan.model.assets.apipath attribute)": [[9, "pyatlan.model.assets.APIPath.API_PATH_IS_INGRESS_EXPOSED"]], "api_path_is_templated (pyatlan.model.assets.apipath attribute)": [[9, "pyatlan.model.assets.APIPath.API_PATH_IS_TEMPLATED"]], "api_path_raw_uri (pyatlan.model.assets.apipath attribute)": [[9, "pyatlan.model.assets.APIPath.API_PATH_RAW_URI"]], "api_path_summary (pyatlan.model.assets.apipath attribute)": [[9, "pyatlan.model.assets.APIPath.API_PATH_SUMMARY"]], "api_spec (pyatlan.model.assets.apipath attribute)": [[9, "pyatlan.model.assets.APIPath.API_SPEC"]], "apispec (class in pyatlan.model.assets)": [[10, "pyatlan.model.assets.APISpec"]], "api_paths (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_PATHS"]], "api_spec_contact_email (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_CONTACT_EMAIL"]], "api_spec_contact_name (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_CONTACT_NAME"]], "api_spec_contact_url (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_CONTACT_URL"]], "api_spec_contract_version (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_CONTRACT_VERSION"]], "api_spec_license_name (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_LICENSE_NAME"]], "api_spec_license_url (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_LICENSE_URL"]], "api_spec_service_alias (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_SERVICE_ALIAS"]], "api_spec_terms_of_service_url (pyatlan.model.assets.apispec attribute)": [[10, "pyatlan.model.assets.APISpec.API_SPEC_TERMS_OF_SERVICE_URL"]], "admin_groups (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ADMIN_GROUPS"]], "admin_roles (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ADMIN_ROLES"]], "admin_users (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ADMIN_USERS"]], "announcement_message (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ANNOUNCEMENT_MESSAGE"]], "announcement_title (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ANNOUNCEMENT_TITLE"]], "announcement_type (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ANNOUNCEMENT_TYPE"]], "announcement_updated_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ANNOUNCEMENT_UPDATED_AT"]], "announcement_updated_by (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ANNOUNCEMENT_UPDATED_BY"]], "asset_cover_image (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_COVER_IMAGE"]], "asset_dbt_account_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_ACCOUNT_NAME"]], "asset_dbt_alias (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_ALIAS"]], "asset_dbt_environment_dbt_version (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_ENVIRONMENT_DBT_VERSION"]], "asset_dbt_environment_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_ENVIRONMENT_NAME"]], "asset_dbt_job_last_run (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN"]], "asset_dbt_job_last_run_artifacts_saved (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_ARTIFACTS_SAVED"]], "asset_dbt_job_last_run_artifact_s3path (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_ARTIFACT_S3PATH"]], "asset_dbt_job_last_run_created_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_CREATED_AT"]], "asset_dbt_job_last_run_dequed_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_DEQUED_AT"]], "asset_dbt_job_last_run_executed_by_thread_id (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_EXECUTED_BY_THREAD_ID"]], "asset_dbt_job_last_run_git_branch (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_GIT_BRANCH"]], "asset_dbt_job_last_run_git_sha (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_GIT_SHA"]], "asset_dbt_job_last_run_has_docs_generated (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_HAS_DOCS_GENERATED"]], "asset_dbt_job_last_run_has_sources_generated (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_HAS_SOURCES_GENERATED"]], "asset_dbt_job_last_run_notifications_sent (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_NOTIFICATIONS_SENT"]], "asset_dbt_job_last_run_owner_thread_id (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_OWNER_THREAD_ID"]], "asset_dbt_job_last_run_queued_duration (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_QUEUED_DURATION"]], "asset_dbt_job_last_run_queued_duration_humanized (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_QUEUED_DURATION_HUMANIZED"]], "asset_dbt_job_last_run_run_duration (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_RUN_DURATION"]], "asset_dbt_job_last_run_run_duration_humanized (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_RUN_DURATION_HUMANIZED"]], "asset_dbt_job_last_run_started_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_STARTED_AT"]], "asset_dbt_job_last_run_status_message (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_STATUS_MESSAGE"]], "asset_dbt_job_last_run_total_duration (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_TOTAL_DURATION"]], "asset_dbt_job_last_run_total_duration_humanized (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_TOTAL_DURATION_HUMANIZED"]], "asset_dbt_job_last_run_updated_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_UPDATED_AT"]], "asset_dbt_job_last_run_url (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_LAST_RUN_URL"]], "asset_dbt_job_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_NAME"]], "asset_dbt_job_next_run (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_NEXT_RUN"]], "asset_dbt_job_next_run_humanized (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_NEXT_RUN_HUMANIZED"]], "asset_dbt_job_schedule (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_SCHEDULE"]], "asset_dbt_job_schedule_cron_humanized (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_SCHEDULE_CRON_HUMANIZED"]], "asset_dbt_job_status (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_JOB_STATUS"]], "asset_dbt_meta (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_META"]], "asset_dbt_package_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_PACKAGE_NAME"]], "asset_dbt_project_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_PROJECT_NAME"]], "asset_dbt_semantic_layer_proxy_url (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_SEMANTIC_LAYER_PROXY_URL"]], "asset_dbt_source_freshness_criteria (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_SOURCE_FRESHNESS_CRITERIA"]], "asset_dbt_tags (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_TAGS"]], "asset_dbt_test_status (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_TEST_STATUS"]], "asset_dbt_unique_id (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_UNIQUE_ID"]], "asset_dbt_workflow_last_updated (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_DBT_WORKFLOW_LAST_UPDATED"]], "asset_icon (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_ICON"]], "asset_mc_incident_names (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_INCIDENT_NAMES"]], "asset_mc_incident_qualified_names (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_INCIDENT_QUALIFIED_NAMES"]], "asset_mc_incident_severities (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_INCIDENT_SEVERITIES"]], "asset_mc_incident_states (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_INCIDENT_STATES"]], "asset_mc_incident_sub_types (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_INCIDENT_SUB_TYPES"]], "asset_mc_incident_types (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_INCIDENT_TYPES"]], "asset_mc_last_sync_run_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_LAST_SYNC_RUN_AT"]], "asset_mc_monitor_names (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_MONITOR_NAMES"]], "asset_mc_monitor_qualified_names (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_MONITOR_QUALIFIED_NAMES"]], "asset_mc_monitor_schedule_types (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_MONITOR_SCHEDULE_TYPES"]], "asset_mc_monitor_statuses (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_MONITOR_STATUSES"]], "asset_mc_monitor_types (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_MC_MONITOR_TYPES"]], "asset_soda_check_count (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_SODA_CHECK_COUNT"]], "asset_soda_check_statuses (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_SODA_CHECK_STATUSES"]], "asset_soda_dq_status (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_SODA_DQ_STATUS"]], "asset_soda_last_scan_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_SODA_LAST_SCAN_AT"]], "asset_soda_last_sync_run_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_SODA_LAST_SYNC_RUN_AT"]], "asset_soda_source_url (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_SODA_SOURCE_URL"]], "asset_tags (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_TAGS"]], "asset_theme_hex (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.ASSET_THEME_HEX"]], "asset (class in pyatlan.model.assets)": [[11, "pyatlan.model.assets.Asset"]], "certificate_status (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.CERTIFICATE_STATUS"]], "certificate_status_message (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.CERTIFICATE_STATUS_MESSAGE"]], "certificate_updated_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.CERTIFICATE_UPDATED_AT"]], "certificate_updated_by (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.CERTIFICATE_UPDATED_BY"]], "connection_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.CONNECTION_NAME"]], "connection_qualified_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.CONNECTION_QUALIFIED_NAME"]], "connector_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.CONNECTOR_NAME"]], "data_contract_latest (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.DATA_CONTRACT_LATEST"]], "data_contract_latest_certified (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.DATA_CONTRACT_LATEST_CERTIFIED"]], "dbt_qualified_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.DBT_QUALIFIED_NAME"]], "description (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.DESCRIPTION"]], "display_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.DISPLAY_NAME"]], "files (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.FILES"]], "has_contract (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.HAS_CONTRACT"]], "has_lineage (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.HAS_LINEAGE"]], "input_port_data_products (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.INPUT_PORT_DATA_PRODUCTS"]], "is_ai_generated (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.IS_AI_GENERATED"]], "is_discoverable (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.IS_DISCOVERABLE"]], "is_editable (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.IS_EDITABLE"]], "is_partial (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.IS_PARTIAL"]], "last_row_changed_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.LAST_ROW_CHANGED_AT"]], "last_sync_run (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.LAST_SYNC_RUN"]], "last_sync_run_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.LAST_SYNC_RUN_AT"]], "last_sync_workflow_name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.LAST_SYNC_WORKFLOW_NAME"]], "links (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.LINKS"]], "mc_incidents (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.MC_INCIDENTS"]], "mc_monitors (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.MC_MONITORS"]], "metrics (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.METRICS"]], "name (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.NAME"]], "output_port_data_products (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.OUTPUT_PORT_DATA_PRODUCTS"]], "owner_groups (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.OWNER_GROUPS"]], "owner_users (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.OWNER_USERS"]], "popularity_score (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.POPULARITY_SCORE"]], "readme (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.README"]], "sample_data_url (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SAMPLE_DATA_URL"]], "schema_registry_subjects (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SCHEMA_REGISTRY_SUBJECTS"]], "soda_checks (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SODA_CHECKS"]], "source_cost_unit (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_COST_UNIT"]], "source_created_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_CREATED_AT"]], "source_created_by (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_CREATED_BY"]], "source_embed_url (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_EMBED_URL"]], "source_last_read_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_LAST_READ_AT"]], "source_owners (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_OWNERS"]], "source_query_compute_cost_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_QUERY_COMPUTE_COST_LIST"]], "source_query_compute_cost_record_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_QUERY_COMPUTE_COST_RECORD_LIST"]], "source_read_count (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_COUNT"]], "source_read_expensive_query_record_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_EXPENSIVE_QUERY_RECORD_LIST"]], "source_read_popular_query_record_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_POPULAR_QUERY_RECORD_LIST"]], "source_read_query_cost (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_QUERY_COST"]], "source_read_recent_user_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_RECENT_USER_LIST"]], "source_read_recent_user_record_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_RECENT_USER_RECORD_LIST"]], "source_read_slow_query_record_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_SLOW_QUERY_RECORD_LIST"]], "source_read_top_user_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_TOP_USER_LIST"]], "source_read_top_user_record_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_TOP_USER_RECORD_LIST"]], "source_read_user_count (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_READ_USER_COUNT"]], "source_total_cost (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_TOTAL_COST"]], "source_updated_at (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_UPDATED_AT"]], "source_updated_by (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_UPDATED_BY"]], "source_url (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SOURCE_URL"]], "starred_by (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.STARRED_BY"]], "starred_count (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.STARRED_COUNT"]], "starred_details_list (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.STARRED_DETAILS_LIST"]], "sub_type (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.SUB_TYPE"]], "tenant_id (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.TENANT_ID"]], "user_description (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.USER_DESCRIPTION"]], "viewer_groups (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.VIEWER_GROUPS"]], "viewer_users (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.VIEWER_USERS"]], "view_score (pyatlan.model.assets.asset attribute)": [[11, "pyatlan.model.assets.Asset.VIEW_SCORE"]], "lineage() (pyatlan.model.assets.asset class method)": [[11, "pyatlan.model.assets.Asset.lineage"]], "additional_attributes (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.ADDITIONAL_ATTRIBUTES"]], "atlasglossary (class in pyatlan.model.assets)": [[12, "pyatlan.model.assets.AtlasGlossary"]], "categories (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.CATEGORIES"]], "glossary_type (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.GLOSSARY_TYPE"]], "language (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.LANGUAGE"]], "long_description (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.LONG_DESCRIPTION"]], "short_description (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.SHORT_DESCRIPTION"]], "terms (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.TERMS"]], "usage (pyatlan.model.assets.atlasglossary attribute)": [[12, "pyatlan.model.assets.AtlasGlossary.USAGE"]], "additional_attributes (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.ADDITIONAL_ATTRIBUTES"]], "anchor (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.ANCHOR"]], "atlasglossarycategory (class in pyatlan.model.assets)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory"]], "category_type (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.CATEGORY_TYPE"]], "children_categories (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.CHILDREN_CATEGORIES"]], "long_description (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.LONG_DESCRIPTION"]], "parent_category (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.PARENT_CATEGORY"]], "short_description (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.SHORT_DESCRIPTION"]], "terms (pyatlan.model.assets.atlasglossarycategory attribute)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.TERMS"]], "can_be_archived() (pyatlan.model.assets.atlasglossarycategory class method)": [[13, "pyatlan.model.assets.AtlasGlossaryCategory.can_be_archived"]], "abbreviation (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.ABBREVIATION"]], "additional_attributes (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.ADDITIONAL_ATTRIBUTES"]], "anchor (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.ANCHOR"]], "antonyms (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.ANTONYMS"]], "assigned_entities (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.ASSIGNED_ENTITIES"]], "atlasglossaryterm (class in pyatlan.model.assets)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm"]], "categories (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.CATEGORIES"]], "classifies (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.CLASSIFIES"]], "examples (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.EXAMPLES"]], "is_a (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.IS_A"]], "long_description (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.LONG_DESCRIPTION"]], "preferred_terms (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.PREFERRED_TERMS"]], "preferred_to_terms (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.PREFERRED_TO_TERMS"]], "replaced_by (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.REPLACED_BY"]], "replacement_terms (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.REPLACEMENT_TERMS"]], "see_also (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.SEE_ALSO"]], "short_description (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.SHORT_DESCRIPTION"]], "synonyms (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.SYNONYMS"]], "term_type (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.TERM_TYPE"]], "translated_terms (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.TRANSLATED_TERMS"]], "translation_terms (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.TRANSLATION_TERMS"]], "usage (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.USAGE"]], "valid_values (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.VALID_VALUES"]], "valid_values_for (pyatlan.model.assets.atlasglossaryterm attribute)": [[14, "pyatlan.model.assets.AtlasGlossaryTerm.VALID_VALUES_FOR"]], "access_control (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.ACCESS_CONTROL"]], "authpolicy (class in pyatlan.model.assets)": [[15, "pyatlan.model.assets.AuthPolicy"]], "is_policy_enabled (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.IS_POLICY_ENABLED"]], "policy_actions (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_ACTIONS"]], "policy_category (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_CATEGORY"]], "policy_conditions (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_CONDITIONS"]], "policy_delegate_admin (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_DELEGATE_ADMIN"]], "policy_groups (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_GROUPS"]], "policy_mask_type (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_MASK_TYPE"]], "policy_priority (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_PRIORITY"]], "policy_resources (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_RESOURCES"]], "policy_resource_category (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_RESOURCE_CATEGORY"]], "policy_resource_signature (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_RESOURCE_SIGNATURE"]], "policy_roles (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_ROLES"]], "policy_service_name (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_SERVICE_NAME"]], "policy_sub_category (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_SUB_CATEGORY"]], "policy_type (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_TYPE"]], "policy_users (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_USERS"]], "policy_validity_schedule (pyatlan.model.assets.authpolicy attribute)": [[15, "pyatlan.model.assets.AuthPolicy.POLICY_VALIDITY_SCHEDULE"]], "auth_service_config (pyatlan.model.assets.authservice attribute)": [[16, "pyatlan.model.assets.AuthService.AUTH_SERVICE_CONFIG"]], "auth_service_is_enabled (pyatlan.model.assets.authservice attribute)": [[16, "pyatlan.model.assets.AuthService.AUTH_SERVICE_IS_ENABLED"]], "auth_service_policy_last_sync (pyatlan.model.assets.authservice attribute)": [[16, "pyatlan.model.assets.AuthService.AUTH_SERVICE_POLICY_LAST_SYNC"]], "auth_service_type (pyatlan.model.assets.authservice attribute)": [[16, "pyatlan.model.assets.AuthService.AUTH_SERVICE_TYPE"]], "authservice (class in pyatlan.model.assets)": [[16, "pyatlan.model.assets.AuthService"]], "tag_service (pyatlan.model.assets.authservice attribute)": [[16, "pyatlan.model.assets.AuthService.TAG_SERVICE"]], "aws (class in pyatlan.model.assets)": [[17, "pyatlan.model.assets.AWS"]], "aws_account_id (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_ACCOUNT_ID"]], "aws_arn (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_ARN"]], "aws_owner_id (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_OWNER_ID"]], "aws_owner_name (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_OWNER_NAME"]], "aws_partition (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_PARTITION"]], "aws_region (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_REGION"]], "aws_resource_id (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_RESOURCE_ID"]], "aws_service (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_SERVICE"]], "aws_tags (pyatlan.model.assets.aws attribute)": [[17, "pyatlan.model.assets.AWS.AWS_TAGS"]], "adls_account_secondary_location (pyatlan.model.assets.azure attribute)": [[18, "pyatlan.model.assets.Azure.ADLS_ACCOUNT_SECONDARY_LOCATION"]], "azure_location (pyatlan.model.assets.azure attribute)": [[18, "pyatlan.model.assets.Azure.AZURE_LOCATION"]], "azure_resource_id (pyatlan.model.assets.azure attribute)": [[18, "pyatlan.model.assets.Azure.AZURE_RESOURCE_ID"]], "azure_tags (pyatlan.model.assets.azure attribute)": [[18, "pyatlan.model.assets.Azure.AZURE_TAGS"]], "azure (class in pyatlan.model.assets)": [[18, "pyatlan.model.assets.Azure"]], "azure_event_hub_status (pyatlan.model.assets.azureeventhub attribute)": [[19, "pyatlan.model.assets.AzureEventHub.AZURE_EVENT_HUB_STATUS"]], "azureeventhub (class in pyatlan.model.assets)": [[19, "pyatlan.model.assets.AzureEventHub"]], "azureeventhubconsumergroup (class in pyatlan.model.assets)": [[20, "pyatlan.model.assets.AzureEventHubConsumerGroup"]], "azure_service_bus_namespace_name (pyatlan.model.assets.azureservicebus attribute)": [[21, "pyatlan.model.assets.AzureServiceBus.AZURE_SERVICE_BUS_NAMESPACE_NAME"]], "azure_service_bus_namespace_qualified_name (pyatlan.model.assets.azureservicebus attribute)": [[21, "pyatlan.model.assets.AzureServiceBus.AZURE_SERVICE_BUS_NAMESPACE_QUALIFIED_NAME"]], "azureservicebus (class in pyatlan.model.assets)": [[21, "pyatlan.model.assets.AzureServiceBus"]], "azure_service_bus_topics (pyatlan.model.assets.azureservicebusnamespace attribute)": [[22, "pyatlan.model.assets.AzureServiceBusNamespace.AZURE_SERVICE_BUS_TOPICS"]], "azureservicebusnamespace (class in pyatlan.model.assets)": [[22, "pyatlan.model.assets.AzureServiceBusNamespace"]], "azure_service_bus_namespace (pyatlan.model.assets.azureservicebustopic attribute)": [[23, "pyatlan.model.assets.AzureServiceBusTopic.AZURE_SERVICE_BUS_NAMESPACE"]], "azureservicebustopic (class in pyatlan.model.assets)": [[23, "pyatlan.model.assets.AzureServiceBusTopic"]], "badge_conditions (pyatlan.model.assets.badge attribute)": [[24, "pyatlan.model.assets.Badge.BADGE_CONDITIONS"]], "badge_metadata_attribute (pyatlan.model.assets.badge attribute)": [[24, "pyatlan.model.assets.Badge.BADGE_METADATA_ATTRIBUTE"]], "badge (class in pyatlan.model.assets)": [[24, "pyatlan.model.assets.Badge"]], "bi (class in pyatlan.model.assets)": [[25, "pyatlan.model.assets.BI"]], "biprocess (class in pyatlan.model.assets)": [[26, "pyatlan.model.assets.BIProcess"]], "inputs (pyatlan.model.assets.biprocess attribute)": [[26, "pyatlan.model.assets.BIProcess.INPUTS"]], "outputs (pyatlan.model.assets.biprocess attribute)": [[26, "pyatlan.model.assets.BIProcess.OUTPUTS"]], "atlan_schema (pyatlan.model.assets.calculationview attribute)": [[27, "pyatlan.model.assets.CalculationView.ATLAN_SCHEMA"]], "calculation_view_activated_at (pyatlan.model.assets.calculationview attribute)": [[27, "pyatlan.model.assets.CalculationView.CALCULATION_VIEW_ACTIVATED_AT"]], "calculation_view_activated_by (pyatlan.model.assets.calculationview attribute)": [[27, "pyatlan.model.assets.CalculationView.CALCULATION_VIEW_ACTIVATED_BY"]], "calculation_view_version_id (pyatlan.model.assets.calculationview attribute)": [[27, "pyatlan.model.assets.CalculationView.CALCULATION_VIEW_VERSION_ID"]], "columns (pyatlan.model.assets.calculationview attribute)": [[27, "pyatlan.model.assets.CalculationView.COLUMNS"]], "column_count (pyatlan.model.assets.calculationview attribute)": [[27, "pyatlan.model.assets.CalculationView.COLUMN_COUNT"]], "calculationview (class in pyatlan.model.assets)": [[27, "pyatlan.model.assets.CalculationView"]], "catalog (class in pyatlan.model.assets)": [[28, "pyatlan.model.assets.Catalog"]], "input_to_airflow_tasks (pyatlan.model.assets.catalog attribute)": [[28, "pyatlan.model.assets.Catalog.INPUT_TO_AIRFLOW_TASKS"]], "input_to_processes (pyatlan.model.assets.catalog attribute)": [[28, "pyatlan.model.assets.Catalog.INPUT_TO_PROCESSES"]], "input_to_spark_jobs (pyatlan.model.assets.catalog attribute)": [[28, "pyatlan.model.assets.Catalog.INPUT_TO_SPARK_JOBS"]], "output_from_airflow_tasks (pyatlan.model.assets.catalog attribute)": [[28, "pyatlan.model.assets.Catalog.OUTPUT_FROM_AIRFLOW_TASKS"]], "output_from_processes (pyatlan.model.assets.catalog attribute)": [[28, "pyatlan.model.assets.Catalog.OUTPUT_FROM_PROCESSES"]], "output_from_spark_jobs (pyatlan.model.assets.catalog attribute)": [[28, "pyatlan.model.assets.Catalog.OUTPUT_FROM_SPARK_JOBS"]], "cloud (class in pyatlan.model.assets)": [[29, "pyatlan.model.assets.Cloud"]], "cognite (class in pyatlan.model.assets)": [[30, "pyatlan.model.assets.Cognite"]], "cognite_asset (pyatlan.model.assets.cognite3dmodel attribute)": [[31, "pyatlan.model.assets.Cognite3DModel.COGNITE_ASSET"]], "cognite3dmodel (class in pyatlan.model.assets)": [[31, "pyatlan.model.assets.Cognite3DModel"]], "cognite3dmodels (pyatlan.model.assets.cogniteasset attribute)": [[32, "pyatlan.model.assets.CogniteAsset.COGNITE3DMODELS"]], "cognite_events (pyatlan.model.assets.cogniteasset attribute)": [[32, "pyatlan.model.assets.CogniteAsset.COGNITE_EVENTS"]], "cognite_files (pyatlan.model.assets.cogniteasset attribute)": [[32, "pyatlan.model.assets.CogniteAsset.COGNITE_FILES"]], "cognite_sequences (pyatlan.model.assets.cogniteasset attribute)": [[32, "pyatlan.model.assets.CogniteAsset.COGNITE_SEQUENCES"]], "cognite_timeseries (pyatlan.model.assets.cogniteasset attribute)": [[32, "pyatlan.model.assets.CogniteAsset.COGNITE_TIMESERIES"]], "cogniteasset (class in pyatlan.model.assets)": [[32, "pyatlan.model.assets.CogniteAsset"]], "cognite_asset (pyatlan.model.assets.cogniteevent attribute)": [[33, "pyatlan.model.assets.CogniteEvent.COGNITE_ASSET"]], "cogniteevent (class in pyatlan.model.assets)": [[33, "pyatlan.model.assets.CogniteEvent"]], "cognite_asset (pyatlan.model.assets.cognitefile attribute)": [[34, "pyatlan.model.assets.CogniteFile.COGNITE_ASSET"]], "cognitefile (class in pyatlan.model.assets)": [[34, "pyatlan.model.assets.CogniteFile"]], "cognite_asset (pyatlan.model.assets.cognitesequence attribute)": [[35, "pyatlan.model.assets.CogniteSequence.COGNITE_ASSET"]], "cognitesequence (class in pyatlan.model.assets)": [[35, "pyatlan.model.assets.CogniteSequence"]], "cognite_asset (pyatlan.model.assets.cognitetimeseries attribute)": [[36, "pyatlan.model.assets.CogniteTimeSeries.COGNITE_ASSET"]], "cognitetimeseries (class in pyatlan.model.assets)": [[36, "pyatlan.model.assets.CogniteTimeSeries"]], "cognos_default_screen_tip (pyatlan.model.assets.cognos attribute)": [[37, "pyatlan.model.assets.Cognos.COGNOS_DEFAULT_SCREEN_TIP"]], "cognos_id (pyatlan.model.assets.cognos attribute)": [[37, "pyatlan.model.assets.Cognos.COGNOS_ID"]], "cognos_is_disabled (pyatlan.model.assets.cognos attribute)": [[37, "pyatlan.model.assets.Cognos.COGNOS_IS_DISABLED"]], "cognos_is_hidden (pyatlan.model.assets.cognos attribute)": [[37, "pyatlan.model.assets.Cognos.COGNOS_IS_HIDDEN"]], "cognos_parent_name (pyatlan.model.assets.cognos attribute)": [[37, "pyatlan.model.assets.Cognos.COGNOS_PARENT_NAME"]], "cognos_parent_qualified_name (pyatlan.model.assets.cognos attribute)": [[37, "pyatlan.model.assets.Cognos.COGNOS_PARENT_QUALIFIED_NAME"]], "cognos_path (pyatlan.model.assets.cognos attribute)": [[37, "pyatlan.model.assets.Cognos.COGNOS_PATH"]], "cognos_type (pyatlan.model.assets.cognos attribute)": [[37, "pyatlan.model.assets.Cognos.COGNOS_TYPE"]], "cognos_version (pyatlan.model.assets.cognos attribute)": [[37, "pyatlan.model.assets.Cognos.COGNOS_VERSION"]], "cognos (class in pyatlan.model.assets)": [[37, "pyatlan.model.assets.Cognos"]], "cognos_folder (pyatlan.model.assets.cognosdashboard attribute)": [[38, "pyatlan.model.assets.CognosDashboard.COGNOS_FOLDER"]], "cognosdashboard (class in pyatlan.model.assets)": [[38, "pyatlan.model.assets.CognosDashboard"]], "cognos_datasource_connection_string (pyatlan.model.assets.cognosdatasource attribute)": [[39, "pyatlan.model.assets.CognosDatasource.COGNOS_DATASOURCE_CONNECTION_STRING"]], "cognosdatasource (class in pyatlan.model.assets)": [[39, "pyatlan.model.assets.CognosDatasource"]], "cognos_folder (pyatlan.model.assets.cognosexploration attribute)": [[40, "pyatlan.model.assets.CognosExploration.COGNOS_FOLDER"]], "cognosexploration (class in pyatlan.model.assets)": [[40, "pyatlan.model.assets.CognosExploration"]], "cognos_folder (pyatlan.model.assets.cognosfile attribute)": [[41, "pyatlan.model.assets.CognosFile.COGNOS_FOLDER"]], "cognosfile (class in pyatlan.model.assets)": [[41, "pyatlan.model.assets.CognosFile"]], "cognos_dashboards (pyatlan.model.assets.cognosfolder attribute)": [[42, "pyatlan.model.assets.CognosFolder.COGNOS_DASHBOARDS"]], "cognos_explorations (pyatlan.model.assets.cognosfolder attribute)": [[42, "pyatlan.model.assets.CognosFolder.COGNOS_EXPLORATIONS"]], "cognos_files (pyatlan.model.assets.cognosfolder attribute)": [[42, "pyatlan.model.assets.CognosFolder.COGNOS_FILES"]], "cognos_folder (pyatlan.model.assets.cognosfolder attribute)": [[42, "pyatlan.model.assets.CognosFolder.COGNOS_FOLDER"]], "cognos_folder_child_objects_count (pyatlan.model.assets.cognosfolder attribute)": [[42, "pyatlan.model.assets.CognosFolder.COGNOS_FOLDER_CHILD_OBJECTS_COUNT"]], "cognos_folder_sub_folder_count (pyatlan.model.assets.cognosfolder attribute)": [[42, "pyatlan.model.assets.CognosFolder.COGNOS_FOLDER_SUB_FOLDER_COUNT"]], "cognos_modules (pyatlan.model.assets.cognosfolder attribute)": [[42, "pyatlan.model.assets.CognosFolder.COGNOS_MODULES"]], "cognos_packages (pyatlan.model.assets.cognosfolder attribute)": [[42, "pyatlan.model.assets.CognosFolder.COGNOS_PACKAGES"]], "cognos_reports (pyatlan.model.assets.cognosfolder attribute)": [[42, "pyatlan.model.assets.CognosFolder.COGNOS_REPORTS"]], "cognos_sub_folders (pyatlan.model.assets.cognosfolder attribute)": [[42, "pyatlan.model.assets.CognosFolder.COGNOS_SUB_FOLDERS"]], "cognosfolder (class in pyatlan.model.assets)": [[42, "pyatlan.model.assets.CognosFolder"]], "cognos_folder (pyatlan.model.assets.cognosmodule attribute)": [[43, "pyatlan.model.assets.CognosModule.COGNOS_FOLDER"]], "cognosmodule (class in pyatlan.model.assets)": [[43, "pyatlan.model.assets.CognosModule"]], "cognos_folder (pyatlan.model.assets.cognospackage attribute)": [[44, "pyatlan.model.assets.CognosPackage.COGNOS_FOLDER"]], "cognospackage (class in pyatlan.model.assets)": [[44, "pyatlan.model.assets.CognosPackage"]], "cognos_folder (pyatlan.model.assets.cognosreport attribute)": [[45, "pyatlan.model.assets.CognosReport.COGNOS_FOLDER"]], "cognosreport (class in pyatlan.model.assets)": [[45, "pyatlan.model.assets.CognosReport"]], "collection (class in pyatlan.model.assets)": [[46, "pyatlan.model.assets.Collection"]], "icon (pyatlan.model.assets.collection attribute)": [[46, "pyatlan.model.assets.Collection.ICON"]], "icon_type (pyatlan.model.assets.collection attribute)": [[46, "pyatlan.model.assets.Collection.ICON_TYPE"]], "calculation_view (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.CALCULATION_VIEW"]], "column_average (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_AVERAGE"]], "column_average_length (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_AVERAGE_LENGTH"]], "column_dbt_model_columns (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_DBT_MODEL_COLUMNS"]], "column_depth_level (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_DEPTH_LEVEL"]], "column_distinct_values_count (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_DISTINCT_VALUES_COUNT"]], "column_distinct_values_count_long (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_DISTINCT_VALUES_COUNT_LONG"]], "column_duplicate_values_count (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_DUPLICATE_VALUES_COUNT"]], "column_duplicate_values_count_long (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_DUPLICATE_VALUES_COUNT_LONG"]], "column_histogram (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_HISTOGRAM"]], "column_max (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_MAX"]], "column_maximum_string_length (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_MAXIMUM_STRING_LENGTH"]], "column_maxs (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_MAXS"]], "column_mean (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_MEAN"]], "column_median (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_MEDIAN"]], "column_min (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_MIN"]], "column_minimum_string_length (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_MINIMUM_STRING_LENGTH"]], "column_mins (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_MINS"]], "column_missing_values_count (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_MISSING_VALUES_COUNT"]], "column_missing_values_count_long (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_MISSING_VALUES_COUNT_LONG"]], "column_missing_values_percentage (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_MISSING_VALUES_PERCENTAGE"]], "column_standard_deviation (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_STANDARD_DEVIATION"]], "column_sum (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_SUM"]], "column_top_values (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_TOP_VALUES"]], "column_uniqueness_percentage (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_UNIQUENESS_PERCENTAGE"]], "column_unique_values_count (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_UNIQUE_VALUES_COUNT"]], "column_unique_values_count_long (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_UNIQUE_VALUES_COUNT_LONG"]], "column_variance (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.COLUMN_VARIANCE"]], "column (class in pyatlan.model.assets)": [[47, "pyatlan.model.assets.Column"]], "data_quality_metric_dimensions (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.DATA_QUALITY_METRIC_DIMENSIONS"]], "data_type (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.DATA_TYPE"]], "dbt_metrics (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.DBT_METRICS"]], "dbt_model_columns (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.DBT_MODEL_COLUMNS"]], "default_value (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.DEFAULT_VALUE"]], "foreign_key_from (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.FOREIGN_KEY_FROM"]], "foreign_key_to (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.FOREIGN_KEY_TO"]], "is_clustered (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.IS_CLUSTERED"]], "is_dist (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.IS_DIST"]], "is_foreign (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.IS_FOREIGN"]], "is_indexed (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.IS_INDEXED"]], "is_nullable (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.IS_NULLABLE"]], "is_partition (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.IS_PARTITION"]], "is_pinned (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.IS_PINNED"]], "is_primary (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.IS_PRIMARY"]], "is_sort (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.IS_SORT"]], "materialised_view (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.MATERIALISED_VIEW"]], "max_length (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.MAX_LENGTH"]], "metric_timestamps (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.METRIC_TIMESTAMPS"]], "nested_columns (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.NESTED_COLUMNS"]], "nested_column_count (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.NESTED_COLUMN_COUNT"]], "numeric_scale (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.NUMERIC_SCALE"]], "order (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.ORDER"]], "parent_column (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.PARENT_COLUMN"]], "parent_column_name (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.PARENT_COLUMN_NAME"]], "parent_column_qualified_name (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.PARENT_COLUMN_QUALIFIED_NAME"]], "partition_order (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.PARTITION_ORDER"]], "pinned_at (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.PINNED_AT"]], "pinned_by (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.PINNED_BY"]], "precision (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.PRECISION"]], "queries (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.QUERIES"]], "raw_data_type_definition (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.RAW_DATA_TYPE_DEFINITION"]], "snowflake_dynamic_table (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.SNOWFLAKE_DYNAMIC_TABLE"]], "sub_data_type (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.SUB_DATA_TYPE"]], "table (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.TABLE"]], "table_partition (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.TABLE_PARTITION"]], "validations (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.VALIDATIONS"]], "view (pyatlan.model.assets.column attribute)": [[47, "pyatlan.model.assets.Column.VIEW"]], "columnprocess (class in pyatlan.model.assets)": [[48, "pyatlan.model.assets.ColumnProcess"]], "inputs (pyatlan.model.assets.columnprocess attribute)": [[48, "pyatlan.model.assets.ColumnProcess.INPUTS"]], "outputs (pyatlan.model.assets.columnprocess attribute)": [[48, "pyatlan.model.assets.ColumnProcess.OUTPUTS"]], "process (pyatlan.model.assets.columnprocess attribute)": [[48, "pyatlan.model.assets.ColumnProcess.PROCESS"]], "allow_query (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.ALLOW_QUERY"]], "allow_query_preview (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.ALLOW_QUERY_PREVIEW"]], "category (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.CATEGORY"]], "connection_dbt_environments (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.CONNECTION_DBT_ENVIRONMENTS"]], "connection_sso_credential_guid (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.CONNECTION_SSO_CREDENTIAL_GUID"]], "connector_icon (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.CONNECTOR_ICON"]], "connector_image (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.CONNECTOR_IMAGE"]], "credential_strategy (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.CREDENTIAL_STRATEGY"]], "connection (class in pyatlan.model.assets)": [[49, "pyatlan.model.assets.Connection"]], "default_credential_guid (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.DEFAULT_CREDENTIAL_GUID"]], "has_popularity_insights (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.HAS_POPULARITY_INSIGHTS"]], "host (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.HOST"]], "is_sample_data_preview_enabled (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.IS_SAMPLE_DATA_PREVIEW_ENABLED"]], "object_storage_upload_threshold (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.OBJECT_STORAGE_UPLOAD_THRESHOLD"]], "policy_strategy (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.POLICY_STRATEGY"]], "policy_strategy_for_sample_preview (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.POLICY_STRATEGY_FOR_SAMPLE_PREVIEW"]], "popularity_insights_timeframe (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.POPULARITY_INSIGHTS_TIMEFRAME"]], "port (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.PORT"]], "preview_credential_strategy (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.PREVIEW_CREDENTIAL_STRATEGY"]], "query_config (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.QUERY_CONFIG"]], "query_preview_config (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.QUERY_PREVIEW_CONFIG"]], "query_timeout (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.QUERY_TIMEOUT"]], "query_username_strategy (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.QUERY_USERNAME_STRATEGY"]], "row_limit (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.ROW_LIMIT"]], "source_logo (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.SOURCE_LOGO"]], "sub_category (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.SUB_CATEGORY"]], "use_object_storage (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.USE_OBJECT_STORAGE"]], "vector_embeddings_enabled (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.VECTOR_EMBEDDINGS_ENABLED"]], "vector_embeddings_updated_at (pyatlan.model.assets.connection attribute)": [[49, "pyatlan.model.assets.Connection.VECTOR_EMBEDDINGS_UPDATED_AT"]], "cosmosmongodb (class in pyatlan.model.assets)": [[50, "pyatlan.model.assets.CosmosMongoDB"]], "alias (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.ALIAS"]], "atlan_schema (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.ATLAN_SCHEMA"]], "calculation_view_name (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.CALCULATION_VIEW_NAME"]], "calculation_view_qualified_name (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.CALCULATION_VIEW_QUALIFIED_NAME"]], "columns (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.COLUMNS"]], "column_count (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.COLUMN_COUNT"]], "cosmos_mongo_db_database (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.COSMOS_MONGO_DB_DATABASE"]], "cosmosmongodbcollection (class in pyatlan.model.assets)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection"]], "database_name (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.DATABASE_NAME"]], "database_qualified_name (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.DATABASE_QUALIFIED_NAME"]], "dbt_models (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.DBT_MODELS"]], "dbt_sources (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.DBT_SOURCES"]], "dbt_tests (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.DBT_TESTS"]], "dimensions (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.DIMENSIONS"]], "external_location (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.EXTERNAL_LOCATION"]], "external_location_format (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.EXTERNAL_LOCATION_FORMAT"]], "external_location_region (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.EXTERNAL_LOCATION_REGION"]], "facts (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.FACTS"]], "is_partitioned (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.IS_PARTITIONED"]], "is_profiled (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.IS_PROFILED"]], "is_query_preview (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.IS_QUERY_PREVIEW"]], "is_sharded (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.IS_SHARDED"]], "is_temporary (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.IS_TEMPORARY"]], "last_profiled_at (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.LAST_PROFILED_AT"]], "mongo_db_collection_average_object_size (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.MONGO_DB_COLLECTION_AVERAGE_OBJECT_SIZE"]], "mongo_db_collection_expire_after_seconds (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.MONGO_DB_COLLECTION_EXPIRE_AFTER_SECONDS"]], "mongo_db_collection_is_capped (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.MONGO_DB_COLLECTION_IS_CAPPED"]], "mongo_db_collection_maximum_document_count (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.MONGO_DB_COLLECTION_MAXIMUM_DOCUMENT_COUNT"]], "mongo_db_collection_max_size (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.MONGO_DB_COLLECTION_MAX_SIZE"]], "mongo_db_collection_num_indexes (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.MONGO_DB_COLLECTION_NUM_INDEXES"]], "mongo_db_collection_num_orphan_docs (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.MONGO_DB_COLLECTION_NUM_ORPHAN_DOCS"]], "mongo_db_collection_schema_definition (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.MONGO_DB_COLLECTION_SCHEMA_DEFINITION"]], "mongo_db_collection_subtype (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.MONGO_DB_COLLECTION_SUBTYPE"]], "mongo_db_collection_time_field (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.MONGO_DB_COLLECTION_TIME_FIELD"]], "mongo_db_collection_time_granularity (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.MONGO_DB_COLLECTION_TIME_GRANULARITY"]], "mongo_db_collection_total_index_size (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.MONGO_DB_COLLECTION_TOTAL_INDEX_SIZE"]], "mongo_db_database (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.MONGO_DB_DATABASE"]], "no_sql_schema_definition (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.NO_SQL_SCHEMA_DEFINITION"]], "partitions (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.PARTITIONS"]], "partition_count (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.PARTITION_COUNT"]], "partition_list (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.PARTITION_LIST"]], "partition_strategy (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.PARTITION_STRATEGY"]], "queries (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.QUERIES"]], "query_count (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.QUERY_COUNT"]], "query_count_updated_at (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.QUERY_COUNT_UPDATED_AT"]], "query_preview_config (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.QUERY_PREVIEW_CONFIG"]], "query_user_count (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.QUERY_USER_COUNT"]], "query_user_map (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.QUERY_USER_MAP"]], "row_count (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.ROW_COUNT"]], "schema_name (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.SCHEMA_NAME"]], "schema_qualified_name (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.SCHEMA_QUALIFIED_NAME"]], "size_bytes (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.SIZE_BYTES"]], "sql_dbt_models (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.SQL_DBT_MODELS"]], "sql_dbt_sources (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.SQL_DBT_SOURCES"]], "table_name (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.TABLE_NAME"]], "table_qualified_name (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.TABLE_QUALIFIED_NAME"]], "view_name (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.VIEW_NAME"]], "view_qualified_name (pyatlan.model.assets.cosmosmongodbcollection attribute)": [[51, "pyatlan.model.assets.CosmosMongoDBCollection.VIEW_QUALIFIED_NAME"]], "calculation_view_name (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.CALCULATION_VIEW_NAME"]], "calculation_view_qualified_name (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.CALCULATION_VIEW_QUALIFIED_NAME"]], "cosmos_mongo_db_collections (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.COSMOS_MONGO_DB_COLLECTIONS"]], "cosmosmongodbdatabase (class in pyatlan.model.assets)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase"]], "database_name (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.DATABASE_NAME"]], "database_qualified_name (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.DATABASE_QUALIFIED_NAME"]], "dbt_models (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.DBT_MODELS"]], "dbt_sources (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.DBT_SOURCES"]], "dbt_tests (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.DBT_TESTS"]], "is_profiled (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.IS_PROFILED"]], "last_profiled_at (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.LAST_PROFILED_AT"]], "mongo_db_collections (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.MONGO_DB_COLLECTIONS"]], "mongo_db_database_collection_count (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.MONGO_DB_DATABASE_COLLECTION_COUNT"]], "no_sql_schema_definition (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.NO_SQL_SCHEMA_DEFINITION"]], "query_count (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.QUERY_COUNT"]], "query_count_updated_at (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.QUERY_COUNT_UPDATED_AT"]], "query_user_count (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.QUERY_USER_COUNT"]], "query_user_map (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.QUERY_USER_MAP"]], "schemas (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.SCHEMAS"]], "schema_count (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.SCHEMA_COUNT"]], "schema_name (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.SCHEMA_NAME"]], "schema_qualified_name (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.SCHEMA_QUALIFIED_NAME"]], "sql_dbt_models (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.SQL_DBT_MODELS"]], "sql_dbt_sources (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.SQL_DBT_SOURCES"]], "table_name (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.TABLE_NAME"]], "table_qualified_name (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.TABLE_QUALIFIED_NAME"]], "view_name (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.VIEW_NAME"]], "view_qualified_name (pyatlan.model.assets.cosmosmongodbdatabase attribute)": [[52, "pyatlan.model.assets.CosmosMongoDBDatabase.VIEW_QUALIFIED_NAME"]], "cube_dimensions (pyatlan.model.assets.cube attribute)": [[53, "pyatlan.model.assets.Cube.CUBE_DIMENSIONS"]], "cube_dimension_count (pyatlan.model.assets.cube attribute)": [[53, "pyatlan.model.assets.Cube.CUBE_DIMENSION_COUNT"]], "cube (class in pyatlan.model.assets)": [[53, "pyatlan.model.assets.Cube"]], "cube (pyatlan.model.assets.cubedimension attribute)": [[54, "pyatlan.model.assets.CubeDimension.CUBE"]], "cube_hierarchies (pyatlan.model.assets.cubedimension attribute)": [[54, "pyatlan.model.assets.CubeDimension.CUBE_HIERARCHIES"]], "cube_hierarchy_count (pyatlan.model.assets.cubedimension attribute)": [[54, "pyatlan.model.assets.CubeDimension.CUBE_HIERARCHY_COUNT"]], "cubedimension (class in pyatlan.model.assets)": [[54, "pyatlan.model.assets.CubeDimension"]], "cube_field_level (pyatlan.model.assets.cubefield attribute)": [[55, "pyatlan.model.assets.CubeField.CUBE_FIELD_LEVEL"]], "cube_field_measure_expression (pyatlan.model.assets.cubefield attribute)": [[55, "pyatlan.model.assets.CubeField.CUBE_FIELD_MEASURE_EXPRESSION"]], "cube_hierarchy (pyatlan.model.assets.cubefield attribute)": [[55, "pyatlan.model.assets.CubeField.CUBE_HIERARCHY"]], "cube_nested_fields (pyatlan.model.assets.cubefield attribute)": [[55, "pyatlan.model.assets.CubeField.CUBE_NESTED_FIELDS"]], "cube_parent_field (pyatlan.model.assets.cubefield attribute)": [[55, "pyatlan.model.assets.CubeField.CUBE_PARENT_FIELD"]], "cube_parent_field_name (pyatlan.model.assets.cubefield attribute)": [[55, "pyatlan.model.assets.CubeField.CUBE_PARENT_FIELD_NAME"]], "cube_parent_field_qualified_name (pyatlan.model.assets.cubefield attribute)": [[55, "pyatlan.model.assets.CubeField.CUBE_PARENT_FIELD_QUALIFIED_NAME"]], "cube_sub_field_count (pyatlan.model.assets.cubefield attribute)": [[55, "pyatlan.model.assets.CubeField.CUBE_SUB_FIELD_COUNT"]], "cubefield (class in pyatlan.model.assets)": [[55, "pyatlan.model.assets.CubeField"]], "cube_dimension (pyatlan.model.assets.cubehierarchy attribute)": [[56, "pyatlan.model.assets.CubeHierarchy.CUBE_DIMENSION"]], "cube_fields (pyatlan.model.assets.cubehierarchy attribute)": [[56, "pyatlan.model.assets.CubeHierarchy.CUBE_FIELDS"]], "cube_field_count (pyatlan.model.assets.cubehierarchy attribute)": [[56, "pyatlan.model.assets.CubeHierarchy.CUBE_FIELD_COUNT"]], "cubehierarchy (class in pyatlan.model.assets)": [[56, "pyatlan.model.assets.CubeHierarchy"]], "database (class in pyatlan.model.assets)": [[57, "pyatlan.model.assets.Database"]], "schemas (pyatlan.model.assets.database attribute)": [[57, "pyatlan.model.assets.Database.SCHEMAS"]], "schema_count (pyatlan.model.assets.database attribute)": [[57, "pyatlan.model.assets.Database.SCHEMA_COUNT"]], "data_contract_asset_certified (pyatlan.model.assets.datacontract attribute)": [[58, "pyatlan.model.assets.DataContract.DATA_CONTRACT_ASSET_CERTIFIED"]], "data_contract_asset_guid (pyatlan.model.assets.datacontract attribute)": [[58, "pyatlan.model.assets.DataContract.DATA_CONTRACT_ASSET_GUID"]], "data_contract_asset_latest (pyatlan.model.assets.datacontract attribute)": [[58, "pyatlan.model.assets.DataContract.DATA_CONTRACT_ASSET_LATEST"]], "data_contract_json (pyatlan.model.assets.datacontract attribute)": [[58, "pyatlan.model.assets.DataContract.DATA_CONTRACT_JSON"]], "data_contract_next_version (pyatlan.model.assets.datacontract attribute)": [[58, "pyatlan.model.assets.DataContract.DATA_CONTRACT_NEXT_VERSION"]], "data_contract_previous_version (pyatlan.model.assets.datacontract attribute)": [[58, "pyatlan.model.assets.DataContract.DATA_CONTRACT_PREVIOUS_VERSION"]], "data_contract_version (pyatlan.model.assets.datacontract attribute)": [[58, "pyatlan.model.assets.DataContract.DATA_CONTRACT_VERSION"]], "datacontract (class in pyatlan.model.assets)": [[58, "pyatlan.model.assets.DataContract"]], "data_products (pyatlan.model.assets.datadomain attribute)": [[59, "pyatlan.model.assets.DataDomain.DATA_PRODUCTS"]], "datadomain (class in pyatlan.model.assets)": [[59, "pyatlan.model.assets.DataDomain"]], "parent_domain (pyatlan.model.assets.datadomain attribute)": [[59, "pyatlan.model.assets.DataDomain.PARENT_DOMAIN"]], "stakeholders (pyatlan.model.assets.datadomain attribute)": [[59, "pyatlan.model.assets.DataDomain.STAKEHOLDERS"]], "sub_domains (pyatlan.model.assets.datadomain attribute)": [[59, "pyatlan.model.assets.DataDomain.SUB_DOMAINS"]], "datamesh (class in pyatlan.model.assets)": [[60, "pyatlan.model.assets.DataMesh"]], "parent_domain_qualified_name (pyatlan.model.assets.datamesh attribute)": [[60, "pyatlan.model.assets.DataMesh.PARENT_DOMAIN_QUALIFIED_NAME"]], "super_domain_qualified_name (pyatlan.model.assets.datamesh attribute)": [[60, "pyatlan.model.assets.DataMesh.SUPER_DOMAIN_QUALIFIED_NAME"]], "get_super_domain_qualified_name() (pyatlan.model.assets.datamesh static method)": [[60, "pyatlan.model.assets.DataMesh.get_super_domain_qualified_name"]], "daap_criticality (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.DAAP_CRITICALITY"]], "daap_sensitivity (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.DAAP_SENSITIVITY"]], "daap_status (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.DAAP_STATUS"]], "daap_visibility (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.DAAP_VISIBILITY"]], "daap_visibility_groups (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.DAAP_VISIBILITY_GROUPS"]], "daap_visibility_users (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.DAAP_VISIBILITY_USERS"]], "data_domain (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.DATA_DOMAIN"]], "data_product_assets_dsl (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_ASSETS_DSL"]], "data_product_assets_playbook_filter (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_ASSETS_PLAYBOOK_FILTER"]], "data_product_criticality (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_CRITICALITY"]], "data_product_score_updated_at (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_SCORE_UPDATED_AT"]], "data_product_score_value (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_SCORE_VALUE"]], "data_product_sensitivity (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_SENSITIVITY"]], "data_product_status (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_STATUS"]], "data_product_visibility (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.DATA_PRODUCT_VISIBILITY"]], "dataproduct (class in pyatlan.model.assets)": [[61, "pyatlan.model.assets.DataProduct"]], "input_ports (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.INPUT_PORTS"]], "output_ports (pyatlan.model.assets.dataproduct attribute)": [[61, "pyatlan.model.assets.DataProduct.OUTPUT_PORTS"]], "dataquality (class in pyatlan.model.assets)": [[62, "pyatlan.model.assets.DataQuality"]], "dataset (class in pyatlan.model.assets)": [[63, "pyatlan.model.assets.DataSet"]], "datastudio (class in pyatlan.model.assets)": [[64, "pyatlan.model.assets.DataStudio"]], "google_labels (pyatlan.model.assets.datastudio attribute)": [[64, "pyatlan.model.assets.DataStudio.GOOGLE_LABELS"]], "google_location (pyatlan.model.assets.datastudio attribute)": [[64, "pyatlan.model.assets.DataStudio.GOOGLE_LOCATION"]], "google_location_type (pyatlan.model.assets.datastudio attribute)": [[64, "pyatlan.model.assets.DataStudio.GOOGLE_LOCATION_TYPE"]], "google_project_id (pyatlan.model.assets.datastudio attribute)": [[64, "pyatlan.model.assets.DataStudio.GOOGLE_PROJECT_ID"]], "google_project_name (pyatlan.model.assets.datastudio attribute)": [[64, "pyatlan.model.assets.DataStudio.GOOGLE_PROJECT_NAME"]], "google_project_number (pyatlan.model.assets.datastudio attribute)": [[64, "pyatlan.model.assets.DataStudio.GOOGLE_PROJECT_NUMBER"]], "google_service (pyatlan.model.assets.datastudio attribute)": [[64, "pyatlan.model.assets.DataStudio.GOOGLE_SERVICE"]], "google_tags (pyatlan.model.assets.datastudio attribute)": [[64, "pyatlan.model.assets.DataStudio.GOOGLE_TAGS"]], "input_to_airflow_tasks (pyatlan.model.assets.datastudio attribute)": [[64, "pyatlan.model.assets.DataStudio.INPUT_TO_AIRFLOW_TASKS"]], "input_to_processes (pyatlan.model.assets.datastudio attribute)": [[64, "pyatlan.model.assets.DataStudio.INPUT_TO_PROCESSES"]], "input_to_spark_jobs (pyatlan.model.assets.datastudio attribute)": [[64, "pyatlan.model.assets.DataStudio.INPUT_TO_SPARK_JOBS"]], "output_from_airflow_tasks (pyatlan.model.assets.datastudio attribute)": [[64, "pyatlan.model.assets.DataStudio.OUTPUT_FROM_AIRFLOW_TASKS"]], "output_from_processes (pyatlan.model.assets.datastudio attribute)": [[64, "pyatlan.model.assets.DataStudio.OUTPUT_FROM_PROCESSES"]], "output_from_spark_jobs (pyatlan.model.assets.datastudio attribute)": [[64, "pyatlan.model.assets.DataStudio.OUTPUT_FROM_SPARK_JOBS"]], "data_studio_asset_owner (pyatlan.model.assets.datastudioasset attribute)": [[65, "pyatlan.model.assets.DataStudioAsset.DATA_STUDIO_ASSET_OWNER"]], "data_studio_asset_title (pyatlan.model.assets.datastudioasset attribute)": [[65, "pyatlan.model.assets.DataStudioAsset.DATA_STUDIO_ASSET_TITLE"]], "data_studio_asset_type (pyatlan.model.assets.datastudioasset attribute)": [[65, "pyatlan.model.assets.DataStudioAsset.DATA_STUDIO_ASSET_TYPE"]], "datastudioasset (class in pyatlan.model.assets)": [[65, "pyatlan.model.assets.DataStudioAsset"]], "google_labels (pyatlan.model.assets.datastudioasset attribute)": [[65, "pyatlan.model.assets.DataStudioAsset.GOOGLE_LABELS"]], "google_location (pyatlan.model.assets.datastudioasset attribute)": [[65, "pyatlan.model.assets.DataStudioAsset.GOOGLE_LOCATION"]], "google_location_type (pyatlan.model.assets.datastudioasset attribute)": [[65, "pyatlan.model.assets.DataStudioAsset.GOOGLE_LOCATION_TYPE"]], "google_project_id (pyatlan.model.assets.datastudioasset attribute)": [[65, "pyatlan.model.assets.DataStudioAsset.GOOGLE_PROJECT_ID"]], "google_project_name (pyatlan.model.assets.datastudioasset attribute)": [[65, "pyatlan.model.assets.DataStudioAsset.GOOGLE_PROJECT_NAME"]], "google_project_number (pyatlan.model.assets.datastudioasset attribute)": [[65, "pyatlan.model.assets.DataStudioAsset.GOOGLE_PROJECT_NUMBER"]], "google_service (pyatlan.model.assets.datastudioasset attribute)": [[65, "pyatlan.model.assets.DataStudioAsset.GOOGLE_SERVICE"]], "google_tags (pyatlan.model.assets.datastudioasset attribute)": [[65, "pyatlan.model.assets.DataStudioAsset.GOOGLE_TAGS"]], "is_trashed_data_studio_asset (pyatlan.model.assets.datastudioasset attribute)": [[65, "pyatlan.model.assets.DataStudioAsset.IS_TRASHED_DATA_STUDIO_ASSET"]], "dbt_account_name (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_ACCOUNT_NAME"]], "dbt_alias (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_ALIAS"]], "dbt_connection_context (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_CONNECTION_CONTEXT"]], "dbt_environment_dbt_version (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_ENVIRONMENT_DBT_VERSION"]], "dbt_environment_name (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_ENVIRONMENT_NAME"]], "dbt_job_last_run (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_JOB_LAST_RUN"]], "dbt_job_name (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_JOB_NAME"]], "dbt_job_next_run (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_JOB_NEXT_RUN"]], "dbt_job_next_run_humanized (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_JOB_NEXT_RUN_HUMANIZED"]], "dbt_job_schedule (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_JOB_SCHEDULE"]], "dbt_job_schedule_cron_humanized (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_JOB_SCHEDULE_CRON_HUMANIZED"]], "dbt_job_status (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_JOB_STATUS"]], "dbt_meta (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_META"]], "dbt_package_name (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_PACKAGE_NAME"]], "dbt_project_name (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_PROJECT_NAME"]], "dbt_semantic_layer_proxy_url (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_SEMANTIC_LAYER_PROXY_URL"]], "dbt_tags (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_TAGS"]], "dbt_unique_id (pyatlan.model.assets.dbt attribute)": [[66, "pyatlan.model.assets.Dbt.DBT_UNIQUE_ID"]], "dbt (class in pyatlan.model.assets)": [[66, "pyatlan.model.assets.Dbt"]], "airflow_tasks (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.AIRFLOW_TASKS"]], "ast (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.AST"]], "code (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.CODE"]], "column_processes (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.COLUMN_PROCESSES"]], "dbt_account_name (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_ACCOUNT_NAME"]], "dbt_alias (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_ALIAS"]], "dbt_column_process_job_status (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_COLUMN_PROCESS_JOB_STATUS"]], "dbt_connection_context (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_CONNECTION_CONTEXT"]], "dbt_environment_dbt_version (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_ENVIRONMENT_DBT_VERSION"]], "dbt_environment_name (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_ENVIRONMENT_NAME"]], "dbt_job_last_run (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_JOB_LAST_RUN"]], "dbt_job_name (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_JOB_NAME"]], "dbt_job_next_run (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_JOB_NEXT_RUN"]], "dbt_job_next_run_humanized (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_JOB_NEXT_RUN_HUMANIZED"]], "dbt_job_schedule (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_JOB_SCHEDULE"]], "dbt_job_schedule_cron_humanized (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_JOB_SCHEDULE_CRON_HUMANIZED"]], "dbt_job_status (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_JOB_STATUS"]], "dbt_meta (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_META"]], "dbt_package_name (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_PACKAGE_NAME"]], "dbt_project_name (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_PROJECT_NAME"]], "dbt_semantic_layer_proxy_url (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_SEMANTIC_LAYER_PROXY_URL"]], "dbt_tags (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_TAGS"]], "dbt_unique_id (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.DBT_UNIQUE_ID"]], "dbtcolumnprocess (class in pyatlan.model.assets)": [[67, "pyatlan.model.assets.DbtColumnProcess"]], "matillion_component (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.MATILLION_COMPONENT"]], "process (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.PROCESS"]], "spark_jobs (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.SPARK_JOBS"]], "sql (pyatlan.model.assets.dbtcolumnprocess attribute)": [[67, "pyatlan.model.assets.DbtColumnProcess.SQL"]], "assets (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.ASSETS"]], "dbt_account_name (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_ACCOUNT_NAME"]], "dbt_alias (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_ALIAS"]], "dbt_connection_context (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_CONNECTION_CONTEXT"]], "dbt_environment_dbt_version (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_ENVIRONMENT_DBT_VERSION"]], "dbt_environment_name (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_ENVIRONMENT_NAME"]], "dbt_job_last_run (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_JOB_LAST_RUN"]], "dbt_job_name (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_JOB_NAME"]], "dbt_job_next_run (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_JOB_NEXT_RUN"]], "dbt_job_next_run_humanized (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_JOB_NEXT_RUN_HUMANIZED"]], "dbt_job_schedule (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_JOB_SCHEDULE"]], "dbt_job_schedule_cron_humanized (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_JOB_SCHEDULE_CRON_HUMANIZED"]], "dbt_job_status (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_JOB_STATUS"]], "dbt_meta (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_META"]], "dbt_metric_filters (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_METRIC_FILTERS"]], "dbt_metric_filter_columns (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_METRIC_FILTER_COLUMNS"]], "dbt_model (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_MODEL"]], "dbt_package_name (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_PACKAGE_NAME"]], "dbt_project_name (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_PROJECT_NAME"]], "dbt_semantic_layer_proxy_url (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_SEMANTIC_LAYER_PROXY_URL"]], "dbt_tags (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_TAGS"]], "dbt_unique_id (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.DBT_UNIQUE_ID"]], "dbtmetric (class in pyatlan.model.assets)": [[68, "pyatlan.model.assets.DbtMetric"]], "metric_dimension_columns (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.METRIC_DIMENSION_COLUMNS"]], "metric_filters (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.METRIC_FILTERS"]], "metric_sql (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.METRIC_SQL"]], "metric_timestamp_column (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.METRIC_TIMESTAMP_COLUMN"]], "metric_time_grains (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.METRIC_TIME_GRAINS"]], "metric_type (pyatlan.model.assets.dbtmetric attribute)": [[68, "pyatlan.model.assets.DbtMetric.METRIC_TYPE"]], "dbt_compiled_sql (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_COMPILED_SQL"]], "dbt_error (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_ERROR"]], "dbt_materialization_type (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_MATERIALIZATION_TYPE"]], "dbt_metrics (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_METRICS"]], "dbt_model_columns (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_MODEL_COLUMNS"]], "dbt_model_compile_completed_at (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_MODEL_COMPILE_COMPLETED_AT"]], "dbt_model_compile_started_at (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_MODEL_COMPILE_STARTED_AT"]], "dbt_model_execute_completed_at (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_MODEL_EXECUTE_COMPLETED_AT"]], "dbt_model_execute_started_at (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_MODEL_EXECUTE_STARTED_AT"]], "dbt_model_execution_time (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_MODEL_EXECUTION_TIME"]], "dbt_model_run_elapsed_time (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_MODEL_RUN_ELAPSED_TIME"]], "dbt_model_run_generated_at (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_MODEL_RUN_GENERATED_AT"]], "dbt_model_sql_assets (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_MODEL_SQL_ASSETS"]], "dbt_raw_sql (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_RAW_SQL"]], "dbt_stats (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_STATS"]], "dbt_status (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_STATUS"]], "dbt_tests (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.DBT_TESTS"]], "dbtmodel (class in pyatlan.model.assets)": [[69, "pyatlan.model.assets.DbtModel"]], "sql_asset (pyatlan.model.assets.dbtmodel attribute)": [[69, "pyatlan.model.assets.DbtModel.SQL_ASSET"]], "dbt_model (pyatlan.model.assets.dbtmodelcolumn attribute)": [[70, "pyatlan.model.assets.DbtModelColumn.DBT_MODEL"]], "dbt_model_column_data_type (pyatlan.model.assets.dbtmodelcolumn attribute)": [[70, "pyatlan.model.assets.DbtModelColumn.DBT_MODEL_COLUMN_DATA_TYPE"]], "dbt_model_column_order (pyatlan.model.assets.dbtmodelcolumn attribute)": [[70, "pyatlan.model.assets.DbtModelColumn.DBT_MODEL_COLUMN_ORDER"]], "dbt_model_column_sql_columns (pyatlan.model.assets.dbtmodelcolumn attribute)": [[70, "pyatlan.model.assets.DbtModelColumn.DBT_MODEL_COLUMN_SQL_COLUMNS"]], "dbt_model_qualified_name (pyatlan.model.assets.dbtmodelcolumn attribute)": [[70, "pyatlan.model.assets.DbtModelColumn.DBT_MODEL_QUALIFIED_NAME"]], "dbt_tests (pyatlan.model.assets.dbtmodelcolumn attribute)": [[70, "pyatlan.model.assets.DbtModelColumn.DBT_TESTS"]], "dbtmodelcolumn (class in pyatlan.model.assets)": [[70, "pyatlan.model.assets.DbtModelColumn"]], "sql_column (pyatlan.model.assets.dbtmodelcolumn attribute)": [[70, "pyatlan.model.assets.DbtModelColumn.SQL_COLUMN"]], "airflow_tasks (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.AIRFLOW_TASKS"]], "ast (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.AST"]], "code (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.CODE"]], "column_processes (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.COLUMN_PROCESSES"]], "dbt_account_name (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_ACCOUNT_NAME"]], "dbt_alias (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_ALIAS"]], "dbt_connection_context (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_CONNECTION_CONTEXT"]], "dbt_environment_dbt_version (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_ENVIRONMENT_DBT_VERSION"]], "dbt_environment_name (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_ENVIRONMENT_NAME"]], "dbt_job_last_run (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_JOB_LAST_RUN"]], "dbt_job_name (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_JOB_NAME"]], "dbt_job_next_run (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_JOB_NEXT_RUN"]], "dbt_job_next_run_humanized (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_JOB_NEXT_RUN_HUMANIZED"]], "dbt_job_schedule (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_JOB_SCHEDULE"]], "dbt_job_schedule_cron_humanized (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_JOB_SCHEDULE_CRON_HUMANIZED"]], "dbt_job_status (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_JOB_STATUS"]], "dbt_meta (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_META"]], "dbt_package_name (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_PACKAGE_NAME"]], "dbt_process_job_status (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_PROCESS_JOB_STATUS"]], "dbt_project_name (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_PROJECT_NAME"]], "dbt_semantic_layer_proxy_url (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_SEMANTIC_LAYER_PROXY_URL"]], "dbt_tags (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_TAGS"]], "dbt_unique_id (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.DBT_UNIQUE_ID"]], "dbtprocess (class in pyatlan.model.assets)": [[71, "pyatlan.model.assets.DbtProcess"]], "matillion_component (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.MATILLION_COMPONENT"]], "spark_jobs (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.SPARK_JOBS"]], "sql (pyatlan.model.assets.dbtprocess attribute)": [[71, "pyatlan.model.assets.DbtProcess.SQL"]], "dbt_freshness_criteria (pyatlan.model.assets.dbtsource attribute)": [[72, "pyatlan.model.assets.DbtSource.DBT_FRESHNESS_CRITERIA"]], "dbt_state (pyatlan.model.assets.dbtsource attribute)": [[72, "pyatlan.model.assets.DbtSource.DBT_STATE"]], "dbt_tests (pyatlan.model.assets.dbtsource attribute)": [[72, "pyatlan.model.assets.DbtSource.DBT_TESTS"]], "dbtsource (class in pyatlan.model.assets)": [[72, "pyatlan.model.assets.DbtSource"]], "sql_asset (pyatlan.model.assets.dbtsource attribute)": [[72, "pyatlan.model.assets.DbtSource.SQL_ASSET"]], "sql_assets (pyatlan.model.assets.dbtsource attribute)": [[72, "pyatlan.model.assets.DbtSource.SQL_ASSETS"]], "dbt_account_name (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_ACCOUNT_NAME"]], "dbt_alias (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_ALIAS"]], "dbt_connection_context (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_CONNECTION_CONTEXT"]], "dbt_environment_dbt_version (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_ENVIRONMENT_DBT_VERSION"]], "dbt_environment_name (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_ENVIRONMENT_NAME"]], "dbt_job_last_run (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_JOB_LAST_RUN"]], "dbt_job_name (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_JOB_NAME"]], "dbt_job_next_run (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_JOB_NEXT_RUN"]], "dbt_job_next_run_humanized (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_JOB_NEXT_RUN_HUMANIZED"]], "dbt_job_schedule (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_JOB_SCHEDULE"]], "dbt_job_schedule_cron_humanized (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_JOB_SCHEDULE_CRON_HUMANIZED"]], "dbt_job_status (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_JOB_STATUS"]], "dbt_meta (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_META"]], "dbt_package_name (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_PACKAGE_NAME"]], "dbt_project_name (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_PROJECT_NAME"]], "dbt_semantic_layer_proxy_url (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_SEMANTIC_LAYER_PROXY_URL"]], "dbt_tags (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_TAGS"]], "dbt_unique_id (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.DBT_UNIQUE_ID"]], "dbttag (class in pyatlan.model.assets)": [[73, "pyatlan.model.assets.DbtTag"]], "mapped_classification_name (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.MAPPED_CLASSIFICATION_NAME"]], "tag_allowed_values (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.TAG_ALLOWED_VALUES"]], "tag_attributes (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.TAG_ATTRIBUTES"]], "tag_id (pyatlan.model.assets.dbttag attribute)": [[73, "pyatlan.model.assets.DbtTag.TAG_ID"]], "dbt_models (pyatlan.model.assets.dbttest attribute)": [[74, "pyatlan.model.assets.DbtTest.DBT_MODELS"]], "dbt_model_columns (pyatlan.model.assets.dbttest attribute)": [[74, "pyatlan.model.assets.DbtTest.DBT_MODEL_COLUMNS"]], "dbt_sources (pyatlan.model.assets.dbttest attribute)": [[74, "pyatlan.model.assets.DbtTest.DBT_SOURCES"]], "dbt_test_compiled_code (pyatlan.model.assets.dbttest attribute)": [[74, "pyatlan.model.assets.DbtTest.DBT_TEST_COMPILED_CODE"]], "dbt_test_compiled_sql (pyatlan.model.assets.dbttest attribute)": [[74, "pyatlan.model.assets.DbtTest.DBT_TEST_COMPILED_SQL"]], "dbt_test_error (pyatlan.model.assets.dbttest attribute)": [[74, "pyatlan.model.assets.DbtTest.DBT_TEST_ERROR"]], "dbt_test_language (pyatlan.model.assets.dbttest attribute)": [[74, "pyatlan.model.assets.DbtTest.DBT_TEST_LANGUAGE"]], "dbt_test_raw_code (pyatlan.model.assets.dbttest attribute)": [[74, "pyatlan.model.assets.DbtTest.DBT_TEST_RAW_CODE"]], "dbt_test_raw_sql (pyatlan.model.assets.dbttest attribute)": [[74, "pyatlan.model.assets.DbtTest.DBT_TEST_RAW_SQL"]], "dbt_test_state (pyatlan.model.assets.dbttest attribute)": [[74, "pyatlan.model.assets.DbtTest.DBT_TEST_STATE"]], "dbt_test_status (pyatlan.model.assets.dbttest attribute)": [[74, "pyatlan.model.assets.DbtTest.DBT_TEST_STATUS"]], "dbttest (class in pyatlan.model.assets)": [[74, "pyatlan.model.assets.DbtTest"]], "sql_assets (pyatlan.model.assets.dbttest attribute)": [[74, "pyatlan.model.assets.DbtTest.SQL_ASSETS"]], "domo_id (pyatlan.model.assets.domo attribute)": [[75, "pyatlan.model.assets.Domo.DOMO_ID"]], "domo_owner_id (pyatlan.model.assets.domo attribute)": [[75, "pyatlan.model.assets.Domo.DOMO_OWNER_ID"]], "domo (class in pyatlan.model.assets)": [[75, "pyatlan.model.assets.Domo"]], "domo_card_dashboard_count (pyatlan.model.assets.domocard attribute)": [[76, "pyatlan.model.assets.DomoCard.DOMO_CARD_DASHBOARD_COUNT"]], "domo_card_type (pyatlan.model.assets.domocard attribute)": [[76, "pyatlan.model.assets.DomoCard.DOMO_CARD_TYPE"]], "domo_card_type_value (pyatlan.model.assets.domocard attribute)": [[76, "pyatlan.model.assets.DomoCard.DOMO_CARD_TYPE_VALUE"]], "domo_dashboards (pyatlan.model.assets.domocard attribute)": [[76, "pyatlan.model.assets.DomoCard.DOMO_DASHBOARDS"]], "domo_dataset (pyatlan.model.assets.domocard attribute)": [[76, "pyatlan.model.assets.DomoCard.DOMO_DATASET"]], "domocard (class in pyatlan.model.assets)": [[76, "pyatlan.model.assets.DomoCard"]], "domo_cards (pyatlan.model.assets.domodashboard attribute)": [[77, "pyatlan.model.assets.DomoDashboard.DOMO_CARDS"]], "domo_dashboard_card_count (pyatlan.model.assets.domodashboard attribute)": [[77, "pyatlan.model.assets.DomoDashboard.DOMO_DASHBOARD_CARD_COUNT"]], "domo_dashboard_children (pyatlan.model.assets.domodashboard attribute)": [[77, "pyatlan.model.assets.DomoDashboard.DOMO_DASHBOARD_CHILDREN"]], "domo_dashboard_parent (pyatlan.model.assets.domodashboard attribute)": [[77, "pyatlan.model.assets.DomoDashboard.DOMO_DASHBOARD_PARENT"]], "domodashboard (class in pyatlan.model.assets)": [[77, "pyatlan.model.assets.DomoDashboard"]], "domo_cards (pyatlan.model.assets.domodataset attribute)": [[78, "pyatlan.model.assets.DomoDataset.DOMO_CARDS"]], "domo_dataset_card_count (pyatlan.model.assets.domodataset attribute)": [[78, "pyatlan.model.assets.DomoDataset.DOMO_DATASET_CARD_COUNT"]], "domo_dataset_columns (pyatlan.model.assets.domodataset attribute)": [[78, "pyatlan.model.assets.DomoDataset.DOMO_DATASET_COLUMNS"]], "domo_dataset_column_count (pyatlan.model.assets.domodataset attribute)": [[78, "pyatlan.model.assets.DomoDataset.DOMO_DATASET_COLUMN_COUNT"]], "domo_dataset_last_run (pyatlan.model.assets.domodataset attribute)": [[78, "pyatlan.model.assets.DomoDataset.DOMO_DATASET_LAST_RUN"]], "domo_dataset_row_count (pyatlan.model.assets.domodataset attribute)": [[78, "pyatlan.model.assets.DomoDataset.DOMO_DATASET_ROW_COUNT"]], "domodataset (class in pyatlan.model.assets)": [[78, "pyatlan.model.assets.DomoDataset"]], "domo_dataset (pyatlan.model.assets.domodatasetcolumn attribute)": [[79, "pyatlan.model.assets.DomoDatasetColumn.DOMO_DATASET"]], "domo_dataset_column_type (pyatlan.model.assets.domodatasetcolumn attribute)": [[79, "pyatlan.model.assets.DomoDatasetColumn.DOMO_DATASET_COLUMN_TYPE"]], "domo_dataset_qualified_name (pyatlan.model.assets.domodatasetcolumn attribute)": [[79, "pyatlan.model.assets.DomoDatasetColumn.DOMO_DATASET_QUALIFIED_NAME"]], "domodatasetcolumn (class in pyatlan.model.assets)": [[79, "pyatlan.model.assets.DomoDatasetColumn"]], "dynamo_db_partition_key (pyatlan.model.assets.dynamodb attribute)": [[80, "pyatlan.model.assets.DynamoDB.DYNAMO_DB_PARTITION_KEY"]], "dynamo_db_read_capacity_units (pyatlan.model.assets.dynamodb attribute)": [[80, "pyatlan.model.assets.DynamoDB.DYNAMO_DB_READ_CAPACITY_UNITS"]], "dynamo_db_sort_key (pyatlan.model.assets.dynamodb attribute)": [[80, "pyatlan.model.assets.DynamoDB.DYNAMO_DB_SORT_KEY"]], "dynamo_db_status (pyatlan.model.assets.dynamodb attribute)": [[80, "pyatlan.model.assets.DynamoDB.DYNAMO_DB_STATUS"]], "dynamo_db_write_capacity_units (pyatlan.model.assets.dynamodb attribute)": [[80, "pyatlan.model.assets.DynamoDB.DYNAMO_DB_WRITE_CAPACITY_UNITS"]], "dynamodb (class in pyatlan.model.assets)": [[80, "pyatlan.model.assets.DynamoDB"]], "dynamo_db_table (pyatlan.model.assets.dynamodbglobalsecondaryindex attribute)": [[81, "pyatlan.model.assets.DynamoDBGlobalSecondaryIndex.DYNAMO_DB_TABLE"]], "dynamodbglobalsecondaryindex (class in pyatlan.model.assets)": [[81, "pyatlan.model.assets.DynamoDBGlobalSecondaryIndex"]], "dynamo_db_table (pyatlan.model.assets.dynamodblocalsecondaryindex attribute)": [[82, "pyatlan.model.assets.DynamoDBLocalSecondaryIndex.DYNAMO_DB_TABLE"]], "dynamodblocalsecondaryindex (class in pyatlan.model.assets)": [[82, "pyatlan.model.assets.DynamoDBLocalSecondaryIndex"]], "alias (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.ALIAS"]], "calculation_view_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.CALCULATION_VIEW_NAME"]], "calculation_view_qualified_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.CALCULATION_VIEW_QUALIFIED_NAME"]], "column_count (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.COLUMN_COUNT"]], "database_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.DATABASE_NAME"]], "database_qualified_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.DATABASE_QUALIFIED_NAME"]], "dynamo_db_partition_key (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.DYNAMO_DB_PARTITION_KEY"]], "dynamo_db_read_capacity_units (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.DYNAMO_DB_READ_CAPACITY_UNITS"]], "dynamo_db_secondary_index_projection_type (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.DYNAMO_DB_SECONDARY_INDEX_PROJECTION_TYPE"]], "dynamo_db_sort_key (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.DYNAMO_DB_SORT_KEY"]], "dynamo_db_status (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.DYNAMO_DB_STATUS"]], "dynamo_db_write_capacity_units (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.DYNAMO_DB_WRITE_CAPACITY_UNITS"]], "dynamodbsecondaryindex (class in pyatlan.model.assets)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex"]], "external_location (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.EXTERNAL_LOCATION"]], "external_location_format (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.EXTERNAL_LOCATION_FORMAT"]], "external_location_region (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.EXTERNAL_LOCATION_REGION"]], "is_partitioned (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.IS_PARTITIONED"]], "is_profiled (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.IS_PROFILED"]], "is_query_preview (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.IS_QUERY_PREVIEW"]], "is_sharded (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.IS_SHARDED"]], "is_temporary (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.IS_TEMPORARY"]], "last_profiled_at (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.LAST_PROFILED_AT"]], "no_sql_schema_definition (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.NO_SQL_SCHEMA_DEFINITION"]], "partition_count (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.PARTITION_COUNT"]], "partition_list (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.PARTITION_LIST"]], "partition_strategy (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.PARTITION_STRATEGY"]], "query_count (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.QUERY_COUNT"]], "query_count_updated_at (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.QUERY_COUNT_UPDATED_AT"]], "query_preview_config (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.QUERY_PREVIEW_CONFIG"]], "query_user_count (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.QUERY_USER_COUNT"]], "query_user_map (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.QUERY_USER_MAP"]], "row_count (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.ROW_COUNT"]], "schema_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.SCHEMA_NAME"]], "schema_qualified_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.SCHEMA_QUALIFIED_NAME"]], "size_bytes (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.SIZE_BYTES"]], "table_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.TABLE_NAME"]], "table_qualified_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.TABLE_QUALIFIED_NAME"]], "view_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.VIEW_NAME"]], "view_qualified_name (pyatlan.model.assets.dynamodbsecondaryindex attribute)": [[83, "pyatlan.model.assets.DynamoDBSecondaryIndex.VIEW_QUALIFIED_NAME"]], "alias (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.ALIAS"]], "calculation_view_name (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.CALCULATION_VIEW_NAME"]], "calculation_view_qualified_name (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.CALCULATION_VIEW_QUALIFIED_NAME"]], "column_count (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.COLUMN_COUNT"]], "database_name (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.DATABASE_NAME"]], "database_qualified_name (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.DATABASE_QUALIFIED_NAME"]], "dynamo_db_global_secondary_indexes (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_GLOBAL_SECONDARY_INDEXES"]], "dynamo_db_local_secondary_indexes (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_LOCAL_SECONDARY_INDEXES"]], "dynamo_db_partition_key (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_PARTITION_KEY"]], "dynamo_db_read_capacity_units (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_READ_CAPACITY_UNITS"]], "dynamo_db_sort_key (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_SORT_KEY"]], "dynamo_db_status (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_STATUS"]], "dynamo_db_table_gsi_count (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_TABLE_GSI_COUNT"]], "dynamo_db_table_lsi_count (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_TABLE_LSI_COUNT"]], "dynamo_db_write_capacity_units (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.DYNAMO_DB_WRITE_CAPACITY_UNITS"]], "dynamodbtable (class in pyatlan.model.assets)": [[84, "pyatlan.model.assets.DynamoDBTable"]], "external_location (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.EXTERNAL_LOCATION"]], "external_location_format (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.EXTERNAL_LOCATION_FORMAT"]], "external_location_region (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.EXTERNAL_LOCATION_REGION"]], "is_partitioned (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.IS_PARTITIONED"]], "is_profiled (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.IS_PROFILED"]], "is_query_preview (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.IS_QUERY_PREVIEW"]], "is_sharded (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.IS_SHARDED"]], "is_temporary (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.IS_TEMPORARY"]], "last_profiled_at (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.LAST_PROFILED_AT"]], "no_sql_schema_definition (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.NO_SQL_SCHEMA_DEFINITION"]], "partition_count (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.PARTITION_COUNT"]], "partition_list (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.PARTITION_LIST"]], "partition_strategy (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.PARTITION_STRATEGY"]], "query_count (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.QUERY_COUNT"]], "query_count_updated_at (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.QUERY_COUNT_UPDATED_AT"]], "query_preview_config (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.QUERY_PREVIEW_CONFIG"]], "query_user_count (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.QUERY_USER_COUNT"]], "query_user_map (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.QUERY_USER_MAP"]], "row_count (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.ROW_COUNT"]], "schema_name (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.SCHEMA_NAME"]], "schema_qualified_name (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.SCHEMA_QUALIFIED_NAME"]], "size_bytes (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.SIZE_BYTES"]], "table_name (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.TABLE_NAME"]], "table_qualified_name (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.TABLE_QUALIFIED_NAME"]], "view_name (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.VIEW_NAME"]], "view_qualified_name (pyatlan.model.assets.dynamodbtable attribute)": [[84, "pyatlan.model.assets.DynamoDBTable.VIEW_QUALIFIED_NAME"]], "eventstore (class in pyatlan.model.assets)": [[85, "pyatlan.model.assets.EventStore"]], "file_assets (pyatlan.model.assets.file attribute)": [[86, "pyatlan.model.assets.File.FILE_ASSETS"]], "file_path (pyatlan.model.assets.file attribute)": [[86, "pyatlan.model.assets.File.FILE_PATH"]], "file_type (pyatlan.model.assets.file attribute)": [[86, "pyatlan.model.assets.File.FILE_TYPE"]], "file (class in pyatlan.model.assets)": [[86, "pyatlan.model.assets.File"]], "collection_qualified_name (pyatlan.model.assets.folder attribute)": [[87, "pyatlan.model.assets.Folder.COLLECTION_QUALIFIED_NAME"]], "folder (class in pyatlan.model.assets)": [[87, "pyatlan.model.assets.Folder"]], "parent (pyatlan.model.assets.folder attribute)": [[87, "pyatlan.model.assets.Folder.PARENT"]], "parent_qualified_name (pyatlan.model.assets.folder attribute)": [[87, "pyatlan.model.assets.Folder.PARENT_QUALIFIED_NAME"]], "function_arguments (pyatlan.model.assets.function attribute)": [[88, "pyatlan.model.assets.Function.FUNCTION_ARGUMENTS"]], "function_definition (pyatlan.model.assets.function attribute)": [[88, "pyatlan.model.assets.Function.FUNCTION_DEFINITION"]], "function_is_external (pyatlan.model.assets.function attribute)": [[88, "pyatlan.model.assets.Function.FUNCTION_IS_EXTERNAL"]], "function_is_memoizable (pyatlan.model.assets.function attribute)": [[88, "pyatlan.model.assets.Function.FUNCTION_IS_MEMOIZABLE"]], "function_is_secure (pyatlan.model.assets.function attribute)": [[88, "pyatlan.model.assets.Function.FUNCTION_IS_SECURE"]], "function_language (pyatlan.model.assets.function attribute)": [[88, "pyatlan.model.assets.Function.FUNCTION_LANGUAGE"]], "function_return_type (pyatlan.model.assets.function attribute)": [[88, "pyatlan.model.assets.Function.FUNCTION_RETURN_TYPE"]], "function_schema (pyatlan.model.assets.function attribute)": [[88, "pyatlan.model.assets.Function.FUNCTION_SCHEMA"]], "function_type (pyatlan.model.assets.function attribute)": [[88, "pyatlan.model.assets.Function.FUNCTION_TYPE"]], "function (class in pyatlan.model.assets)": [[88, "pyatlan.model.assets.Function"]], "gcs (class in pyatlan.model.assets)": [[89, "pyatlan.model.assets.GCS"]], "gcs_access_control (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.GCS_ACCESS_CONTROL"]], "gcs_encryption_type (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.GCS_ENCRYPTION_TYPE"]], "gcs_e_tag (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.GCS_E_TAG"]], "gcs_meta_generation_id (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.GCS_META_GENERATION_ID"]], "gcs_requester_pays (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.GCS_REQUESTER_PAYS"]], "gcs_storage_class (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.GCS_STORAGE_CLASS"]], "google_labels (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.GOOGLE_LABELS"]], "google_location (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.GOOGLE_LOCATION"]], "google_location_type (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.GOOGLE_LOCATION_TYPE"]], "google_project_id (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.GOOGLE_PROJECT_ID"]], "google_project_name (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.GOOGLE_PROJECT_NAME"]], "google_project_number (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.GOOGLE_PROJECT_NUMBER"]], "google_service (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.GOOGLE_SERVICE"]], "google_tags (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.GOOGLE_TAGS"]], "input_to_airflow_tasks (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.INPUT_TO_AIRFLOW_TASKS"]], "input_to_processes (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.INPUT_TO_PROCESSES"]], "input_to_spark_jobs (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.INPUT_TO_SPARK_JOBS"]], "output_from_airflow_tasks (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.OUTPUT_FROM_AIRFLOW_TASKS"]], "output_from_processes (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.OUTPUT_FROM_PROCESSES"]], "output_from_spark_jobs (pyatlan.model.assets.gcs attribute)": [[89, "pyatlan.model.assets.GCS.OUTPUT_FROM_SPARK_JOBS"]], "gcsbucket (class in pyatlan.model.assets)": [[90, "pyatlan.model.assets.GCSBucket"]], "gcs_bucket_lifecycle_rules (pyatlan.model.assets.gcsbucket attribute)": [[90, "pyatlan.model.assets.GCSBucket.GCS_BUCKET_LIFECYCLE_RULES"]], "gcs_bucket_retention_effective_time (pyatlan.model.assets.gcsbucket attribute)": [[90, "pyatlan.model.assets.GCSBucket.GCS_BUCKET_RETENTION_EFFECTIVE_TIME"]], "gcs_bucket_retention_locked (pyatlan.model.assets.gcsbucket attribute)": [[90, "pyatlan.model.assets.GCSBucket.GCS_BUCKET_RETENTION_LOCKED"]], "gcs_bucket_retention_period (pyatlan.model.assets.gcsbucket attribute)": [[90, "pyatlan.model.assets.GCSBucket.GCS_BUCKET_RETENTION_PERIOD"]], "gcs_bucket_retention_policy (pyatlan.model.assets.gcsbucket attribute)": [[90, "pyatlan.model.assets.GCSBucket.GCS_BUCKET_RETENTION_POLICY"]], "gcs_bucket_versioning_enabled (pyatlan.model.assets.gcsbucket attribute)": [[90, "pyatlan.model.assets.GCSBucket.GCS_BUCKET_VERSIONING_ENABLED"]], "gcs_objects (pyatlan.model.assets.gcsbucket attribute)": [[90, "pyatlan.model.assets.GCSBucket.GCS_OBJECTS"]], "gcs_object_count (pyatlan.model.assets.gcsbucket attribute)": [[90, "pyatlan.model.assets.GCSBucket.GCS_OBJECT_COUNT"]], "gcsobject (class in pyatlan.model.assets)": [[91, "pyatlan.model.assets.GCSObject"]], "gcs_bucket (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_BUCKET"]], "gcs_bucket_name (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_BUCKET_NAME"]], "gcs_bucket_qualified_name (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_BUCKET_QUALIFIED_NAME"]], "gcs_object_content_disposition (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_OBJECT_CONTENT_DISPOSITION"]], "gcs_object_content_encoding (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_OBJECT_CONTENT_ENCODING"]], "gcs_object_content_language (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_OBJECT_CONTENT_LANGUAGE"]], "gcs_object_content_type (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_OBJECT_CONTENT_TYPE"]], "gcs_object_crc32c_hash (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_OBJECT_CRC32C_HASH"]], "gcs_object_data_last_modified_time (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_OBJECT_DATA_LAST_MODIFIED_TIME"]], "gcs_object_generation_id (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_OBJECT_GENERATION_ID"]], "gcs_object_hold_type (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_OBJECT_HOLD_TYPE"]], "gcs_object_key (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_OBJECT_KEY"]], "gcs_object_md5hash (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_OBJECT_MD5HASH"]], "gcs_object_media_link (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_OBJECT_MEDIA_LINK"]], "gcs_object_retention_expiration_date (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_OBJECT_RETENTION_EXPIRATION_DATE"]], "gcs_object_size (pyatlan.model.assets.gcsobject attribute)": [[91, "pyatlan.model.assets.GCSObject.GCS_OBJECT_SIZE"]], "google_labels (pyatlan.model.assets.google attribute)": [[92, "pyatlan.model.assets.Google.GOOGLE_LABELS"]], "google_location (pyatlan.model.assets.google attribute)": [[92, "pyatlan.model.assets.Google.GOOGLE_LOCATION"]], "google_location_type (pyatlan.model.assets.google attribute)": [[92, "pyatlan.model.assets.Google.GOOGLE_LOCATION_TYPE"]], "google_project_id (pyatlan.model.assets.google attribute)": [[92, "pyatlan.model.assets.Google.GOOGLE_PROJECT_ID"]], "google_project_name (pyatlan.model.assets.google attribute)": [[92, "pyatlan.model.assets.Google.GOOGLE_PROJECT_NAME"]], "google_project_number (pyatlan.model.assets.google attribute)": [[92, "pyatlan.model.assets.Google.GOOGLE_PROJECT_NUMBER"]], "google_service (pyatlan.model.assets.google attribute)": [[92, "pyatlan.model.assets.Google.GOOGLE_SERVICE"]], "google_tags (pyatlan.model.assets.google attribute)": [[92, "pyatlan.model.assets.Google.GOOGLE_TAGS"]], "google (class in pyatlan.model.assets)": [[92, "pyatlan.model.assets.Google"]], "infrastructure (class in pyatlan.model.assets)": [[93, "pyatlan.model.assets.Infrastructure"]], "insight (class in pyatlan.model.assets)": [[94, "pyatlan.model.assets.Insight"]], "kafka (class in pyatlan.model.assets)": [[95, "pyatlan.model.assets.Kafka"]], "kafka_consumer_group_member_count (pyatlan.model.assets.kafkaconsumergroup attribute)": [[96, "pyatlan.model.assets.KafkaConsumerGroup.KAFKA_CONSUMER_GROUP_MEMBER_COUNT"]], "kafka_consumer_group_topic_consumption_properties (pyatlan.model.assets.kafkaconsumergroup attribute)": [[96, "pyatlan.model.assets.KafkaConsumerGroup.KAFKA_CONSUMER_GROUP_TOPIC_CONSUMPTION_PROPERTIES"]], "kafka_topics (pyatlan.model.assets.kafkaconsumergroup attribute)": [[96, "pyatlan.model.assets.KafkaConsumerGroup.KAFKA_TOPICS"]], "kafka_topic_names (pyatlan.model.assets.kafkaconsumergroup attribute)": [[96, "pyatlan.model.assets.KafkaConsumerGroup.KAFKA_TOPIC_NAMES"]], "kafka_topic_qualified_names (pyatlan.model.assets.kafkaconsumergroup attribute)": [[96, "pyatlan.model.assets.KafkaConsumerGroup.KAFKA_TOPIC_QUALIFIED_NAMES"]], "kafkaconsumergroup (class in pyatlan.model.assets)": [[96, "pyatlan.model.assets.KafkaConsumerGroup"]], "kafka_consumer_groups (pyatlan.model.assets.kafkatopic attribute)": [[97, "pyatlan.model.assets.KafkaTopic.KAFKA_CONSUMER_GROUPS"]], "kafka_topic_cleanup_policy (pyatlan.model.assets.kafkatopic attribute)": [[97, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_CLEANUP_POLICY"]], "kafka_topic_compression_type (pyatlan.model.assets.kafkatopic attribute)": [[97, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_COMPRESSION_TYPE"]], "kafka_topic_is_internal (pyatlan.model.assets.kafkatopic attribute)": [[97, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_IS_INTERNAL"]], "kafka_topic_partitions_count (pyatlan.model.assets.kafkatopic attribute)": [[97, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_PARTITIONS_COUNT"]], "kafka_topic_record_count (pyatlan.model.assets.kafkatopic attribute)": [[97, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_RECORD_COUNT"]], "kafka_topic_replication_factor (pyatlan.model.assets.kafkatopic attribute)": [[97, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_REPLICATION_FACTOR"]], "kafka_topic_retention_time_in_ms (pyatlan.model.assets.kafkatopic attribute)": [[97, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_RETENTION_TIME_IN_MS"]], "kafka_topic_segment_bytes (pyatlan.model.assets.kafkatopic attribute)": [[97, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_SEGMENT_BYTES"]], "kafka_topic_size_in_bytes (pyatlan.model.assets.kafkatopic attribute)": [[97, "pyatlan.model.assets.KafkaTopic.KAFKA_TOPIC_SIZE_IN_BYTES"]], "kafkatopic (class in pyatlan.model.assets)": [[97, "pyatlan.model.assets.KafkaTopic"]], "asset (pyatlan.model.assets.link attribute)": [[98, "pyatlan.model.assets.Link.ASSET"]], "icon (pyatlan.model.assets.link attribute)": [[98, "pyatlan.model.assets.Link.ICON"]], "icon_type (pyatlan.model.assets.link attribute)": [[98, "pyatlan.model.assets.Link.ICON_TYPE"]], "link (class in pyatlan.model.assets)": [[98, "pyatlan.model.assets.Link"]], "looker (class in pyatlan.model.assets)": [[99, "pyatlan.model.assets.Looker"]], "folder (pyatlan.model.assets.lookerdashboard attribute)": [[100, "pyatlan.model.assets.LookerDashboard.FOLDER"]], "folder_name (pyatlan.model.assets.lookerdashboard attribute)": [[100, "pyatlan.model.assets.LookerDashboard.FOLDER_NAME"]], "looks (pyatlan.model.assets.lookerdashboard attribute)": [[100, "pyatlan.model.assets.LookerDashboard.LOOKS"]], "lookerdashboard (class in pyatlan.model.assets)": [[100, "pyatlan.model.assets.LookerDashboard"]], "sourcelast_updater_id (pyatlan.model.assets.lookerdashboard attribute)": [[100, "pyatlan.model.assets.LookerDashboard.SOURCELAST_UPDATER_ID"]], "source_last_accessed_at (pyatlan.model.assets.lookerdashboard attribute)": [[100, "pyatlan.model.assets.LookerDashboard.SOURCE_LAST_ACCESSED_AT"]], "source_last_viewed_at (pyatlan.model.assets.lookerdashboard attribute)": [[100, "pyatlan.model.assets.LookerDashboard.SOURCE_LAST_VIEWED_AT"]], "source_metadata_id (pyatlan.model.assets.lookerdashboard attribute)": [[100, "pyatlan.model.assets.LookerDashboard.SOURCE_METADATA_ID"]], "source_user_id (pyatlan.model.assets.lookerdashboard attribute)": [[100, "pyatlan.model.assets.LookerDashboard.SOURCE_USER_ID"]], "source_view_count (pyatlan.model.assets.lookerdashboard attribute)": [[100, "pyatlan.model.assets.LookerDashboard.SOURCE_VIEW_COUNT"]], "tiles (pyatlan.model.assets.lookerdashboard attribute)": [[100, "pyatlan.model.assets.LookerDashboard.TILES"]], "fields (pyatlan.model.assets.lookerexplore attribute)": [[101, "pyatlan.model.assets.LookerExplore.FIELDS"]], "lookerexplore (class in pyatlan.model.assets)": [[101, "pyatlan.model.assets.LookerExplore"]], "model (pyatlan.model.assets.lookerexplore attribute)": [[101, "pyatlan.model.assets.LookerExplore.MODEL"]], "model_name (pyatlan.model.assets.lookerexplore attribute)": [[101, "pyatlan.model.assets.LookerExplore.MODEL_NAME"]], "project (pyatlan.model.assets.lookerexplore attribute)": [[101, "pyatlan.model.assets.LookerExplore.PROJECT"]], "project_name (pyatlan.model.assets.lookerexplore attribute)": [[101, "pyatlan.model.assets.LookerExplore.PROJECT_NAME"]], "source_connection_name (pyatlan.model.assets.lookerexplore attribute)": [[101, "pyatlan.model.assets.LookerExplore.SOURCE_CONNECTION_NAME"]], "sql_table_name (pyatlan.model.assets.lookerexplore attribute)": [[101, "pyatlan.model.assets.LookerExplore.SQL_TABLE_NAME"]], "view_name (pyatlan.model.assets.lookerexplore attribute)": [[101, "pyatlan.model.assets.LookerExplore.VIEW_NAME"]], "explore (pyatlan.model.assets.lookerfield attribute)": [[102, "pyatlan.model.assets.LookerField.EXPLORE"]], "looker_explore_qualified_name (pyatlan.model.assets.lookerfield attribute)": [[102, "pyatlan.model.assets.LookerField.LOOKER_EXPLORE_QUALIFIED_NAME"]], "looker_field_data_type (pyatlan.model.assets.lookerfield attribute)": [[102, "pyatlan.model.assets.LookerField.LOOKER_FIELD_DATA_TYPE"]], "looker_times_used (pyatlan.model.assets.lookerfield attribute)": [[102, "pyatlan.model.assets.LookerField.LOOKER_TIMES_USED"]], "looker_view_qualified_name (pyatlan.model.assets.lookerfield attribute)": [[102, "pyatlan.model.assets.LookerField.LOOKER_VIEW_QUALIFIED_NAME"]], "lookerfield (class in pyatlan.model.assets)": [[102, "pyatlan.model.assets.LookerField"]], "model (pyatlan.model.assets.lookerfield attribute)": [[102, "pyatlan.model.assets.LookerField.MODEL"]], "model_name (pyatlan.model.assets.lookerfield attribute)": [[102, "pyatlan.model.assets.LookerField.MODEL_NAME"]], "project (pyatlan.model.assets.lookerfield attribute)": [[102, "pyatlan.model.assets.LookerField.PROJECT"]], "project_name (pyatlan.model.assets.lookerfield attribute)": [[102, "pyatlan.model.assets.LookerField.PROJECT_NAME"]], "source_definition (pyatlan.model.assets.lookerfield attribute)": [[102, "pyatlan.model.assets.LookerField.SOURCE_DEFINITION"]], "view (pyatlan.model.assets.lookerfield attribute)": [[102, "pyatlan.model.assets.LookerField.VIEW"]], "dashboards (pyatlan.model.assets.lookerfolder attribute)": [[103, "pyatlan.model.assets.LookerFolder.DASHBOARDS"]], "looker_parent_folder (pyatlan.model.assets.lookerfolder attribute)": [[103, "pyatlan.model.assets.LookerFolder.LOOKER_PARENT_FOLDER"]], "looker_sub_folders (pyatlan.model.assets.lookerfolder attribute)": [[103, "pyatlan.model.assets.LookerFolder.LOOKER_SUB_FOLDERS"]], "looks (pyatlan.model.assets.lookerfolder attribute)": [[103, "pyatlan.model.assets.LookerFolder.LOOKS"]], "lookerfolder (class in pyatlan.model.assets)": [[103, "pyatlan.model.assets.LookerFolder"]], "source_child_count (pyatlan.model.assets.lookerfolder attribute)": [[103, "pyatlan.model.assets.LookerFolder.SOURCE_CHILD_COUNT"]], "source_content_metadata_id (pyatlan.model.assets.lookerfolder attribute)": [[103, "pyatlan.model.assets.LookerFolder.SOURCE_CONTENT_METADATA_ID"]], "source_creator_id (pyatlan.model.assets.lookerfolder attribute)": [[103, "pyatlan.model.assets.LookerFolder.SOURCE_CREATOR_ID"]], "source_parent_id (pyatlan.model.assets.lookerfolder attribute)": [[103, "pyatlan.model.assets.LookerFolder.SOURCE_PARENT_ID"]], "dashboard (pyatlan.model.assets.lookerlook attribute)": [[104, "pyatlan.model.assets.LookerLook.DASHBOARD"]], "folder (pyatlan.model.assets.lookerlook attribute)": [[104, "pyatlan.model.assets.LookerLook.FOLDER"]], "folder_name (pyatlan.model.assets.lookerlook attribute)": [[104, "pyatlan.model.assets.LookerLook.FOLDER_NAME"]], "lookerlook (class in pyatlan.model.assets)": [[104, "pyatlan.model.assets.LookerLook"]], "model (pyatlan.model.assets.lookerlook attribute)": [[104, "pyatlan.model.assets.LookerLook.MODEL"]], "model_name (pyatlan.model.assets.lookerlook attribute)": [[104, "pyatlan.model.assets.LookerLook.MODEL_NAME"]], "query (pyatlan.model.assets.lookerlook attribute)": [[104, "pyatlan.model.assets.LookerLook.QUERY"]], "sourcelast_updater_id (pyatlan.model.assets.lookerlook attribute)": [[104, "pyatlan.model.assets.LookerLook.SOURCELAST_UPDATER_ID"]], "source_content_metadata_id (pyatlan.model.assets.lookerlook attribute)": [[104, "pyatlan.model.assets.LookerLook.SOURCE_CONTENT_METADATA_ID"]], "source_last_accessed_at (pyatlan.model.assets.lookerlook attribute)": [[104, "pyatlan.model.assets.LookerLook.SOURCE_LAST_ACCESSED_AT"]], "source_last_viewed_at (pyatlan.model.assets.lookerlook attribute)": [[104, "pyatlan.model.assets.LookerLook.SOURCE_LAST_VIEWED_AT"]], "source_query_id (pyatlan.model.assets.lookerlook attribute)": [[104, "pyatlan.model.assets.LookerLook.SOURCE_QUERY_ID"]], "source_user_id (pyatlan.model.assets.lookerlook attribute)": [[104, "pyatlan.model.assets.LookerLook.SOURCE_USER_ID"]], "source_view_count (pyatlan.model.assets.lookerlook attribute)": [[104, "pyatlan.model.assets.LookerLook.SOURCE_VIEW_COUNT"]], "tile (pyatlan.model.assets.lookerlook attribute)": [[104, "pyatlan.model.assets.LookerLook.TILE"]], "explores (pyatlan.model.assets.lookermodel attribute)": [[105, "pyatlan.model.assets.LookerModel.EXPLORES"]], "fields (pyatlan.model.assets.lookermodel attribute)": [[105, "pyatlan.model.assets.LookerModel.FIELDS"]], "look (pyatlan.model.assets.lookermodel attribute)": [[105, "pyatlan.model.assets.LookerModel.LOOK"]], "lookermodel (class in pyatlan.model.assets)": [[105, "pyatlan.model.assets.LookerModel"]], "project (pyatlan.model.assets.lookermodel attribute)": [[105, "pyatlan.model.assets.LookerModel.PROJECT"]], "project_name (pyatlan.model.assets.lookermodel attribute)": [[105, "pyatlan.model.assets.LookerModel.PROJECT_NAME"]], "queries (pyatlan.model.assets.lookermodel attribute)": [[105, "pyatlan.model.assets.LookerModel.QUERIES"]], "explores (pyatlan.model.assets.lookerproject attribute)": [[106, "pyatlan.model.assets.LookerProject.EXPLORES"]], "fields (pyatlan.model.assets.lookerproject attribute)": [[106, "pyatlan.model.assets.LookerProject.FIELDS"]], "looker_child_projects (pyatlan.model.assets.lookerproject attribute)": [[106, "pyatlan.model.assets.LookerProject.LOOKER_CHILD_PROJECTS"]], "looker_parent_projects (pyatlan.model.assets.lookerproject attribute)": [[106, "pyatlan.model.assets.LookerProject.LOOKER_PARENT_PROJECTS"]], "lookerproject (class in pyatlan.model.assets)": [[106, "pyatlan.model.assets.LookerProject"]], "models (pyatlan.model.assets.lookerproject attribute)": [[106, "pyatlan.model.assets.LookerProject.MODELS"]], "views (pyatlan.model.assets.lookerproject attribute)": [[106, "pyatlan.model.assets.LookerProject.VIEWS"]], "fields (pyatlan.model.assets.lookerquery attribute)": [[107, "pyatlan.model.assets.LookerQuery.FIELDS"]], "looks (pyatlan.model.assets.lookerquery attribute)": [[107, "pyatlan.model.assets.LookerQuery.LOOKS"]], "lookerquery (class in pyatlan.model.assets)": [[107, "pyatlan.model.assets.LookerQuery"]], "model (pyatlan.model.assets.lookerquery attribute)": [[107, "pyatlan.model.assets.LookerQuery.MODEL"]], "source_definition (pyatlan.model.assets.lookerquery attribute)": [[107, "pyatlan.model.assets.LookerQuery.SOURCE_DEFINITION"]], "source_definition_database (pyatlan.model.assets.lookerquery attribute)": [[107, "pyatlan.model.assets.LookerQuery.SOURCE_DEFINITION_DATABASE"]], "source_definition_schema (pyatlan.model.assets.lookerquery attribute)": [[107, "pyatlan.model.assets.LookerQuery.SOURCE_DEFINITION_SCHEMA"]], "tiles (pyatlan.model.assets.lookerquery attribute)": [[107, "pyatlan.model.assets.LookerQuery.TILES"]], "dashboard (pyatlan.model.assets.lookertile attribute)": [[108, "pyatlan.model.assets.LookerTile.DASHBOARD"]], "look (pyatlan.model.assets.lookertile attribute)": [[108, "pyatlan.model.assets.LookerTile.LOOK"]], "lookml_link_id (pyatlan.model.assets.lookertile attribute)": [[108, "pyatlan.model.assets.LookerTile.LOOKML_LINK_ID"]], "look_id (pyatlan.model.assets.lookertile attribute)": [[108, "pyatlan.model.assets.LookerTile.LOOK_ID"]], "lookertile (class in pyatlan.model.assets)": [[108, "pyatlan.model.assets.LookerTile"]], "merge_result_id (pyatlan.model.assets.lookertile attribute)": [[108, "pyatlan.model.assets.LookerTile.MERGE_RESULT_ID"]], "note_text (pyatlan.model.assets.lookertile attribute)": [[108, "pyatlan.model.assets.LookerTile.NOTE_TEXT"]], "query (pyatlan.model.assets.lookertile attribute)": [[108, "pyatlan.model.assets.LookerTile.QUERY"]], "query_id (pyatlan.model.assets.lookertile attribute)": [[108, "pyatlan.model.assets.LookerTile.QUERY_ID"]], "result_maker_id (pyatlan.model.assets.lookertile attribute)": [[108, "pyatlan.model.assets.LookerTile.RESULT_MAKER_ID"]], "subtitle_text (pyatlan.model.assets.lookertile attribute)": [[108, "pyatlan.model.assets.LookerTile.SUBTITLE_TEXT"]], "fields (pyatlan.model.assets.lookerview attribute)": [[109, "pyatlan.model.assets.LookerView.FIELDS"]], "looker_view_file_name (pyatlan.model.assets.lookerview attribute)": [[109, "pyatlan.model.assets.LookerView.LOOKER_VIEW_FILE_NAME"]], "looker_view_file_path (pyatlan.model.assets.lookerview attribute)": [[109, "pyatlan.model.assets.LookerView.LOOKER_VIEW_FILE_PATH"]], "lookerview (class in pyatlan.model.assets)": [[109, "pyatlan.model.assets.LookerView"]], "project (pyatlan.model.assets.lookerview attribute)": [[109, "pyatlan.model.assets.LookerView.PROJECT"]], "project_name (pyatlan.model.assets.lookerview attribute)": [[109, "pyatlan.model.assets.LookerView.PROJECT_NAME"]], "alias (pyatlan.model.assets.materialisedview attribute)": [[110, "pyatlan.model.assets.MaterialisedView.ALIAS"]], "atlan_schema (pyatlan.model.assets.materialisedview attribute)": [[110, "pyatlan.model.assets.MaterialisedView.ATLAN_SCHEMA"]], "columns (pyatlan.model.assets.materialisedview attribute)": [[110, "pyatlan.model.assets.MaterialisedView.COLUMNS"]], "column_count (pyatlan.model.assets.materialisedview attribute)": [[110, "pyatlan.model.assets.MaterialisedView.COLUMN_COUNT"]], "definition (pyatlan.model.assets.materialisedview attribute)": [[110, "pyatlan.model.assets.MaterialisedView.DEFINITION"]], "is_query_preview (pyatlan.model.assets.materialisedview attribute)": [[110, "pyatlan.model.assets.MaterialisedView.IS_QUERY_PREVIEW"]], "is_temporary (pyatlan.model.assets.materialisedview attribute)": [[110, "pyatlan.model.assets.MaterialisedView.IS_TEMPORARY"]], "materialisedview (class in pyatlan.model.assets)": [[110, "pyatlan.model.assets.MaterialisedView"]], "query_preview_config (pyatlan.model.assets.materialisedview attribute)": [[110, "pyatlan.model.assets.MaterialisedView.QUERY_PREVIEW_CONFIG"]], "refresh_method (pyatlan.model.assets.materialisedview attribute)": [[110, "pyatlan.model.assets.MaterialisedView.REFRESH_METHOD"]], "refresh_mode (pyatlan.model.assets.materialisedview attribute)": [[110, "pyatlan.model.assets.MaterialisedView.REFRESH_MODE"]], "row_count (pyatlan.model.assets.materialisedview attribute)": [[110, "pyatlan.model.assets.MaterialisedView.ROW_COUNT"]], "size_bytes (pyatlan.model.assets.materialisedview attribute)": [[110, "pyatlan.model.assets.MaterialisedView.SIZE_BYTES"]], "staleness (pyatlan.model.assets.materialisedview attribute)": [[110, "pyatlan.model.assets.MaterialisedView.STALENESS"]], "stale_since_date (pyatlan.model.assets.materialisedview attribute)": [[110, "pyatlan.model.assets.MaterialisedView.STALE_SINCE_DATE"]], "matillion_version (pyatlan.model.assets.matillion attribute)": [[111, "pyatlan.model.assets.Matillion.MATILLION_VERSION"]], "matillion (class in pyatlan.model.assets)": [[111, "pyatlan.model.assets.Matillion"]], "matillion_component_id (pyatlan.model.assets.matillioncomponent attribute)": [[112, "pyatlan.model.assets.MatillionComponent.MATILLION_COMPONENT_ID"]], "matillion_component_implementation_id (pyatlan.model.assets.matillioncomponent attribute)": [[112, "pyatlan.model.assets.MatillionComponent.MATILLION_COMPONENT_IMPLEMENTATION_ID"]], "matillion_component_last_five_run_status (pyatlan.model.assets.matillioncomponent attribute)": [[112, "pyatlan.model.assets.MatillionComponent.MATILLION_COMPONENT_LAST_FIVE_RUN_STATUS"]], "matillion_component_last_run_status (pyatlan.model.assets.matillioncomponent attribute)": [[112, "pyatlan.model.assets.MatillionComponent.MATILLION_COMPONENT_LAST_RUN_STATUS"]], "matillion_component_linked_job (pyatlan.model.assets.matillioncomponent attribute)": [[112, "pyatlan.model.assets.MatillionComponent.MATILLION_COMPONENT_LINKED_JOB"]], "matillion_component_sqls (pyatlan.model.assets.matillioncomponent attribute)": [[112, "pyatlan.model.assets.MatillionComponent.MATILLION_COMPONENT_SQLS"]], "matillion_job (pyatlan.model.assets.matillioncomponent attribute)": [[112, "pyatlan.model.assets.MatillionComponent.MATILLION_JOB"]], "matillion_job_name (pyatlan.model.assets.matillioncomponent attribute)": [[112, "pyatlan.model.assets.MatillionComponent.MATILLION_JOB_NAME"]], "matillion_job_qualified_name (pyatlan.model.assets.matillioncomponent attribute)": [[112, "pyatlan.model.assets.MatillionComponent.MATILLION_JOB_QUALIFIED_NAME"]], "matillion_process (pyatlan.model.assets.matillioncomponent attribute)": [[112, "pyatlan.model.assets.MatillionComponent.MATILLION_PROCESS"]], "matillioncomponent (class in pyatlan.model.assets)": [[112, "pyatlan.model.assets.MatillionComponent"]], "matillion_projects (pyatlan.model.assets.matilliongroup attribute)": [[113, "pyatlan.model.assets.MatillionGroup.MATILLION_PROJECTS"]], "matillion_project_count (pyatlan.model.assets.matilliongroup attribute)": [[113, "pyatlan.model.assets.MatillionGroup.MATILLION_PROJECT_COUNT"]], "matilliongroup (class in pyatlan.model.assets)": [[113, "pyatlan.model.assets.MatillionGroup"]], "matillion_components (pyatlan.model.assets.matillionjob attribute)": [[114, "pyatlan.model.assets.MatillionJob.MATILLION_COMPONENTS"]], "matillion_job_component_count (pyatlan.model.assets.matillionjob attribute)": [[114, "pyatlan.model.assets.MatillionJob.MATILLION_JOB_COMPONENT_COUNT"]], "matillion_job_path (pyatlan.model.assets.matillionjob attribute)": [[114, "pyatlan.model.assets.MatillionJob.MATILLION_JOB_PATH"]], "matillion_job_schedule (pyatlan.model.assets.matillionjob attribute)": [[114, "pyatlan.model.assets.MatillionJob.MATILLION_JOB_SCHEDULE"]], "matillion_job_type (pyatlan.model.assets.matillionjob attribute)": [[114, "pyatlan.model.assets.MatillionJob.MATILLION_JOB_TYPE"]], "matillion_project (pyatlan.model.assets.matillionjob attribute)": [[114, "pyatlan.model.assets.MatillionJob.MATILLION_PROJECT"]], "matillion_project_name (pyatlan.model.assets.matillionjob attribute)": [[114, "pyatlan.model.assets.MatillionJob.MATILLION_PROJECT_NAME"]], "matillion_project_qualified_name (pyatlan.model.assets.matillionjob attribute)": [[114, "pyatlan.model.assets.MatillionJob.MATILLION_PROJECT_QUALIFIED_NAME"]], "matillionjob (class in pyatlan.model.assets)": [[114, "pyatlan.model.assets.MatillionJob"]], "matillion_environments (pyatlan.model.assets.matillionproject attribute)": [[115, "pyatlan.model.assets.MatillionProject.MATILLION_ENVIRONMENTS"]], "matillion_group (pyatlan.model.assets.matillionproject attribute)": [[115, "pyatlan.model.assets.MatillionProject.MATILLION_GROUP"]], "matillion_group_name (pyatlan.model.assets.matillionproject attribute)": [[115, "pyatlan.model.assets.MatillionProject.MATILLION_GROUP_NAME"]], "matillion_group_qualified_name (pyatlan.model.assets.matillionproject attribute)": [[115, "pyatlan.model.assets.MatillionProject.MATILLION_GROUP_QUALIFIED_NAME"]], "matillion_jobs (pyatlan.model.assets.matillionproject attribute)": [[115, "pyatlan.model.assets.MatillionProject.MATILLION_JOBS"]], "matillion_project_job_count (pyatlan.model.assets.matillionproject attribute)": [[115, "pyatlan.model.assets.MatillionProject.MATILLION_PROJECT_JOB_COUNT"]], "matillion_versions (pyatlan.model.assets.matillionproject attribute)": [[115, "pyatlan.model.assets.MatillionProject.MATILLION_VERSIONS"]], "matillionproject (class in pyatlan.model.assets)": [[115, "pyatlan.model.assets.MatillionProject"]], "mcincident (class in pyatlan.model.assets)": [[116, "pyatlan.model.assets.MCIncident"]], "mc_incident_assets (pyatlan.model.assets.mcincident attribute)": [[116, "pyatlan.model.assets.MCIncident.MC_INCIDENT_ASSETS"]], "mc_incident_id (pyatlan.model.assets.mcincident attribute)": [[116, "pyatlan.model.assets.MCIncident.MC_INCIDENT_ID"]], "mc_incident_severity (pyatlan.model.assets.mcincident attribute)": [[116, "pyatlan.model.assets.MCIncident.MC_INCIDENT_SEVERITY"]], "mc_incident_state (pyatlan.model.assets.mcincident attribute)": [[116, "pyatlan.model.assets.MCIncident.MC_INCIDENT_STATE"]], "mc_incident_sub_types (pyatlan.model.assets.mcincident attribute)": [[116, "pyatlan.model.assets.MCIncident.MC_INCIDENT_SUB_TYPES"]], "mc_incident_type (pyatlan.model.assets.mcincident attribute)": [[116, "pyatlan.model.assets.MCIncident.MC_INCIDENT_TYPE"]], "mc_incident_warehouse (pyatlan.model.assets.mcincident attribute)": [[116, "pyatlan.model.assets.MCIncident.MC_INCIDENT_WAREHOUSE"]], "mc_monitor (pyatlan.model.assets.mcincident attribute)": [[116, "pyatlan.model.assets.MCIncident.MC_MONITOR"]], "mcmonitor (class in pyatlan.model.assets)": [[117, "pyatlan.model.assets.MCMonitor"]], "mc_monitor_alert_condition (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_ALERT_CONDITION"]], "mc_monitor_assets (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_ASSETS"]], "mc_monitor_breach_rate (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_BREACH_RATE"]], "mc_monitor_id (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_ID"]], "mc_monitor_incident_count (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_INCIDENT_COUNT"]], "mc_monitor_namespace (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_NAMESPACE"]], "mc_monitor_rule_comparisons (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_COMPARISONS"]], "mc_monitor_rule_custom_sql (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_CUSTOM_SQL"]], "mc_monitor_rule_is_snoozed (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_IS_SNOOZED"]], "mc_monitor_rule_next_execution_time (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_NEXT_EXECUTION_TIME"]], "mc_monitor_rule_previous_execution_time (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_PREVIOUS_EXECUTION_TIME"]], "mc_monitor_rule_schedule_config (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_SCHEDULE_CONFIG"]], "mc_monitor_rule_schedule_config_humanized (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_SCHEDULE_CONFIG_HUMANIZED"]], "mc_monitor_rule_type (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_RULE_TYPE"]], "mc_monitor_schedule_type (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_SCHEDULE_TYPE"]], "mc_monitor_status (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_STATUS"]], "mc_monitor_type (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_TYPE"]], "mc_monitor_warehouse (pyatlan.model.assets.mcmonitor attribute)": [[117, "pyatlan.model.assets.MCMonitor.MC_MONITOR_WAREHOUSE"]], "metabase_collection_name (pyatlan.model.assets.metabase attribute)": [[118, "pyatlan.model.assets.Metabase.METABASE_COLLECTION_NAME"]], "metabase_collection_qualified_name (pyatlan.model.assets.metabase attribute)": [[118, "pyatlan.model.assets.Metabase.METABASE_COLLECTION_QUALIFIED_NAME"]], "metabase (class in pyatlan.model.assets)": [[118, "pyatlan.model.assets.Metabase"]], "metabase_color (pyatlan.model.assets.metabasecollection attribute)": [[119, "pyatlan.model.assets.MetabaseCollection.METABASE_COLOR"]], "metabase_dashboards (pyatlan.model.assets.metabasecollection attribute)": [[119, "pyatlan.model.assets.MetabaseCollection.METABASE_DASHBOARDS"]], "metabase_is_personal_collection (pyatlan.model.assets.metabasecollection attribute)": [[119, "pyatlan.model.assets.MetabaseCollection.METABASE_IS_PERSONAL_COLLECTION"]], "metabase_namespace (pyatlan.model.assets.metabasecollection attribute)": [[119, "pyatlan.model.assets.MetabaseCollection.METABASE_NAMESPACE"]], "metabase_questions (pyatlan.model.assets.metabasecollection attribute)": [[119, "pyatlan.model.assets.MetabaseCollection.METABASE_QUESTIONS"]], "metabase_slug (pyatlan.model.assets.metabasecollection attribute)": [[119, "pyatlan.model.assets.MetabaseCollection.METABASE_SLUG"]], "metabasecollection (class in pyatlan.model.assets)": [[119, "pyatlan.model.assets.MetabaseCollection"]], "metabase_collection (pyatlan.model.assets.metabasedashboard attribute)": [[120, "pyatlan.model.assets.MetabaseDashboard.METABASE_COLLECTION"]], "metabase_questions (pyatlan.model.assets.metabasedashboard attribute)": [[120, "pyatlan.model.assets.MetabaseDashboard.METABASE_QUESTIONS"]], "metabase_question_count (pyatlan.model.assets.metabasedashboard attribute)": [[120, "pyatlan.model.assets.MetabaseDashboard.METABASE_QUESTION_COUNT"]], "metabasedashboard (class in pyatlan.model.assets)": [[120, "pyatlan.model.assets.MetabaseDashboard"]], "metabase_collection (pyatlan.model.assets.metabasequestion attribute)": [[121, "pyatlan.model.assets.MetabaseQuestion.METABASE_COLLECTION"]], "metabase_dashboards (pyatlan.model.assets.metabasequestion attribute)": [[121, "pyatlan.model.assets.MetabaseQuestion.METABASE_DASHBOARDS"]], "metabase_dashboard_count (pyatlan.model.assets.metabasequestion attribute)": [[121, "pyatlan.model.assets.MetabaseQuestion.METABASE_DASHBOARD_COUNT"]], "metabase_query (pyatlan.model.assets.metabasequestion attribute)": [[121, "pyatlan.model.assets.MetabaseQuestion.METABASE_QUERY"]], "metabase_query_type (pyatlan.model.assets.metabasequestion attribute)": [[121, "pyatlan.model.assets.MetabaseQuestion.METABASE_QUERY_TYPE"]], "metabasequestion (class in pyatlan.model.assets)": [[121, "pyatlan.model.assets.MetabaseQuestion"]], "assets (pyatlan.model.assets.metric attribute)": [[122, "pyatlan.model.assets.Metric.ASSETS"]], "metric_dimension_columns (pyatlan.model.assets.metric attribute)": [[122, "pyatlan.model.assets.Metric.METRIC_DIMENSION_COLUMNS"]], "metric_filters (pyatlan.model.assets.metric attribute)": [[122, "pyatlan.model.assets.Metric.METRIC_FILTERS"]], "metric_sql (pyatlan.model.assets.metric attribute)": [[122, "pyatlan.model.assets.Metric.METRIC_SQL"]], "metric_timestamp_column (pyatlan.model.assets.metric attribute)": [[122, "pyatlan.model.assets.Metric.METRIC_TIMESTAMP_COLUMN"]], "metric_time_grains (pyatlan.model.assets.metric attribute)": [[122, "pyatlan.model.assets.Metric.METRIC_TIME_GRAINS"]], "metric_type (pyatlan.model.assets.metric attribute)": [[122, "pyatlan.model.assets.Metric.METRIC_TYPE"]], "metric (class in pyatlan.model.assets)": [[122, "pyatlan.model.assets.Metric"]], "micro_strategy_certified_at (pyatlan.model.assets.microstrategy attribute)": [[123, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_CERTIFIED_AT"]], "micro_strategy_certified_by (pyatlan.model.assets.microstrategy attribute)": [[123, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_CERTIFIED_BY"]], "micro_strategy_cube_names (pyatlan.model.assets.microstrategy attribute)": [[123, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_CUBE_NAMES"]], "micro_strategy_cube_qualified_names (pyatlan.model.assets.microstrategy attribute)": [[123, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_CUBE_QUALIFIED_NAMES"]], "micro_strategy_is_certified (pyatlan.model.assets.microstrategy attribute)": [[123, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_IS_CERTIFIED"]], "micro_strategy_location (pyatlan.model.assets.microstrategy attribute)": [[123, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_LOCATION"]], "micro_strategy_project_name (pyatlan.model.assets.microstrategy attribute)": [[123, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_PROJECT_NAME"]], "micro_strategy_project_qualified_name (pyatlan.model.assets.microstrategy attribute)": [[123, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_PROJECT_QUALIFIED_NAME"]], "micro_strategy_report_names (pyatlan.model.assets.microstrategy attribute)": [[123, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_REPORT_NAMES"]], "micro_strategy_report_qualified_names (pyatlan.model.assets.microstrategy attribute)": [[123, "pyatlan.model.assets.MicroStrategy.MICRO_STRATEGY_REPORT_QUALIFIED_NAMES"]], "microstrategy (class in pyatlan.model.assets)": [[123, "pyatlan.model.assets.MicroStrategy"]], "micro_strategy_attribute_forms (pyatlan.model.assets.microstrategyattribute attribute)": [[124, "pyatlan.model.assets.MicroStrategyAttribute.MICRO_STRATEGY_ATTRIBUTE_FORMS"]], "micro_strategy_cubes (pyatlan.model.assets.microstrategyattribute attribute)": [[124, "pyatlan.model.assets.MicroStrategyAttribute.MICRO_STRATEGY_CUBES"]], "micro_strategy_metrics (pyatlan.model.assets.microstrategyattribute attribute)": [[124, "pyatlan.model.assets.MicroStrategyAttribute.MICRO_STRATEGY_METRICS"]], "micro_strategy_project (pyatlan.model.assets.microstrategyattribute attribute)": [[124, "pyatlan.model.assets.MicroStrategyAttribute.MICRO_STRATEGY_PROJECT"]], "micro_strategy_reports (pyatlan.model.assets.microstrategyattribute attribute)": [[124, "pyatlan.model.assets.MicroStrategyAttribute.MICRO_STRATEGY_REPORTS"]], "microstrategyattribute (class in pyatlan.model.assets)": [[124, "pyatlan.model.assets.MicroStrategyAttribute"]], "micro_strategy_attributes (pyatlan.model.assets.microstrategycube attribute)": [[125, "pyatlan.model.assets.MicroStrategyCube.MICRO_STRATEGY_ATTRIBUTES"]], "micro_strategy_cube_query (pyatlan.model.assets.microstrategycube attribute)": [[125, "pyatlan.model.assets.MicroStrategyCube.MICRO_STRATEGY_CUBE_QUERY"]], "micro_strategy_cube_type (pyatlan.model.assets.microstrategycube attribute)": [[125, "pyatlan.model.assets.MicroStrategyCube.MICRO_STRATEGY_CUBE_TYPE"]], "micro_strategy_metrics (pyatlan.model.assets.microstrategycube attribute)": [[125, "pyatlan.model.assets.MicroStrategyCube.MICRO_STRATEGY_METRICS"]], "micro_strategy_project (pyatlan.model.assets.microstrategycube attribute)": [[125, "pyatlan.model.assets.MicroStrategyCube.MICRO_STRATEGY_PROJECT"]], "microstrategycube (class in pyatlan.model.assets)": [[125, "pyatlan.model.assets.MicroStrategyCube"]], "micro_strategy_project (pyatlan.model.assets.microstrategydocument attribute)": [[126, "pyatlan.model.assets.MicroStrategyDocument.MICRO_STRATEGY_PROJECT"]], "microstrategydocument (class in pyatlan.model.assets)": [[126, "pyatlan.model.assets.MicroStrategyDocument"]], "micro_strategy_dossier_chapter_names (pyatlan.model.assets.microstrategydossier attribute)": [[127, "pyatlan.model.assets.MicroStrategyDossier.MICRO_STRATEGY_DOSSIER_CHAPTER_NAMES"]], "micro_strategy_project (pyatlan.model.assets.microstrategydossier attribute)": [[127, "pyatlan.model.assets.MicroStrategyDossier.MICRO_STRATEGY_PROJECT"]], "micro_strategy_visualizations (pyatlan.model.assets.microstrategydossier attribute)": [[127, "pyatlan.model.assets.MicroStrategyDossier.MICRO_STRATEGY_VISUALIZATIONS"]], "microstrategydossier (class in pyatlan.model.assets)": [[127, "pyatlan.model.assets.MicroStrategyDossier"]], "micro_strategy_fact_expressions (pyatlan.model.assets.microstrategyfact attribute)": [[128, "pyatlan.model.assets.MicroStrategyFact.MICRO_STRATEGY_FACT_EXPRESSIONS"]], "micro_strategy_metrics (pyatlan.model.assets.microstrategyfact attribute)": [[128, "pyatlan.model.assets.MicroStrategyFact.MICRO_STRATEGY_METRICS"]], "micro_strategy_project (pyatlan.model.assets.microstrategyfact attribute)": [[128, "pyatlan.model.assets.MicroStrategyFact.MICRO_STRATEGY_PROJECT"]], "microstrategyfact (class in pyatlan.model.assets)": [[128, "pyatlan.model.assets.MicroStrategyFact"]], "micro_strategy_attributes (pyatlan.model.assets.microstrategymetric attribute)": [[129, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_ATTRIBUTES"]], "micro_strategy_attribute_names (pyatlan.model.assets.microstrategymetric attribute)": [[129, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_ATTRIBUTE_NAMES"]], "micro_strategy_attribute_qualified_names (pyatlan.model.assets.microstrategymetric attribute)": [[129, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_ATTRIBUTE_QUALIFIED_NAMES"]], "micro_strategy_cubes (pyatlan.model.assets.microstrategymetric attribute)": [[129, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_CUBES"]], "micro_strategy_facts (pyatlan.model.assets.microstrategymetric attribute)": [[129, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_FACTS"]], "micro_strategy_fact_names (pyatlan.model.assets.microstrategymetric attribute)": [[129, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_FACT_NAMES"]], "micro_strategy_fact_qualified_names (pyatlan.model.assets.microstrategymetric attribute)": [[129, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_FACT_QUALIFIED_NAMES"]], "micro_strategy_metric_children (pyatlan.model.assets.microstrategymetric attribute)": [[129, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_METRIC_CHILDREN"]], "micro_strategy_metric_expression (pyatlan.model.assets.microstrategymetric attribute)": [[129, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_METRIC_EXPRESSION"]], "micro_strategy_metric_parents (pyatlan.model.assets.microstrategymetric attribute)": [[129, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_METRIC_PARENTS"]], "micro_strategy_metric_parent_names (pyatlan.model.assets.microstrategymetric attribute)": [[129, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_METRIC_PARENT_NAMES"]], "micro_strategy_metric_parent_qualified_names (pyatlan.model.assets.microstrategymetric attribute)": [[129, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_METRIC_PARENT_QUALIFIED_NAMES"]], "micro_strategy_project (pyatlan.model.assets.microstrategymetric attribute)": [[129, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_PROJECT"]], "micro_strategy_reports (pyatlan.model.assets.microstrategymetric attribute)": [[129, "pyatlan.model.assets.MicroStrategyMetric.MICRO_STRATEGY_REPORTS"]], "microstrategymetric (class in pyatlan.model.assets)": [[129, "pyatlan.model.assets.MicroStrategyMetric"]], "micro_strategy_attributes (pyatlan.model.assets.microstrategyproject attribute)": [[130, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_ATTRIBUTES"]], "micro_strategy_cubes (pyatlan.model.assets.microstrategyproject attribute)": [[130, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_CUBES"]], "micro_strategy_documents (pyatlan.model.assets.microstrategyproject attribute)": [[130, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_DOCUMENTS"]], "micro_strategy_dossiers (pyatlan.model.assets.microstrategyproject attribute)": [[130, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_DOSSIERS"]], "micro_strategy_facts (pyatlan.model.assets.microstrategyproject attribute)": [[130, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_FACTS"]], "micro_strategy_metrics (pyatlan.model.assets.microstrategyproject attribute)": [[130, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_METRICS"]], "micro_strategy_reports (pyatlan.model.assets.microstrategyproject attribute)": [[130, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_REPORTS"]], "micro_strategy_visualizations (pyatlan.model.assets.microstrategyproject attribute)": [[130, "pyatlan.model.assets.MicroStrategyProject.MICRO_STRATEGY_VISUALIZATIONS"]], "microstrategyproject (class in pyatlan.model.assets)": [[130, "pyatlan.model.assets.MicroStrategyProject"]], "micro_strategy_attributes (pyatlan.model.assets.microstrategyreport attribute)": [[131, "pyatlan.model.assets.MicroStrategyReport.MICRO_STRATEGY_ATTRIBUTES"]], "micro_strategy_metrics (pyatlan.model.assets.microstrategyreport attribute)": [[131, "pyatlan.model.assets.MicroStrategyReport.MICRO_STRATEGY_METRICS"]], "micro_strategy_project (pyatlan.model.assets.microstrategyreport attribute)": [[131, "pyatlan.model.assets.MicroStrategyReport.MICRO_STRATEGY_PROJECT"]], "micro_strategy_report_type (pyatlan.model.assets.microstrategyreport attribute)": [[131, "pyatlan.model.assets.MicroStrategyReport.MICRO_STRATEGY_REPORT_TYPE"]], "microstrategyreport (class in pyatlan.model.assets)": [[131, "pyatlan.model.assets.MicroStrategyReport"]], "micro_strategy_dossier (pyatlan.model.assets.microstrategyvisualization attribute)": [[132, "pyatlan.model.assets.MicroStrategyVisualization.MICRO_STRATEGY_DOSSIER"]], "micro_strategy_dossier_name (pyatlan.model.assets.microstrategyvisualization attribute)": [[132, "pyatlan.model.assets.MicroStrategyVisualization.MICRO_STRATEGY_DOSSIER_NAME"]], "micro_strategy_dossier_qualified_name (pyatlan.model.assets.microstrategyvisualization attribute)": [[132, "pyatlan.model.assets.MicroStrategyVisualization.MICRO_STRATEGY_DOSSIER_QUALIFIED_NAME"]], "micro_strategy_project (pyatlan.model.assets.microstrategyvisualization attribute)": [[132, "pyatlan.model.assets.MicroStrategyVisualization.MICRO_STRATEGY_PROJECT"]], "micro_strategy_visualization_type (pyatlan.model.assets.microstrategyvisualization attribute)": [[132, "pyatlan.model.assets.MicroStrategyVisualization.MICRO_STRATEGY_VISUALIZATION_TYPE"]], "microstrategyvisualization (class in pyatlan.model.assets)": [[132, "pyatlan.model.assets.MicroStrategyVisualization"]], "mode_id (pyatlan.model.assets.mode attribute)": [[133, "pyatlan.model.assets.Mode.MODE_ID"]], "mode_query_name (pyatlan.model.assets.mode attribute)": [[133, "pyatlan.model.assets.Mode.MODE_QUERY_NAME"]], "mode_query_qualified_name (pyatlan.model.assets.mode attribute)": [[133, "pyatlan.model.assets.Mode.MODE_QUERY_QUALIFIED_NAME"]], "mode_report_name (pyatlan.model.assets.mode attribute)": [[133, "pyatlan.model.assets.Mode.MODE_REPORT_NAME"]], "mode_report_qualified_name (pyatlan.model.assets.mode attribute)": [[133, "pyatlan.model.assets.Mode.MODE_REPORT_QUALIFIED_NAME"]], "mode_token (pyatlan.model.assets.mode attribute)": [[133, "pyatlan.model.assets.Mode.MODE_TOKEN"]], "mode_workspace_name (pyatlan.model.assets.mode attribute)": [[133, "pyatlan.model.assets.Mode.MODE_WORKSPACE_NAME"]], "mode_workspace_qualified_name (pyatlan.model.assets.mode attribute)": [[133, "pyatlan.model.assets.Mode.MODE_WORKSPACE_QUALIFIED_NAME"]], "mode_workspace_username (pyatlan.model.assets.mode attribute)": [[133, "pyatlan.model.assets.Mode.MODE_WORKSPACE_USERNAME"]], "mode (class in pyatlan.model.assets)": [[133, "pyatlan.model.assets.Mode"]], "mode_chart_type (pyatlan.model.assets.modechart attribute)": [[134, "pyatlan.model.assets.ModeChart.MODE_CHART_TYPE"]], "mode_query (pyatlan.model.assets.modechart attribute)": [[134, "pyatlan.model.assets.ModeChart.MODE_QUERY"]], "modechart (class in pyatlan.model.assets)": [[134, "pyatlan.model.assets.ModeChart"]], "mode_collection_state (pyatlan.model.assets.modecollection attribute)": [[135, "pyatlan.model.assets.ModeCollection.MODE_COLLECTION_STATE"]], "mode_collection_type (pyatlan.model.assets.modecollection attribute)": [[135, "pyatlan.model.assets.ModeCollection.MODE_COLLECTION_TYPE"]], "mode_reports (pyatlan.model.assets.modecollection attribute)": [[135, "pyatlan.model.assets.ModeCollection.MODE_REPORTS"]], "mode_workspace (pyatlan.model.assets.modecollection attribute)": [[135, "pyatlan.model.assets.ModeCollection.MODE_WORKSPACE"]], "modecollection (class in pyatlan.model.assets)": [[135, "pyatlan.model.assets.ModeCollection"]], "mode_charts (pyatlan.model.assets.modequery attribute)": [[136, "pyatlan.model.assets.ModeQuery.MODE_CHARTS"]], "mode_raw_query (pyatlan.model.assets.modequery attribute)": [[136, "pyatlan.model.assets.ModeQuery.MODE_RAW_QUERY"]], "mode_report (pyatlan.model.assets.modequery attribute)": [[136, "pyatlan.model.assets.ModeQuery.MODE_REPORT"]], "mode_report_import_count (pyatlan.model.assets.modequery attribute)": [[136, "pyatlan.model.assets.ModeQuery.MODE_REPORT_IMPORT_COUNT"]], "modequery (class in pyatlan.model.assets)": [[136, "pyatlan.model.assets.ModeQuery"]], "mode_chart_count (pyatlan.model.assets.modereport attribute)": [[137, "pyatlan.model.assets.ModeReport.MODE_CHART_COUNT"]], "mode_collections (pyatlan.model.assets.modereport attribute)": [[137, "pyatlan.model.assets.ModeReport.MODE_COLLECTIONS"]], "mode_collection_token (pyatlan.model.assets.modereport attribute)": [[137, "pyatlan.model.assets.ModeReport.MODE_COLLECTION_TOKEN"]], "mode_is_public (pyatlan.model.assets.modereport attribute)": [[137, "pyatlan.model.assets.ModeReport.MODE_IS_PUBLIC"]], "mode_is_shared (pyatlan.model.assets.modereport attribute)": [[137, "pyatlan.model.assets.ModeReport.MODE_IS_SHARED"]], "mode_queries (pyatlan.model.assets.modereport attribute)": [[137, "pyatlan.model.assets.ModeReport.MODE_QUERIES"]], "mode_query_count (pyatlan.model.assets.modereport attribute)": [[137, "pyatlan.model.assets.ModeReport.MODE_QUERY_COUNT"]], "mode_query_preview (pyatlan.model.assets.modereport attribute)": [[137, "pyatlan.model.assets.ModeReport.MODE_QUERY_PREVIEW"]], "mode_report_published_at (pyatlan.model.assets.modereport attribute)": [[137, "pyatlan.model.assets.ModeReport.MODE_REPORT_PUBLISHED_AT"]], "modereport (class in pyatlan.model.assets)": [[137, "pyatlan.model.assets.ModeReport"]], "mode_collections (pyatlan.model.assets.modeworkspace attribute)": [[138, "pyatlan.model.assets.ModeWorkspace.MODE_COLLECTIONS"]], "mode_collection_count (pyatlan.model.assets.modeworkspace attribute)": [[138, "pyatlan.model.assets.ModeWorkspace.MODE_COLLECTION_COUNT"]], "modeworkspace (class in pyatlan.model.assets)": [[138, "pyatlan.model.assets.ModeWorkspace"]], "mongodb (class in pyatlan.model.assets)": [[139, "pyatlan.model.assets.MongoDB"]], "alias (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.ALIAS"]], "calculation_view_name (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.CALCULATION_VIEW_NAME"]], "calculation_view_qualified_name (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.CALCULATION_VIEW_QUALIFIED_NAME"]], "column_count (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.COLUMN_COUNT"]], "database_name (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.DATABASE_NAME"]], "database_qualified_name (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.DATABASE_QUALIFIED_NAME"]], "external_location (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.EXTERNAL_LOCATION"]], "external_location_format (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.EXTERNAL_LOCATION_FORMAT"]], "external_location_region (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.EXTERNAL_LOCATION_REGION"]], "is_partitioned (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.IS_PARTITIONED"]], "is_profiled (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.IS_PROFILED"]], "is_query_preview (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.IS_QUERY_PREVIEW"]], "is_sharded (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.IS_SHARDED"]], "is_temporary (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.IS_TEMPORARY"]], "last_profiled_at (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.LAST_PROFILED_AT"]], "mongo_db_collection_average_object_size (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_AVERAGE_OBJECT_SIZE"]], "mongo_db_collection_expire_after_seconds (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_EXPIRE_AFTER_SECONDS"]], "mongo_db_collection_is_capped (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_IS_CAPPED"]], "mongo_db_collection_maximum_document_count (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_MAXIMUM_DOCUMENT_COUNT"]], "mongo_db_collection_max_size (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_MAX_SIZE"]], "mongo_db_collection_num_indexes (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_NUM_INDEXES"]], "mongo_db_collection_num_orphan_docs (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_NUM_ORPHAN_DOCS"]], "mongo_db_collection_schema_definition (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_SCHEMA_DEFINITION"]], "mongo_db_collection_subtype (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_SUBTYPE"]], "mongo_db_collection_time_field (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_TIME_FIELD"]], "mongo_db_collection_time_granularity (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_TIME_GRANULARITY"]], "mongo_db_collection_total_index_size (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_COLLECTION_TOTAL_INDEX_SIZE"]], "mongo_db_database (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.MONGO_DB_DATABASE"]], "mongodbcollection (class in pyatlan.model.assets)": [[140, "pyatlan.model.assets.MongoDBCollection"]], "no_sql_schema_definition (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.NO_SQL_SCHEMA_DEFINITION"]], "partition_count (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.PARTITION_COUNT"]], "partition_list (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.PARTITION_LIST"]], "partition_strategy (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.PARTITION_STRATEGY"]], "query_count (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.QUERY_COUNT"]], "query_count_updated_at (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.QUERY_COUNT_UPDATED_AT"]], "query_preview_config (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.QUERY_PREVIEW_CONFIG"]], "query_user_count (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.QUERY_USER_COUNT"]], "query_user_map (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.QUERY_USER_MAP"]], "row_count (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.ROW_COUNT"]], "schema_name (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.SCHEMA_NAME"]], "schema_qualified_name (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.SCHEMA_QUALIFIED_NAME"]], "size_bytes (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.SIZE_BYTES"]], "table_name (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.TABLE_NAME"]], "table_qualified_name (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.TABLE_QUALIFIED_NAME"]], "view_name (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.VIEW_NAME"]], "view_qualified_name (pyatlan.model.assets.mongodbcollection attribute)": [[140, "pyatlan.model.assets.MongoDBCollection.VIEW_QUALIFIED_NAME"]], "calculation_view_name (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.CALCULATION_VIEW_NAME"]], "calculation_view_qualified_name (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.CALCULATION_VIEW_QUALIFIED_NAME"]], "database_name (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.DATABASE_NAME"]], "database_qualified_name (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.DATABASE_QUALIFIED_NAME"]], "is_profiled (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.IS_PROFILED"]], "last_profiled_at (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.LAST_PROFILED_AT"]], "mongo_db_collections (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.MONGO_DB_COLLECTIONS"]], "mongo_db_database_collection_count (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.MONGO_DB_DATABASE_COLLECTION_COUNT"]], "mongodbdatabase (class in pyatlan.model.assets)": [[141, "pyatlan.model.assets.MongoDBDatabase"]], "no_sql_schema_definition (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.NO_SQL_SCHEMA_DEFINITION"]], "query_count (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.QUERY_COUNT"]], "query_count_updated_at (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.QUERY_COUNT_UPDATED_AT"]], "query_user_count (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.QUERY_USER_COUNT"]], "query_user_map (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.QUERY_USER_MAP"]], "schema_count (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.SCHEMA_COUNT"]], "schema_name (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.SCHEMA_NAME"]], "schema_qualified_name (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.SCHEMA_QUALIFIED_NAME"]], "table_name (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.TABLE_NAME"]], "table_qualified_name (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.TABLE_QUALIFIED_NAME"]], "view_name (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.VIEW_NAME"]], "view_qualified_name (pyatlan.model.assets.mongodbdatabase attribute)": [[141, "pyatlan.model.assets.MongoDBDatabase.VIEW_QUALIFIED_NAME"]], "mc_asset_qualified_names (pyatlan.model.assets.montecarlo attribute)": [[142, "pyatlan.model.assets.MonteCarlo.MC_ASSET_QUALIFIED_NAMES"]], "mc_labels (pyatlan.model.assets.montecarlo attribute)": [[142, "pyatlan.model.assets.MonteCarlo.MC_LABELS"]], "montecarlo (class in pyatlan.model.assets)": [[142, "pyatlan.model.assets.MonteCarlo"]], "cube_dimension_name (pyatlan.model.assets.multidimensionaldataset attribute)": [[143, "pyatlan.model.assets.MultiDimensionalDataset.CUBE_DIMENSION_NAME"]], "cube_dimension_qualified_name (pyatlan.model.assets.multidimensionaldataset attribute)": [[143, "pyatlan.model.assets.MultiDimensionalDataset.CUBE_DIMENSION_QUALIFIED_NAME"]], "cube_hierarchy_name (pyatlan.model.assets.multidimensionaldataset attribute)": [[143, "pyatlan.model.assets.MultiDimensionalDataset.CUBE_HIERARCHY_NAME"]], "cube_hierarchy_qualified_name (pyatlan.model.assets.multidimensionaldataset attribute)": [[143, "pyatlan.model.assets.MultiDimensionalDataset.CUBE_HIERARCHY_QUALIFIED_NAME"]], "cube_name (pyatlan.model.assets.multidimensionaldataset attribute)": [[143, "pyatlan.model.assets.MultiDimensionalDataset.CUBE_NAME"]], "cube_qualified_name (pyatlan.model.assets.multidimensionaldataset attribute)": [[143, "pyatlan.model.assets.MultiDimensionalDataset.CUBE_QUALIFIED_NAME"]], "multidimensionaldataset (class in pyatlan.model.assets)": [[143, "pyatlan.model.assets.MultiDimensionalDataset"]], "children_folders (pyatlan.model.assets.namespace attribute)": [[144, "pyatlan.model.assets.Namespace.CHILDREN_FOLDERS"]], "children_queries (pyatlan.model.assets.namespace attribute)": [[144, "pyatlan.model.assets.Namespace.CHILDREN_QUERIES"]], "namespace (class in pyatlan.model.assets)": [[144, "pyatlan.model.assets.Namespace"]], "no_sql_schema_definition (pyatlan.model.assets.nosql attribute)": [[145, "pyatlan.model.assets.NoSQL.NO_SQL_SCHEMA_DEFINITION"]], "nosql (class in pyatlan.model.assets)": [[145, "pyatlan.model.assets.NoSQL"]], "objectstore (class in pyatlan.model.assets)": [[146, "pyatlan.model.assets.ObjectStore"]], "persona_groups (pyatlan.model.assets.persona attribute)": [[147, "pyatlan.model.assets.Persona.PERSONA_GROUPS"]], "persona_users (pyatlan.model.assets.persona attribute)": [[147, "pyatlan.model.assets.Persona.PERSONA_USERS"]], "persona (class in pyatlan.model.assets)": [[147, "pyatlan.model.assets.Persona"]], "role_id (pyatlan.model.assets.persona attribute)": [[147, "pyatlan.model.assets.Persona.ROLE_ID"]], "power_bi_endorsement (pyatlan.model.assets.powerbi attribute)": [[148, "pyatlan.model.assets.PowerBI.POWER_BI_ENDORSEMENT"]], "power_bi_format_string (pyatlan.model.assets.powerbi attribute)": [[148, "pyatlan.model.assets.PowerBI.POWER_BI_FORMAT_STRING"]], "power_bi_is_hidden (pyatlan.model.assets.powerbi attribute)": [[148, "pyatlan.model.assets.PowerBI.POWER_BI_IS_HIDDEN"]], "power_bi_table_qualified_name (pyatlan.model.assets.powerbi attribute)": [[148, "pyatlan.model.assets.PowerBI.POWER_BI_TABLE_QUALIFIED_NAME"]], "powerbi (class in pyatlan.model.assets)": [[148, "pyatlan.model.assets.PowerBI"]], "dataset_qualified_name (pyatlan.model.assets.powerbicolumn attribute)": [[149, "pyatlan.model.assets.PowerBIColumn.DATASET_QUALIFIED_NAME"]], "power_bi_column_data_category (pyatlan.model.assets.powerbicolumn attribute)": [[149, "pyatlan.model.assets.PowerBIColumn.POWER_BI_COLUMN_DATA_CATEGORY"]], "power_bi_column_data_type (pyatlan.model.assets.powerbicolumn attribute)": [[149, "pyatlan.model.assets.PowerBIColumn.POWER_BI_COLUMN_DATA_TYPE"]], "power_bi_column_summarize_by (pyatlan.model.assets.powerbicolumn attribute)": [[149, "pyatlan.model.assets.PowerBIColumn.POWER_BI_COLUMN_SUMMARIZE_BY"]], "power_bi_sort_by_column (pyatlan.model.assets.powerbicolumn attribute)": [[149, "pyatlan.model.assets.PowerBIColumn.POWER_BI_SORT_BY_COLUMN"]], "powerbicolumn (class in pyatlan.model.assets)": [[149, "pyatlan.model.assets.PowerBIColumn"]], "table (pyatlan.model.assets.powerbicolumn attribute)": [[149, "pyatlan.model.assets.PowerBIColumn.TABLE"]], "workspace_qualified_name (pyatlan.model.assets.powerbicolumn attribute)": [[149, "pyatlan.model.assets.PowerBIColumn.WORKSPACE_QUALIFIED_NAME"]], "powerbidashboard (class in pyatlan.model.assets)": [[150, "pyatlan.model.assets.PowerBIDashboard"]], "tiles (pyatlan.model.assets.powerbidashboard attribute)": [[150, "pyatlan.model.assets.PowerBIDashboard.TILES"]], "tile_count (pyatlan.model.assets.powerbidashboard attribute)": [[150, "pyatlan.model.assets.PowerBIDashboard.TILE_COUNT"]], "web_url (pyatlan.model.assets.powerbidashboard attribute)": [[150, "pyatlan.model.assets.PowerBIDashboard.WEB_URL"]], "workspace (pyatlan.model.assets.powerbidashboard attribute)": [[150, "pyatlan.model.assets.PowerBIDashboard.WORKSPACE"]], "workspace_qualified_name (pyatlan.model.assets.powerbidashboard attribute)": [[150, "pyatlan.model.assets.PowerBIDashboard.WORKSPACE_QUALIFIED_NAME"]], "datasets (pyatlan.model.assets.powerbidataflow attribute)": [[151, "pyatlan.model.assets.PowerBIDataflow.DATASETS"]], "powerbidataflow (class in pyatlan.model.assets)": [[151, "pyatlan.model.assets.PowerBIDataflow"]], "web_url (pyatlan.model.assets.powerbidataflow attribute)": [[151, "pyatlan.model.assets.PowerBIDataflow.WEB_URL"]], "workspace (pyatlan.model.assets.powerbidataflow attribute)": [[151, "pyatlan.model.assets.PowerBIDataflow.WORKSPACE"]], "workspace_qualified_name (pyatlan.model.assets.powerbidataflow attribute)": [[151, "pyatlan.model.assets.PowerBIDataflow.WORKSPACE_QUALIFIED_NAME"]], "dataflows (pyatlan.model.assets.powerbidataset attribute)": [[152, "pyatlan.model.assets.PowerBIDataset.DATAFLOWS"]], "datasources (pyatlan.model.assets.powerbidataset attribute)": [[152, "pyatlan.model.assets.PowerBIDataset.DATASOURCES"]], "powerbidataset (class in pyatlan.model.assets)": [[152, "pyatlan.model.assets.PowerBIDataset"]], "reports (pyatlan.model.assets.powerbidataset attribute)": [[152, "pyatlan.model.assets.PowerBIDataset.REPORTS"]], "tables (pyatlan.model.assets.powerbidataset attribute)": [[152, "pyatlan.model.assets.PowerBIDataset.TABLES"]], "tiles (pyatlan.model.assets.powerbidataset attribute)": [[152, "pyatlan.model.assets.PowerBIDataset.TILES"]], "web_url (pyatlan.model.assets.powerbidataset attribute)": [[152, "pyatlan.model.assets.PowerBIDataset.WEB_URL"]], "workspace (pyatlan.model.assets.powerbidataset attribute)": [[152, "pyatlan.model.assets.PowerBIDataset.WORKSPACE"]], "workspace_qualified_name (pyatlan.model.assets.powerbidataset attribute)": [[152, "pyatlan.model.assets.PowerBIDataset.WORKSPACE_QUALIFIED_NAME"]], "connection_details (pyatlan.model.assets.powerbidatasource attribute)": [[153, "pyatlan.model.assets.PowerBIDatasource.CONNECTION_DETAILS"]], "datasets (pyatlan.model.assets.powerbidatasource attribute)": [[153, "pyatlan.model.assets.PowerBIDatasource.DATASETS"]], "powerbidatasource (class in pyatlan.model.assets)": [[153, "pyatlan.model.assets.PowerBIDatasource"]], "dataset_qualified_name (pyatlan.model.assets.powerbimeasure attribute)": [[154, "pyatlan.model.assets.PowerBIMeasure.DATASET_QUALIFIED_NAME"]], "power_bi_is_external_measure (pyatlan.model.assets.powerbimeasure attribute)": [[154, "pyatlan.model.assets.PowerBIMeasure.POWER_BI_IS_EXTERNAL_MEASURE"]], "power_bi_measure_expression (pyatlan.model.assets.powerbimeasure attribute)": [[154, "pyatlan.model.assets.PowerBIMeasure.POWER_BI_MEASURE_EXPRESSION"]], "powerbimeasure (class in pyatlan.model.assets)": [[154, "pyatlan.model.assets.PowerBIMeasure"]], "table (pyatlan.model.assets.powerbimeasure attribute)": [[154, "pyatlan.model.assets.PowerBIMeasure.TABLE"]], "workspace_qualified_name (pyatlan.model.assets.powerbimeasure attribute)": [[154, "pyatlan.model.assets.PowerBIMeasure.WORKSPACE_QUALIFIED_NAME"]], "powerbipage (class in pyatlan.model.assets)": [[155, "pyatlan.model.assets.PowerBIPage"]], "report (pyatlan.model.assets.powerbipage attribute)": [[155, "pyatlan.model.assets.PowerBIPage.REPORT"]], "report_qualified_name (pyatlan.model.assets.powerbipage attribute)": [[155, "pyatlan.model.assets.PowerBIPage.REPORT_QUALIFIED_NAME"]], "workspace_qualified_name (pyatlan.model.assets.powerbipage attribute)": [[155, "pyatlan.model.assets.PowerBIPage.WORKSPACE_QUALIFIED_NAME"]], "dataset (pyatlan.model.assets.powerbireport attribute)": [[156, "pyatlan.model.assets.PowerBIReport.DATASET"]], "dataset_qualified_name (pyatlan.model.assets.powerbireport attribute)": [[156, "pyatlan.model.assets.PowerBIReport.DATASET_QUALIFIED_NAME"]], "pages (pyatlan.model.assets.powerbireport attribute)": [[156, "pyatlan.model.assets.PowerBIReport.PAGES"]], "page_count (pyatlan.model.assets.powerbireport attribute)": [[156, "pyatlan.model.assets.PowerBIReport.PAGE_COUNT"]], "powerbireport (class in pyatlan.model.assets)": [[156, "pyatlan.model.assets.PowerBIReport"]], "tiles (pyatlan.model.assets.powerbireport attribute)": [[156, "pyatlan.model.assets.PowerBIReport.TILES"]], "web_url (pyatlan.model.assets.powerbireport attribute)": [[156, "pyatlan.model.assets.PowerBIReport.WEB_URL"]], "workspace (pyatlan.model.assets.powerbireport attribute)": [[156, "pyatlan.model.assets.PowerBIReport.WORKSPACE"]], "workspace_qualified_name (pyatlan.model.assets.powerbireport attribute)": [[156, "pyatlan.model.assets.PowerBIReport.WORKSPACE_QUALIFIED_NAME"]], "columns (pyatlan.model.assets.powerbitable attribute)": [[157, "pyatlan.model.assets.PowerBITable.COLUMNS"]], "dataset (pyatlan.model.assets.powerbitable attribute)": [[157, "pyatlan.model.assets.PowerBITable.DATASET"]], "dataset_qualified_name (pyatlan.model.assets.powerbitable attribute)": [[157, "pyatlan.model.assets.PowerBITable.DATASET_QUALIFIED_NAME"]], "measures (pyatlan.model.assets.powerbitable attribute)": [[157, "pyatlan.model.assets.PowerBITable.MEASURES"]], "power_bi_table_column_count (pyatlan.model.assets.powerbitable attribute)": [[157, "pyatlan.model.assets.PowerBITable.POWER_BI_TABLE_COLUMN_COUNT"]], "power_bi_table_measure_count (pyatlan.model.assets.powerbitable attribute)": [[157, "pyatlan.model.assets.PowerBITable.POWER_BI_TABLE_MEASURE_COUNT"]], "power_bi_table_source_expressions (pyatlan.model.assets.powerbitable attribute)": [[157, "pyatlan.model.assets.PowerBITable.POWER_BI_TABLE_SOURCE_EXPRESSIONS"]], "powerbitable (class in pyatlan.model.assets)": [[157, "pyatlan.model.assets.PowerBITable"]], "workspace_qualified_name (pyatlan.model.assets.powerbitable attribute)": [[157, "pyatlan.model.assets.PowerBITable.WORKSPACE_QUALIFIED_NAME"]], "dashboard (pyatlan.model.assets.powerbitile attribute)": [[158, "pyatlan.model.assets.PowerBITile.DASHBOARD"]], "dashboard_qualified_name (pyatlan.model.assets.powerbitile attribute)": [[158, "pyatlan.model.assets.PowerBITile.DASHBOARD_QUALIFIED_NAME"]], "dataset (pyatlan.model.assets.powerbitile attribute)": [[158, "pyatlan.model.assets.PowerBITile.DATASET"]], "powerbitile (class in pyatlan.model.assets)": [[158, "pyatlan.model.assets.PowerBITile"]], "report (pyatlan.model.assets.powerbitile attribute)": [[158, "pyatlan.model.assets.PowerBITile.REPORT"]], "workspace_qualified_name (pyatlan.model.assets.powerbitile attribute)": [[158, "pyatlan.model.assets.PowerBITile.WORKSPACE_QUALIFIED_NAME"]], "dashboards (pyatlan.model.assets.powerbiworkspace attribute)": [[159, "pyatlan.model.assets.PowerBIWorkspace.DASHBOARDS"]], "dashboard_count (pyatlan.model.assets.powerbiworkspace attribute)": [[159, "pyatlan.model.assets.PowerBIWorkspace.DASHBOARD_COUNT"]], "dataflows (pyatlan.model.assets.powerbiworkspace attribute)": [[159, "pyatlan.model.assets.PowerBIWorkspace.DATAFLOWS"]], "dataflow_count (pyatlan.model.assets.powerbiworkspace attribute)": [[159, "pyatlan.model.assets.PowerBIWorkspace.DATAFLOW_COUNT"]], "datasets (pyatlan.model.assets.powerbiworkspace attribute)": [[159, "pyatlan.model.assets.PowerBIWorkspace.DATASETS"]], "dataset_count (pyatlan.model.assets.powerbiworkspace attribute)": [[159, "pyatlan.model.assets.PowerBIWorkspace.DATASET_COUNT"]], "powerbiworkspace (class in pyatlan.model.assets)": [[159, "pyatlan.model.assets.PowerBIWorkspace"]], "reports (pyatlan.model.assets.powerbiworkspace attribute)": [[159, "pyatlan.model.assets.PowerBIWorkspace.REPORTS"]], "report_count (pyatlan.model.assets.powerbiworkspace attribute)": [[159, "pyatlan.model.assets.PowerBIWorkspace.REPORT_COUNT"]], "web_url (pyatlan.model.assets.powerbiworkspace attribute)": [[159, "pyatlan.model.assets.PowerBIWorkspace.WEB_URL"]], "preset_dashboard_id (pyatlan.model.assets.preset attribute)": [[160, "pyatlan.model.assets.Preset.PRESET_DASHBOARD_ID"]], "preset_dashboard_qualified_name (pyatlan.model.assets.preset attribute)": [[160, "pyatlan.model.assets.Preset.PRESET_DASHBOARD_QUALIFIED_NAME"]], "preset_workspace_id (pyatlan.model.assets.preset attribute)": [[160, "pyatlan.model.assets.Preset.PRESET_WORKSPACE_ID"]], "preset_workspace_qualified_name (pyatlan.model.assets.preset attribute)": [[160, "pyatlan.model.assets.Preset.PRESET_WORKSPACE_QUALIFIED_NAME"]], "preset (class in pyatlan.model.assets)": [[160, "pyatlan.model.assets.Preset"]], "preset_chart_description_markdown (pyatlan.model.assets.presetchart attribute)": [[161, "pyatlan.model.assets.PresetChart.PRESET_CHART_DESCRIPTION_MARKDOWN"]], "preset_chart_form_data (pyatlan.model.assets.presetchart attribute)": [[161, "pyatlan.model.assets.PresetChart.PRESET_CHART_FORM_DATA"]], "preset_dashboard (pyatlan.model.assets.presetchart attribute)": [[161, "pyatlan.model.assets.PresetChart.PRESET_DASHBOARD"]], "presetchart (class in pyatlan.model.assets)": [[161, "pyatlan.model.assets.PresetChart"]], "preset_charts (pyatlan.model.assets.presetdashboard attribute)": [[162, "pyatlan.model.assets.PresetDashboard.PRESET_CHARTS"]], "preset_dashboard_changed_by_name (pyatlan.model.assets.presetdashboard attribute)": [[162, "pyatlan.model.assets.PresetDashboard.PRESET_DASHBOARD_CHANGED_BY_NAME"]], "preset_dashboard_changed_by_url (pyatlan.model.assets.presetdashboard attribute)": [[162, "pyatlan.model.assets.PresetDashboard.PRESET_DASHBOARD_CHANGED_BY_URL"]], "preset_dashboard_chart_count (pyatlan.model.assets.presetdashboard attribute)": [[162, "pyatlan.model.assets.PresetDashboard.PRESET_DASHBOARD_CHART_COUNT"]], "preset_dashboard_is_managed_externally (pyatlan.model.assets.presetdashboard attribute)": [[162, "pyatlan.model.assets.PresetDashboard.PRESET_DASHBOARD_IS_MANAGED_EXTERNALLY"]], "preset_dashboard_is_published (pyatlan.model.assets.presetdashboard attribute)": [[162, "pyatlan.model.assets.PresetDashboard.PRESET_DASHBOARD_IS_PUBLISHED"]], "preset_dashboard_thumbnail_url (pyatlan.model.assets.presetdashboard attribute)": [[162, "pyatlan.model.assets.PresetDashboard.PRESET_DASHBOARD_THUMBNAIL_URL"]], "preset_datasets (pyatlan.model.assets.presetdashboard attribute)": [[162, "pyatlan.model.assets.PresetDashboard.PRESET_DATASETS"]], "preset_workspace (pyatlan.model.assets.presetdashboard attribute)": [[162, "pyatlan.model.assets.PresetDashboard.PRESET_WORKSPACE"]], "presetdashboard (class in pyatlan.model.assets)": [[162, "pyatlan.model.assets.PresetDashboard"]], "preset_dashboard (pyatlan.model.assets.presetdataset attribute)": [[163, "pyatlan.model.assets.PresetDataset.PRESET_DASHBOARD"]], "preset_dataset_datasource_name (pyatlan.model.assets.presetdataset attribute)": [[163, "pyatlan.model.assets.PresetDataset.PRESET_DATASET_DATASOURCE_NAME"]], "preset_dataset_id (pyatlan.model.assets.presetdataset attribute)": [[163, "pyatlan.model.assets.PresetDataset.PRESET_DATASET_ID"]], "preset_dataset_type (pyatlan.model.assets.presetdataset attribute)": [[163, "pyatlan.model.assets.PresetDataset.PRESET_DATASET_TYPE"]], "presetdataset (class in pyatlan.model.assets)": [[163, "pyatlan.model.assets.PresetDataset"]], "preset_dashboards (pyatlan.model.assets.presetworkspace attribute)": [[164, "pyatlan.model.assets.PresetWorkspace.PRESET_DASHBOARDS"]], "preset_workspace_cluster_id (pyatlan.model.assets.presetworkspace attribute)": [[164, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_CLUSTER_ID"]], "preset_workspace_dashboard_count (pyatlan.model.assets.presetworkspace attribute)": [[164, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_DASHBOARD_COUNT"]], "preset_workspace_dataset_count (pyatlan.model.assets.presetworkspace attribute)": [[164, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_DATASET_COUNT"]], "preset_workspace_deployment_id (pyatlan.model.assets.presetworkspace attribute)": [[164, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_DEPLOYMENT_ID"]], "preset_workspace_hostname (pyatlan.model.assets.presetworkspace attribute)": [[164, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_HOSTNAME"]], "preset_workspace_is_in_maintenance_mode (pyatlan.model.assets.presetworkspace attribute)": [[164, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_IS_IN_MAINTENANCE_MODE"]], "preset_workspace_public_dashboards_allowed (pyatlan.model.assets.presetworkspace attribute)": [[164, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_PUBLIC_DASHBOARDS_ALLOWED"]], "preset_workspace_region (pyatlan.model.assets.presetworkspace attribute)": [[164, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_REGION"]], "preset_workspace_status (pyatlan.model.assets.presetworkspace attribute)": [[164, "pyatlan.model.assets.PresetWorkspace.PRESET_WORKSPACE_STATUS"]], "presetworkspace (class in pyatlan.model.assets)": [[164, "pyatlan.model.assets.PresetWorkspace"]], "atlan_schema (pyatlan.model.assets.procedure attribute)": [[165, "pyatlan.model.assets.Procedure.ATLAN_SCHEMA"]], "definition (pyatlan.model.assets.procedure attribute)": [[165, "pyatlan.model.assets.Procedure.DEFINITION"]], "procedure (class in pyatlan.model.assets)": [[165, "pyatlan.model.assets.Procedure"]], "airflow_tasks (pyatlan.model.assets.process attribute)": [[166, "pyatlan.model.assets.Process.AIRFLOW_TASKS"]], "ast (pyatlan.model.assets.process attribute)": [[166, "pyatlan.model.assets.Process.AST"]], "code (pyatlan.model.assets.process attribute)": [[166, "pyatlan.model.assets.Process.CODE"]], "column_processes (pyatlan.model.assets.process attribute)": [[166, "pyatlan.model.assets.Process.COLUMN_PROCESSES"]], "matillion_component (pyatlan.model.assets.process attribute)": [[166, "pyatlan.model.assets.Process.MATILLION_COMPONENT"]], "process (class in pyatlan.model.assets)": [[166, "pyatlan.model.assets.Process"]], "spark_jobs (pyatlan.model.assets.process attribute)": [[166, "pyatlan.model.assets.Process.SPARK_JOBS"]], "sql (pyatlan.model.assets.process attribute)": [[166, "pyatlan.model.assets.Process.SQL"]], "processexecution (class in pyatlan.model.assets)": [[167, "pyatlan.model.assets.ProcessExecution"]], "purpose_classifications (pyatlan.model.assets.purpose attribute)": [[168, "pyatlan.model.assets.Purpose.PURPOSE_CLASSIFICATIONS"]], "purpose (class in pyatlan.model.assets)": [[168, "pyatlan.model.assets.Purpose"]], "qlik_app_id (pyatlan.model.assets.qlik attribute)": [[169, "pyatlan.model.assets.Qlik.QLIK_APP_ID"]], "qlik_app_qualified_name (pyatlan.model.assets.qlik attribute)": [[169, "pyatlan.model.assets.Qlik.QLIK_APP_QUALIFIED_NAME"]], "qlik_id (pyatlan.model.assets.qlik attribute)": [[169, "pyatlan.model.assets.Qlik.QLIK_ID"]], "qlik_is_published (pyatlan.model.assets.qlik attribute)": [[169, "pyatlan.model.assets.Qlik.QLIK_IS_PUBLISHED"]], "qlik_owner_id (pyatlan.model.assets.qlik attribute)": [[169, "pyatlan.model.assets.Qlik.QLIK_OWNER_ID"]], "qlik_qri (pyatlan.model.assets.qlik attribute)": [[169, "pyatlan.model.assets.Qlik.QLIK_QRI"]], "qlik_space_id (pyatlan.model.assets.qlik attribute)": [[169, "pyatlan.model.assets.Qlik.QLIK_SPACE_ID"]], "qlik_space_qualified_name (pyatlan.model.assets.qlik attribute)": [[169, "pyatlan.model.assets.Qlik.QLIK_SPACE_QUALIFIED_NAME"]], "qlik (class in pyatlan.model.assets)": [[169, "pyatlan.model.assets.Qlik"]], "qlik_app_static_byte_size (pyatlan.model.assets.qlikapp attribute)": [[170, "pyatlan.model.assets.QlikApp.QLIK_APP_STATIC_BYTE_SIZE"]], "qlik_has_section_access (pyatlan.model.assets.qlikapp attribute)": [[170, "pyatlan.model.assets.QlikApp.QLIK_HAS_SECTION_ACCESS"]], "qlik_is_direct_query_mode (pyatlan.model.assets.qlikapp attribute)": [[170, "pyatlan.model.assets.QlikApp.QLIK_IS_DIRECT_QUERY_MODE"]], "qlik_is_encrypted (pyatlan.model.assets.qlikapp attribute)": [[170, "pyatlan.model.assets.QlikApp.QLIK_IS_ENCRYPTED"]], "qlik_origin_app_id (pyatlan.model.assets.qlikapp attribute)": [[170, "pyatlan.model.assets.QlikApp.QLIK_ORIGIN_APP_ID"]], "qlik_sheets (pyatlan.model.assets.qlikapp attribute)": [[170, "pyatlan.model.assets.QlikApp.QLIK_SHEETS"]], "qlik_space (pyatlan.model.assets.qlikapp attribute)": [[170, "pyatlan.model.assets.QlikApp.QLIK_SPACE"]], "qlikapp (class in pyatlan.model.assets)": [[170, "pyatlan.model.assets.QlikApp"]], "qlik_chart_footnote (pyatlan.model.assets.qlikchart attribute)": [[171, "pyatlan.model.assets.QlikChart.QLIK_CHART_FOOTNOTE"]], "qlik_chart_orientation (pyatlan.model.assets.qlikchart attribute)": [[171, "pyatlan.model.assets.QlikChart.QLIK_CHART_ORIENTATION"]], "qlik_chart_subtitle (pyatlan.model.assets.qlikchart attribute)": [[171, "pyatlan.model.assets.QlikChart.QLIK_CHART_SUBTITLE"]], "qlik_chart_type (pyatlan.model.assets.qlikchart attribute)": [[171, "pyatlan.model.assets.QlikChart.QLIK_CHART_TYPE"]], "qlik_sheet (pyatlan.model.assets.qlikchart attribute)": [[171, "pyatlan.model.assets.QlikChart.QLIK_SHEET"]], "qlikchart (class in pyatlan.model.assets)": [[171, "pyatlan.model.assets.QlikChart"]], "qlik_dataset_subtype (pyatlan.model.assets.qlikdataset attribute)": [[172, "pyatlan.model.assets.QlikDataset.QLIK_DATASET_SUBTYPE"]], "qlik_dataset_technical_name (pyatlan.model.assets.qlikdataset attribute)": [[172, "pyatlan.model.assets.QlikDataset.QLIK_DATASET_TECHNICAL_NAME"]], "qlik_dataset_type (pyatlan.model.assets.qlikdataset attribute)": [[172, "pyatlan.model.assets.QlikDataset.QLIK_DATASET_TYPE"]], "qlik_dataset_uri (pyatlan.model.assets.qlikdataset attribute)": [[172, "pyatlan.model.assets.QlikDataset.QLIK_DATASET_URI"]], "qlik_space (pyatlan.model.assets.qlikdataset attribute)": [[172, "pyatlan.model.assets.QlikDataset.QLIK_SPACE"]], "qlikdataset (class in pyatlan.model.assets)": [[172, "pyatlan.model.assets.QlikDataset"]], "qlik_app (pyatlan.model.assets.qliksheet attribute)": [[173, "pyatlan.model.assets.QlikSheet.QLIK_APP"]], "qlik_charts (pyatlan.model.assets.qliksheet attribute)": [[173, "pyatlan.model.assets.QlikSheet.QLIK_CHARTS"]], "qlik_sheet_is_approved (pyatlan.model.assets.qliksheet attribute)": [[173, "pyatlan.model.assets.QlikSheet.QLIK_SHEET_IS_APPROVED"]], "qliksheet (class in pyatlan.model.assets)": [[173, "pyatlan.model.assets.QlikSheet"]], "qlik_apps (pyatlan.model.assets.qlikspace attribute)": [[174, "pyatlan.model.assets.QlikSpace.QLIK_APPS"]], "qlik_datasets (pyatlan.model.assets.qlikspace attribute)": [[174, "pyatlan.model.assets.QlikSpace.QLIK_DATASETS"]], "qlik_space_type (pyatlan.model.assets.qlikspace attribute)": [[174, "pyatlan.model.assets.QlikSpace.QLIK_SPACE_TYPE"]], "qlikspace (class in pyatlan.model.assets)": [[174, "pyatlan.model.assets.QlikSpace"]], "qlikstream (class in pyatlan.model.assets)": [[175, "pyatlan.model.assets.QlikStream"]], "collection_qualified_name (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.COLLECTION_QUALIFIED_NAME"]], "columns (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.COLUMNS"]], "default_database_qualified_name (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.DEFAULT_DATABASE_QUALIFIED_NAME"]], "default_schema_qualified_name (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.DEFAULT_SCHEMA_QUALIFIED_NAME"]], "is_private (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.IS_PRIVATE"]], "is_sql_snippet (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.IS_SQL_SNIPPET"]], "is_visual_query (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.IS_VISUAL_QUERY"]], "long_raw_query (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.LONG_RAW_QUERY"]], "parent (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.PARENT"]], "parent_qualified_name (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.PARENT_QUALIFIED_NAME"]], "query (class in pyatlan.model.assets)": [[176, "pyatlan.model.assets.Query"]], "raw_query (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.RAW_QUERY"]], "raw_query_text (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.RAW_QUERY_TEXT"]], "tables (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.TABLES"]], "variables_schema_base64 (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.VARIABLES_SCHEMA_BASE64"]], "views (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.VIEWS"]], "visual_builder_schema_base64 (pyatlan.model.assets.query attribute)": [[176, "pyatlan.model.assets.Query.VISUAL_BUILDER_SCHEMA_BASE64"]], "quick_sight_id (pyatlan.model.assets.quicksight attribute)": [[177, "pyatlan.model.assets.QuickSight.QUICK_SIGHT_ID"]], "quick_sight_sheet_id (pyatlan.model.assets.quicksight attribute)": [[177, "pyatlan.model.assets.QuickSight.QUICK_SIGHT_SHEET_ID"]], "quick_sight_sheet_name (pyatlan.model.assets.quicksight attribute)": [[177, "pyatlan.model.assets.QuickSight.QUICK_SIGHT_SHEET_NAME"]], "quicksight (class in pyatlan.model.assets)": [[177, "pyatlan.model.assets.QuickSight"]], "quick_sight_analysis_calculated_fields (pyatlan.model.assets.quicksightanalysis attribute)": [[178, "pyatlan.model.assets.QuickSightAnalysis.QUICK_SIGHT_ANALYSIS_CALCULATED_FIELDS"]], "quick_sight_analysis_filter_groups (pyatlan.model.assets.quicksightanalysis attribute)": [[178, "pyatlan.model.assets.QuickSightAnalysis.QUICK_SIGHT_ANALYSIS_FILTER_GROUPS"]], "quick_sight_analysis_folders (pyatlan.model.assets.quicksightanalysis attribute)": [[178, "pyatlan.model.assets.QuickSightAnalysis.QUICK_SIGHT_ANALYSIS_FOLDERS"]], "quick_sight_analysis_parameter_declarations (pyatlan.model.assets.quicksightanalysis attribute)": [[178, "pyatlan.model.assets.QuickSightAnalysis.QUICK_SIGHT_ANALYSIS_PARAMETER_DECLARATIONS"]], "quick_sight_analysis_status (pyatlan.model.assets.quicksightanalysis attribute)": [[178, "pyatlan.model.assets.QuickSightAnalysis.QUICK_SIGHT_ANALYSIS_STATUS"]], "quick_sight_analysis_visuals (pyatlan.model.assets.quicksightanalysis attribute)": [[178, "pyatlan.model.assets.QuickSightAnalysis.QUICK_SIGHT_ANALYSIS_VISUALS"]], "quicksightanalysis (class in pyatlan.model.assets)": [[178, "pyatlan.model.assets.QuickSightAnalysis"]], "quick_sight_analysis (pyatlan.model.assets.quicksightanalysisvisual attribute)": [[179, "pyatlan.model.assets.QuickSightAnalysisVisual.QUICK_SIGHT_ANALYSIS"]], "quick_sight_analysis_qualified_name (pyatlan.model.assets.quicksightanalysisvisual attribute)": [[179, "pyatlan.model.assets.QuickSightAnalysisVisual.QUICK_SIGHT_ANALYSIS_QUALIFIED_NAME"]], "quicksightanalysisvisual (class in pyatlan.model.assets)": [[179, "pyatlan.model.assets.QuickSightAnalysisVisual"]], "quick_sight_dashboard_folders (pyatlan.model.assets.quicksightdashboard attribute)": [[180, "pyatlan.model.assets.QuickSightDashboard.QUICK_SIGHT_DASHBOARD_FOLDERS"]], "quick_sight_dashboard_last_published_time (pyatlan.model.assets.quicksightdashboard attribute)": [[180, "pyatlan.model.assets.QuickSightDashboard.QUICK_SIGHT_DASHBOARD_LAST_PUBLISHED_TIME"]], "quick_sight_dashboard_published_version_number (pyatlan.model.assets.quicksightdashboard attribute)": [[180, "pyatlan.model.assets.QuickSightDashboard.QUICK_SIGHT_DASHBOARD_PUBLISHED_VERSION_NUMBER"]], "quick_sight_dashboard_visuals (pyatlan.model.assets.quicksightdashboard attribute)": [[180, "pyatlan.model.assets.QuickSightDashboard.QUICK_SIGHT_DASHBOARD_VISUALS"]], "quicksightdashboard (class in pyatlan.model.assets)": [[180, "pyatlan.model.assets.QuickSightDashboard"]], "quick_sight_dashboard (pyatlan.model.assets.quicksightdashboardvisual attribute)": [[181, "pyatlan.model.assets.QuickSightDashboardVisual.QUICK_SIGHT_DASHBOARD"]], "quick_sight_dashboard_qualified_name (pyatlan.model.assets.quicksightdashboardvisual attribute)": [[181, "pyatlan.model.assets.QuickSightDashboardVisual.QUICK_SIGHT_DASHBOARD_QUALIFIED_NAME"]], "quicksightdashboardvisual (class in pyatlan.model.assets)": [[181, "pyatlan.model.assets.QuickSightDashboardVisual"]], "quick_sight_dataset_column_count (pyatlan.model.assets.quicksightdataset attribute)": [[182, "pyatlan.model.assets.QuickSightDataset.QUICK_SIGHT_DATASET_COLUMN_COUNT"]], "quick_sight_dataset_fields (pyatlan.model.assets.quicksightdataset attribute)": [[182, "pyatlan.model.assets.QuickSightDataset.QUICK_SIGHT_DATASET_FIELDS"]], "quick_sight_dataset_folders (pyatlan.model.assets.quicksightdataset attribute)": [[182, "pyatlan.model.assets.QuickSightDataset.QUICK_SIGHT_DATASET_FOLDERS"]], "quick_sight_dataset_import_mode (pyatlan.model.assets.quicksightdataset attribute)": [[182, "pyatlan.model.assets.QuickSightDataset.QUICK_SIGHT_DATASET_IMPORT_MODE"]], "quicksightdataset (class in pyatlan.model.assets)": [[182, "pyatlan.model.assets.QuickSightDataset"]], "quick_sight_dataset (pyatlan.model.assets.quicksightdatasetfield attribute)": [[183, "pyatlan.model.assets.QuickSightDatasetField.QUICK_SIGHT_DATASET"]], "quick_sight_dataset_field_type (pyatlan.model.assets.quicksightdatasetfield attribute)": [[183, "pyatlan.model.assets.QuickSightDatasetField.QUICK_SIGHT_DATASET_FIELD_TYPE"]], "quick_sight_dataset_qualified_name (pyatlan.model.assets.quicksightdatasetfield attribute)": [[183, "pyatlan.model.assets.QuickSightDatasetField.QUICK_SIGHT_DATASET_QUALIFIED_NAME"]], "quicksightdatasetfield (class in pyatlan.model.assets)": [[183, "pyatlan.model.assets.QuickSightDatasetField"]], "quick_sight_analyses (pyatlan.model.assets.quicksightfolder attribute)": [[184, "pyatlan.model.assets.QuickSightFolder.QUICK_SIGHT_ANALYSES"]], "quick_sight_dashboards (pyatlan.model.assets.quicksightfolder attribute)": [[184, "pyatlan.model.assets.QuickSightFolder.QUICK_SIGHT_DASHBOARDS"]], "quick_sight_datasets (pyatlan.model.assets.quicksightfolder attribute)": [[184, "pyatlan.model.assets.QuickSightFolder.QUICK_SIGHT_DATASETS"]], "quick_sight_folder_hierarchy (pyatlan.model.assets.quicksightfolder attribute)": [[184, "pyatlan.model.assets.QuickSightFolder.QUICK_SIGHT_FOLDER_HIERARCHY"]], "quick_sight_folder_type (pyatlan.model.assets.quicksightfolder attribute)": [[184, "pyatlan.model.assets.QuickSightFolder.QUICK_SIGHT_FOLDER_TYPE"]], "quicksightfolder (class in pyatlan.model.assets)": [[184, "pyatlan.model.assets.QuickSightFolder"]], "asset (pyatlan.model.assets.readme attribute)": [[185, "pyatlan.model.assets.Readme.ASSET"]], "readme (class in pyatlan.model.assets)": [[185, "pyatlan.model.assets.Readme"]], "see_also (pyatlan.model.assets.readme attribute)": [[185, "pyatlan.model.assets.Readme.SEE_ALSO"]], "icon (pyatlan.model.assets.readmetemplate attribute)": [[186, "pyatlan.model.assets.ReadmeTemplate.ICON"]], "icon_type (pyatlan.model.assets.readmetemplate attribute)": [[186, "pyatlan.model.assets.ReadmeTemplate.ICON_TYPE"]], "readmetemplate (class in pyatlan.model.assets)": [[186, "pyatlan.model.assets.ReadmeTemplate"]], "redash_is_published (pyatlan.model.assets.redash attribute)": [[187, "pyatlan.model.assets.Redash.REDASH_IS_PUBLISHED"]], "redash (class in pyatlan.model.assets)": [[187, "pyatlan.model.assets.Redash"]], "redash_dashboard_widget_count (pyatlan.model.assets.redashdashboard attribute)": [[188, "pyatlan.model.assets.RedashDashboard.REDASH_DASHBOARD_WIDGET_COUNT"]], "redashdashboard (class in pyatlan.model.assets)": [[188, "pyatlan.model.assets.RedashDashboard"]], "redash_query_last_executed_at (pyatlan.model.assets.redashquery attribute)": [[189, "pyatlan.model.assets.RedashQuery.REDASH_QUERY_LAST_EXECUTED_AT"]], "redash_query_last_execution_runtime (pyatlan.model.assets.redashquery attribute)": [[189, "pyatlan.model.assets.RedashQuery.REDASH_QUERY_LAST_EXECUTION_RUNTIME"]], "redash_query_parameters (pyatlan.model.assets.redashquery attribute)": [[189, "pyatlan.model.assets.RedashQuery.REDASH_QUERY_PARAMETERS"]], "redash_query_schedule (pyatlan.model.assets.redashquery attribute)": [[189, "pyatlan.model.assets.RedashQuery.REDASH_QUERY_SCHEDULE"]], "redash_query_schedule_humanized (pyatlan.model.assets.redashquery attribute)": [[189, "pyatlan.model.assets.RedashQuery.REDASH_QUERY_SCHEDULE_HUMANIZED"]], "redash_query_sql (pyatlan.model.assets.redashquery attribute)": [[189, "pyatlan.model.assets.RedashQuery.REDASH_QUERY_SQL"]], "redash_visualizations (pyatlan.model.assets.redashquery attribute)": [[189, "pyatlan.model.assets.RedashQuery.REDASH_VISUALIZATIONS"]], "redashquery (class in pyatlan.model.assets)": [[189, "pyatlan.model.assets.RedashQuery"]], "redash_query (pyatlan.model.assets.redashvisualization attribute)": [[190, "pyatlan.model.assets.RedashVisualization.REDASH_QUERY"]], "redash_query_name (pyatlan.model.assets.redashvisualization attribute)": [[190, "pyatlan.model.assets.RedashVisualization.REDASH_QUERY_NAME"]], "redash_query_qualified_name (pyatlan.model.assets.redashvisualization attribute)": [[190, "pyatlan.model.assets.RedashVisualization.REDASH_QUERY_QUALIFIED_NAME"]], "redash_visualization_type (pyatlan.model.assets.redashvisualization attribute)": [[190, "pyatlan.model.assets.RedashVisualization.REDASH_VISUALIZATION_TYPE"]], "redashvisualization (class in pyatlan.model.assets)": [[190, "pyatlan.model.assets.RedashVisualization"]], "assigned_terms (pyatlan.model.assets.referenceable attribute)": [[191, "pyatlan.model.assets.Referenceable.ASSIGNED_TERMS"]], "atlan_tags (pyatlan.model.assets.referenceable attribute)": [[191, "pyatlan.model.assets.Referenceable.ATLAN_TAGS"]], "created_by (pyatlan.model.assets.referenceable attribute)": [[191, "pyatlan.model.assets.Referenceable.CREATED_BY"]], "create_time (pyatlan.model.assets.referenceable attribute)": [[191, "pyatlan.model.assets.Referenceable.CREATE_TIME"]], "guid (pyatlan.model.assets.referenceable attribute)": [[191, "pyatlan.model.assets.Referenceable.GUID"]], "propagated_atlan_tags (pyatlan.model.assets.referenceable attribute)": [[191, "pyatlan.model.assets.Referenceable.PROPAGATED_ATLAN_TAGS"]], "qualified_name (pyatlan.model.assets.referenceable attribute)": [[191, "pyatlan.model.assets.Referenceable.QUALIFIED_NAME"]], "referenceable (class in pyatlan.model.assets)": [[191, "pyatlan.model.assets.Referenceable"]], "status (pyatlan.model.assets.referenceable attribute)": [[191, "pyatlan.model.assets.Referenceable.STATUS"]], "super_type_names (pyatlan.model.assets.referenceable attribute)": [[191, "pyatlan.model.assets.Referenceable.SUPER_TYPE_NAMES"]], "type_name (pyatlan.model.assets.referenceable attribute)": [[191, "pyatlan.model.assets.Referenceable.TYPE_NAME"]], "updated_by (pyatlan.model.assets.referenceable attribute)": [[191, "pyatlan.model.assets.Referenceable.UPDATED_BY"]], "update_time (pyatlan.model.assets.referenceable attribute)": [[191, "pyatlan.model.assets.Referenceable.UPDATE_TIME"]], "can_be_archived() (pyatlan.model.assets.referenceable class method)": [[191, "pyatlan.model.assets.Referenceable.can_be_archived"]], "json() (pyatlan.model.assets.referenceable method)": [[191, "pyatlan.model.assets.Referenceable.json"]], "is_global (pyatlan.model.assets.resource attribute)": [[192, "pyatlan.model.assets.Resource.IS_GLOBAL"]], "link (pyatlan.model.assets.resource attribute)": [[192, "pyatlan.model.assets.Resource.LINK"]], "reference (pyatlan.model.assets.resource attribute)": [[192, "pyatlan.model.assets.Resource.REFERENCE"]], "resource_metadata (pyatlan.model.assets.resource attribute)": [[192, "pyatlan.model.assets.Resource.RESOURCE_METADATA"]], "resource (class in pyatlan.model.assets)": [[192, "pyatlan.model.assets.Resource"]], "aws_account_id (pyatlan.model.assets.s3 attribute)": [[193, "pyatlan.model.assets.S3.AWS_ACCOUNT_ID"]], "aws_arn (pyatlan.model.assets.s3 attribute)": [[193, "pyatlan.model.assets.S3.AWS_ARN"]], "aws_owner_id (pyatlan.model.assets.s3 attribute)": [[193, "pyatlan.model.assets.S3.AWS_OWNER_ID"]], "aws_owner_name (pyatlan.model.assets.s3 attribute)": [[193, "pyatlan.model.assets.S3.AWS_OWNER_NAME"]], "aws_partition (pyatlan.model.assets.s3 attribute)": [[193, "pyatlan.model.assets.S3.AWS_PARTITION"]], "aws_region (pyatlan.model.assets.s3 attribute)": [[193, "pyatlan.model.assets.S3.AWS_REGION"]], "aws_resource_id (pyatlan.model.assets.s3 attribute)": [[193, "pyatlan.model.assets.S3.AWS_RESOURCE_ID"]], "aws_service (pyatlan.model.assets.s3 attribute)": [[193, "pyatlan.model.assets.S3.AWS_SERVICE"]], "aws_tags (pyatlan.model.assets.s3 attribute)": [[193, "pyatlan.model.assets.S3.AWS_TAGS"]], "s3 (class in pyatlan.model.assets)": [[193, "pyatlan.model.assets.S3"]], "s3encryption (pyatlan.model.assets.s3 attribute)": [[193, "pyatlan.model.assets.S3.S3ENCRYPTION"]], "s3e_tag (pyatlan.model.assets.s3 attribute)": [[193, "pyatlan.model.assets.S3.S3E_TAG"]], "objects (pyatlan.model.assets.s3bucket attribute)": [[194, "pyatlan.model.assets.S3Bucket.OBJECTS"]], "s3bucket_versioning_enabled (pyatlan.model.assets.s3bucket attribute)": [[194, "pyatlan.model.assets.S3Bucket.S3BUCKET_VERSIONING_ENABLED"]], "s3bucket (class in pyatlan.model.assets)": [[194, "pyatlan.model.assets.S3Bucket"]], "s3object_count (pyatlan.model.assets.s3bucket attribute)": [[194, "pyatlan.model.assets.S3Bucket.S3OBJECT_COUNT"]], "bucket (pyatlan.model.assets.s3object attribute)": [[195, "pyatlan.model.assets.S3Object.BUCKET"]], "s3bucket_name (pyatlan.model.assets.s3object attribute)": [[195, "pyatlan.model.assets.S3Object.S3BUCKET_NAME"]], "s3bucket_qualified_name (pyatlan.model.assets.s3object attribute)": [[195, "pyatlan.model.assets.S3Object.S3BUCKET_QUALIFIED_NAME"]], "s3object_content_disposition (pyatlan.model.assets.s3object attribute)": [[195, "pyatlan.model.assets.S3Object.S3OBJECT_CONTENT_DISPOSITION"]], "s3object_content_type (pyatlan.model.assets.s3object attribute)": [[195, "pyatlan.model.assets.S3Object.S3OBJECT_CONTENT_TYPE"]], "s3object_key (pyatlan.model.assets.s3object attribute)": [[195, "pyatlan.model.assets.S3Object.S3OBJECT_KEY"]], "s3object_last_modified_time (pyatlan.model.assets.s3object attribute)": [[195, "pyatlan.model.assets.S3Object.S3OBJECT_LAST_MODIFIED_TIME"]], "s3object_size (pyatlan.model.assets.s3object attribute)": [[195, "pyatlan.model.assets.S3Object.S3OBJECT_SIZE"]], "s3object_storage_class (pyatlan.model.assets.s3object attribute)": [[195, "pyatlan.model.assets.S3Object.S3OBJECT_STORAGE_CLASS"]], "s3object_version_id (pyatlan.model.assets.s3object attribute)": [[195, "pyatlan.model.assets.S3Object.S3OBJECT_VERSION_ID"]], "s3object (class in pyatlan.model.assets)": [[195, "pyatlan.model.assets.S3Object"]], "saas (class in pyatlan.model.assets)": [[196, "pyatlan.model.assets.SaaS"]], "api_name (pyatlan.model.assets.salesforce attribute)": [[197, "pyatlan.model.assets.Salesforce.API_NAME"]], "organization_qualified_name (pyatlan.model.assets.salesforce attribute)": [[197, "pyatlan.model.assets.Salesforce.ORGANIZATION_QUALIFIED_NAME"]], "salesforce (class in pyatlan.model.assets)": [[197, "pyatlan.model.assets.Salesforce"]], "dashboard_type (pyatlan.model.assets.salesforcedashboard attribute)": [[198, "pyatlan.model.assets.SalesforceDashboard.DASHBOARD_TYPE"]], "organization (pyatlan.model.assets.salesforcedashboard attribute)": [[198, "pyatlan.model.assets.SalesforceDashboard.ORGANIZATION"]], "reports (pyatlan.model.assets.salesforcedashboard attribute)": [[198, "pyatlan.model.assets.SalesforceDashboard.REPORTS"]], "report_count (pyatlan.model.assets.salesforcedashboard attribute)": [[198, "pyatlan.model.assets.SalesforceDashboard.REPORT_COUNT"]], "source_id (pyatlan.model.assets.salesforcedashboard attribute)": [[198, "pyatlan.model.assets.SalesforceDashboard.SOURCE_ID"]], "salesforcedashboard (class in pyatlan.model.assets)": [[198, "pyatlan.model.assets.SalesforceDashboard"]], "data_type (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.DATA_TYPE"]], "default_value_formula (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.DEFAULT_VALUE_FORMULA"]], "formula (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.FORMULA"]], "inline_help_text (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.INLINE_HELP_TEXT"]], "is_calculated (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.IS_CALCULATED"]], "is_case_sensitive (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.IS_CASE_SENSITIVE"]], "is_encrypted (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.IS_ENCRYPTED"]], "is_nullable (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.IS_NULLABLE"]], "is_polymorphic_foreign_key (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.IS_POLYMORPHIC_FOREIGN_KEY"]], "is_unique (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.IS_UNIQUE"]], "lookup_objects (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.LOOKUP_OBJECTS"]], "max_length (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.MAX_LENGTH"]], "numeric_scale (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.NUMERIC_SCALE"]], "object (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.OBJECT"]], "object_qualified_name (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.OBJECT_QUALIFIED_NAME"]], "order (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.ORDER"]], "picklist_values (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.PICKLIST_VALUES"]], "precision (pyatlan.model.assets.salesforcefield attribute)": [[199, "pyatlan.model.assets.SalesforceField.PRECISION"]], "salesforcefield (class in pyatlan.model.assets)": [[199, "pyatlan.model.assets.SalesforceField"]], "fields (pyatlan.model.assets.salesforceobject attribute)": [[200, "pyatlan.model.assets.SalesforceObject.FIELDS"]], "field_count (pyatlan.model.assets.salesforceobject attribute)": [[200, "pyatlan.model.assets.SalesforceObject.FIELD_COUNT"]], "is_custom (pyatlan.model.assets.salesforceobject attribute)": [[200, "pyatlan.model.assets.SalesforceObject.IS_CUSTOM"]], "is_mergable (pyatlan.model.assets.salesforceobject attribute)": [[200, "pyatlan.model.assets.SalesforceObject.IS_MERGABLE"]], "is_queryable (pyatlan.model.assets.salesforceobject attribute)": [[200, "pyatlan.model.assets.SalesforceObject.IS_QUERYABLE"]], "lookup_fields (pyatlan.model.assets.salesforceobject attribute)": [[200, "pyatlan.model.assets.SalesforceObject.LOOKUP_FIELDS"]], "organization (pyatlan.model.assets.salesforceobject attribute)": [[200, "pyatlan.model.assets.SalesforceObject.ORGANIZATION"]], "salesforceobject (class in pyatlan.model.assets)": [[200, "pyatlan.model.assets.SalesforceObject"]], "dashboards (pyatlan.model.assets.salesforceorganization attribute)": [[201, "pyatlan.model.assets.SalesforceOrganization.DASHBOARDS"]], "objects (pyatlan.model.assets.salesforceorganization attribute)": [[201, "pyatlan.model.assets.SalesforceOrganization.OBJECTS"]], "reports (pyatlan.model.assets.salesforceorganization attribute)": [[201, "pyatlan.model.assets.SalesforceOrganization.REPORTS"]], "source_id (pyatlan.model.assets.salesforceorganization attribute)": [[201, "pyatlan.model.assets.SalesforceOrganization.SOURCE_ID"]], "salesforceorganization (class in pyatlan.model.assets)": [[201, "pyatlan.model.assets.SalesforceOrganization"]], "dashboards (pyatlan.model.assets.salesforcereport attribute)": [[202, "pyatlan.model.assets.SalesforceReport.DASHBOARDS"]], "detail_columns (pyatlan.model.assets.salesforcereport attribute)": [[202, "pyatlan.model.assets.SalesforceReport.DETAIL_COLUMNS"]], "organization (pyatlan.model.assets.salesforcereport attribute)": [[202, "pyatlan.model.assets.SalesforceReport.ORGANIZATION"]], "report_type (pyatlan.model.assets.salesforcereport attribute)": [[202, "pyatlan.model.assets.SalesforceReport.REPORT_TYPE"]], "source_id (pyatlan.model.assets.salesforcereport attribute)": [[202, "pyatlan.model.assets.SalesforceReport.SOURCE_ID"]], "salesforcereport (class in pyatlan.model.assets)": [[202, "pyatlan.model.assets.SalesforceReport"]], "calculation_views (pyatlan.model.assets.schema attribute)": [[203, "pyatlan.model.assets.Schema.CALCULATION_VIEWS"]], "database (pyatlan.model.assets.schema attribute)": [[203, "pyatlan.model.assets.Schema.DATABASE"]], "functions (pyatlan.model.assets.schema attribute)": [[203, "pyatlan.model.assets.Schema.FUNCTIONS"]], "linked_schema_qualified_name (pyatlan.model.assets.schema attribute)": [[203, "pyatlan.model.assets.Schema.LINKED_SCHEMA_QUALIFIED_NAME"]], "materialised_views (pyatlan.model.assets.schema attribute)": [[203, "pyatlan.model.assets.Schema.MATERIALISED_VIEWS"]], "procedures (pyatlan.model.assets.schema attribute)": [[203, "pyatlan.model.assets.Schema.PROCEDURES"]], "snowflake_dynamic_tables (pyatlan.model.assets.schema attribute)": [[203, "pyatlan.model.assets.Schema.SNOWFLAKE_DYNAMIC_TABLES"]], "snowflake_pipes (pyatlan.model.assets.schema attribute)": [[203, "pyatlan.model.assets.Schema.SNOWFLAKE_PIPES"]], "snowflake_streams (pyatlan.model.assets.schema attribute)": [[203, "pyatlan.model.assets.Schema.SNOWFLAKE_STREAMS"]], "snowflake_tags (pyatlan.model.assets.schema attribute)": [[203, "pyatlan.model.assets.Schema.SNOWFLAKE_TAGS"]], "schema (class in pyatlan.model.assets)": [[203, "pyatlan.model.assets.Schema"]], "tables (pyatlan.model.assets.schema attribute)": [[203, "pyatlan.model.assets.Schema.TABLES"]], "table_count (pyatlan.model.assets.schema attribute)": [[203, "pyatlan.model.assets.Schema.TABLE_COUNT"]], "views (pyatlan.model.assets.schema attribute)": [[203, "pyatlan.model.assets.Schema.VIEWS"]], "views_count (pyatlan.model.assets.schema attribute)": [[203, "pyatlan.model.assets.Schema.VIEWS_COUNT"]], "schema_registry_schema_id (pyatlan.model.assets.schemaregistry attribute)": [[204, "pyatlan.model.assets.SchemaRegistry.SCHEMA_REGISTRY_SCHEMA_ID"]], "schema_registry_schema_type (pyatlan.model.assets.schemaregistry attribute)": [[204, "pyatlan.model.assets.SchemaRegistry.SCHEMA_REGISTRY_SCHEMA_TYPE"]], "schemaregistry (class in pyatlan.model.assets)": [[204, "pyatlan.model.assets.SchemaRegistry"]], "assets (pyatlan.model.assets.schemaregistrysubject attribute)": [[205, "pyatlan.model.assets.SchemaRegistrySubject.ASSETS"]], "schema_registry_subject_base_name (pyatlan.model.assets.schemaregistrysubject attribute)": [[205, "pyatlan.model.assets.SchemaRegistrySubject.SCHEMA_REGISTRY_SUBJECT_BASE_NAME"]], "schema_registry_subject_governing_asset_qualified_names (pyatlan.model.assets.schemaregistrysubject attribute)": [[205, "pyatlan.model.assets.SchemaRegistrySubject.SCHEMA_REGISTRY_SUBJECT_GOVERNING_ASSET_QUALIFIED_NAMES"]], "schema_registry_subject_is_key_schema (pyatlan.model.assets.schemaregistrysubject attribute)": [[205, "pyatlan.model.assets.SchemaRegistrySubject.SCHEMA_REGISTRY_SUBJECT_IS_KEY_SCHEMA"]], "schema_registry_subject_latest_schema_definition (pyatlan.model.assets.schemaregistrysubject attribute)": [[205, "pyatlan.model.assets.SchemaRegistrySubject.SCHEMA_REGISTRY_SUBJECT_LATEST_SCHEMA_DEFINITION"]], "schema_registry_subject_latest_schema_version (pyatlan.model.assets.schemaregistrysubject attribute)": [[205, "pyatlan.model.assets.SchemaRegistrySubject.SCHEMA_REGISTRY_SUBJECT_LATEST_SCHEMA_VERSION"]], "schema_registry_subject_schema_compatibility (pyatlan.model.assets.schemaregistrysubject attribute)": [[205, "pyatlan.model.assets.SchemaRegistrySubject.SCHEMA_REGISTRY_SUBJECT_SCHEMA_COMPATIBILITY"]], "schemaregistrysubject (class in pyatlan.model.assets)": [[205, "pyatlan.model.assets.SchemaRegistrySubject"]], "sigma_data_element_name (pyatlan.model.assets.sigma attribute)": [[206, "pyatlan.model.assets.Sigma.SIGMA_DATA_ELEMENT_NAME"]], "sigma_data_element_qualified_name (pyatlan.model.assets.sigma attribute)": [[206, "pyatlan.model.assets.Sigma.SIGMA_DATA_ELEMENT_QUALIFIED_NAME"]], "sigma_page_name (pyatlan.model.assets.sigma attribute)": [[206, "pyatlan.model.assets.Sigma.SIGMA_PAGE_NAME"]], "sigma_page_qualified_name (pyatlan.model.assets.sigma attribute)": [[206, "pyatlan.model.assets.Sigma.SIGMA_PAGE_QUALIFIED_NAME"]], "sigma_workbook_name (pyatlan.model.assets.sigma attribute)": [[206, "pyatlan.model.assets.Sigma.SIGMA_WORKBOOK_NAME"]], "sigma_workbook_qualified_name (pyatlan.model.assets.sigma attribute)": [[206, "pyatlan.model.assets.Sigma.SIGMA_WORKBOOK_QUALIFIED_NAME"]], "sigma (class in pyatlan.model.assets)": [[206, "pyatlan.model.assets.Sigma"]], "sigma_data_element_fields (pyatlan.model.assets.sigmadataelement attribute)": [[207, "pyatlan.model.assets.SigmaDataElement.SIGMA_DATA_ELEMENT_FIELDS"]], "sigma_data_element_field_count (pyatlan.model.assets.sigmadataelement attribute)": [[207, "pyatlan.model.assets.SigmaDataElement.SIGMA_DATA_ELEMENT_FIELD_COUNT"]], "sigma_data_element_query (pyatlan.model.assets.sigmadataelement attribute)": [[207, "pyatlan.model.assets.SigmaDataElement.SIGMA_DATA_ELEMENT_QUERY"]], "sigma_data_element_type (pyatlan.model.assets.sigmadataelement attribute)": [[207, "pyatlan.model.assets.SigmaDataElement.SIGMA_DATA_ELEMENT_TYPE"]], "sigma_page (pyatlan.model.assets.sigmadataelement attribute)": [[207, "pyatlan.model.assets.SigmaDataElement.SIGMA_PAGE"]], "sigmadataelement (class in pyatlan.model.assets)": [[207, "pyatlan.model.assets.SigmaDataElement"]], "sigma_data_element (pyatlan.model.assets.sigmadataelementfield attribute)": [[208, "pyatlan.model.assets.SigmaDataElementField.SIGMA_DATA_ELEMENT"]], "sigma_data_element_field_formula (pyatlan.model.assets.sigmadataelementfield attribute)": [[208, "pyatlan.model.assets.SigmaDataElementField.SIGMA_DATA_ELEMENT_FIELD_FORMULA"]], "sigma_data_element_field_is_hidden (pyatlan.model.assets.sigmadataelementfield attribute)": [[208, "pyatlan.model.assets.SigmaDataElementField.SIGMA_DATA_ELEMENT_FIELD_IS_HIDDEN"]], "sigmadataelementfield (class in pyatlan.model.assets)": [[208, "pyatlan.model.assets.SigmaDataElementField"]], "sigma_dataset_columns (pyatlan.model.assets.sigmadataset attribute)": [[209, "pyatlan.model.assets.SigmaDataset.SIGMA_DATASET_COLUMNS"]], "sigma_dataset_column_count (pyatlan.model.assets.sigmadataset attribute)": [[209, "pyatlan.model.assets.SigmaDataset.SIGMA_DATASET_COLUMN_COUNT"]], "sigmadataset (class in pyatlan.model.assets)": [[209, "pyatlan.model.assets.SigmaDataset"]], "sigma_dataset (pyatlan.model.assets.sigmadatasetcolumn attribute)": [[210, "pyatlan.model.assets.SigmaDatasetColumn.SIGMA_DATASET"]], "sigma_dataset_name (pyatlan.model.assets.sigmadatasetcolumn attribute)": [[210, "pyatlan.model.assets.SigmaDatasetColumn.SIGMA_DATASET_NAME"]], "sigma_dataset_qualified_name (pyatlan.model.assets.sigmadatasetcolumn attribute)": [[210, "pyatlan.model.assets.SigmaDatasetColumn.SIGMA_DATASET_QUALIFIED_NAME"]], "sigmadatasetcolumn (class in pyatlan.model.assets)": [[210, "pyatlan.model.assets.SigmaDatasetColumn"]], "sigma_data_elements (pyatlan.model.assets.sigmapage attribute)": [[211, "pyatlan.model.assets.SigmaPage.SIGMA_DATA_ELEMENTS"]], "sigma_data_element_count (pyatlan.model.assets.sigmapage attribute)": [[211, "pyatlan.model.assets.SigmaPage.SIGMA_DATA_ELEMENT_COUNT"]], "sigma_workbook (pyatlan.model.assets.sigmapage attribute)": [[211, "pyatlan.model.assets.SigmaPage.SIGMA_WORKBOOK"]], "sigmapage (class in pyatlan.model.assets)": [[211, "pyatlan.model.assets.SigmaPage"]], "sigma_pages (pyatlan.model.assets.sigmaworkbook attribute)": [[212, "pyatlan.model.assets.SigmaWorkbook.SIGMA_PAGES"]], "sigma_page_count (pyatlan.model.assets.sigmaworkbook attribute)": [[212, "pyatlan.model.assets.SigmaWorkbook.SIGMA_PAGE_COUNT"]], "sigmaworkbook (class in pyatlan.model.assets)": [[212, "pyatlan.model.assets.SigmaWorkbook"]], "sisense (class in pyatlan.model.assets)": [[213, "pyatlan.model.assets.Sisense"]], "sisense_dashboard_folder_qualified_name (pyatlan.model.assets.sisensedashboard attribute)": [[214, "pyatlan.model.assets.SisenseDashboard.SISENSE_DASHBOARD_FOLDER_QUALIFIED_NAME"]], "sisense_dashboard_widget_count (pyatlan.model.assets.sisensedashboard attribute)": [[214, "pyatlan.model.assets.SisenseDashboard.SISENSE_DASHBOARD_WIDGET_COUNT"]], "sisense_datamodels (pyatlan.model.assets.sisensedashboard attribute)": [[214, "pyatlan.model.assets.SisenseDashboard.SISENSE_DATAMODELS"]], "sisense_folder (pyatlan.model.assets.sisensedashboard attribute)": [[214, "pyatlan.model.assets.SisenseDashboard.SISENSE_FOLDER"]], "sisense_widgets (pyatlan.model.assets.sisensedashboard attribute)": [[214, "pyatlan.model.assets.SisenseDashboard.SISENSE_WIDGETS"]], "sisensedashboard (class in pyatlan.model.assets)": [[214, "pyatlan.model.assets.SisenseDashboard"]], "sisense_dashboards (pyatlan.model.assets.sisensedatamodel attribute)": [[215, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DASHBOARDS"]], "sisense_datamodel_last_build_time (pyatlan.model.assets.sisensedatamodel attribute)": [[215, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_LAST_BUILD_TIME"]], "sisense_datamodel_last_publish_time (pyatlan.model.assets.sisensedatamodel attribute)": [[215, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_LAST_PUBLISH_TIME"]], "sisense_datamodel_last_successful_build_time (pyatlan.model.assets.sisensedatamodel attribute)": [[215, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_LAST_SUCCESSFUL_BUILD_TIME"]], "sisense_datamodel_relation_type (pyatlan.model.assets.sisensedatamodel attribute)": [[215, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_RELATION_TYPE"]], "sisense_datamodel_revision (pyatlan.model.assets.sisensedatamodel attribute)": [[215, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_REVISION"]], "sisense_datamodel_server (pyatlan.model.assets.sisensedatamodel attribute)": [[215, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_SERVER"]], "sisense_datamodel_tables (pyatlan.model.assets.sisensedatamodel attribute)": [[215, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_TABLES"]], "sisense_datamodel_table_count (pyatlan.model.assets.sisensedatamodel attribute)": [[215, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_TABLE_COUNT"]], "sisense_datamodel_type (pyatlan.model.assets.sisensedatamodel attribute)": [[215, "pyatlan.model.assets.SisenseDatamodel.SISENSE_DATAMODEL_TYPE"]], "sisensedatamodel (class in pyatlan.model.assets)": [[215, "pyatlan.model.assets.SisenseDatamodel"]], "sisense_datamodel (pyatlan.model.assets.sisensedatamodeltable attribute)": [[216, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL"]], "sisense_datamodel_qualified_name (pyatlan.model.assets.sisensedatamodeltable attribute)": [[216, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_QUALIFIED_NAME"]], "sisense_datamodel_table_column_count (pyatlan.model.assets.sisensedatamodeltable attribute)": [[216, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_TABLE_COLUMN_COUNT"]], "sisense_datamodel_table_expression (pyatlan.model.assets.sisensedatamodeltable attribute)": [[216, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_TABLE_EXPRESSION"]], "sisense_datamodel_table_is_hidden (pyatlan.model.assets.sisensedatamodeltable attribute)": [[216, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_TABLE_IS_HIDDEN"]], "sisense_datamodel_table_is_materialized (pyatlan.model.assets.sisensedatamodeltable attribute)": [[216, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_TABLE_IS_MATERIALIZED"]], "sisense_datamodel_table_live_query_settings (pyatlan.model.assets.sisensedatamodeltable attribute)": [[216, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_TABLE_LIVE_QUERY_SETTINGS"]], "sisense_datamodel_table_schedule (pyatlan.model.assets.sisensedatamodeltable attribute)": [[216, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_TABLE_SCHEDULE"]], "sisense_datamodel_table_type (pyatlan.model.assets.sisensedatamodeltable attribute)": [[216, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_DATAMODEL_TABLE_TYPE"]], "sisense_widgets (pyatlan.model.assets.sisensedatamodeltable attribute)": [[216, "pyatlan.model.assets.SisenseDatamodelTable.SISENSE_WIDGETS"]], "sisensedatamodeltable (class in pyatlan.model.assets)": [[216, "pyatlan.model.assets.SisenseDatamodelTable"]], "sisense_child_folders (pyatlan.model.assets.sisensefolder attribute)": [[217, "pyatlan.model.assets.SisenseFolder.SISENSE_CHILD_FOLDERS"]], "sisense_dashboards (pyatlan.model.assets.sisensefolder attribute)": [[217, "pyatlan.model.assets.SisenseFolder.SISENSE_DASHBOARDS"]], "sisense_folder_parent_folder_qualified_name (pyatlan.model.assets.sisensefolder attribute)": [[217, "pyatlan.model.assets.SisenseFolder.SISENSE_FOLDER_PARENT_FOLDER_QUALIFIED_NAME"]], "sisense_parent_folder (pyatlan.model.assets.sisensefolder attribute)": [[217, "pyatlan.model.assets.SisenseFolder.SISENSE_PARENT_FOLDER"]], "sisense_widgets (pyatlan.model.assets.sisensefolder attribute)": [[217, "pyatlan.model.assets.SisenseFolder.SISENSE_WIDGETS"]], "sisensefolder (class in pyatlan.model.assets)": [[217, "pyatlan.model.assets.SisenseFolder"]], "sisense_dashboard (pyatlan.model.assets.sisensewidget attribute)": [[218, "pyatlan.model.assets.SisenseWidget.SISENSE_DASHBOARD"]], "sisense_datamodel_tables (pyatlan.model.assets.sisensewidget attribute)": [[218, "pyatlan.model.assets.SisenseWidget.SISENSE_DATAMODEL_TABLES"]], "sisense_folder (pyatlan.model.assets.sisensewidget attribute)": [[218, "pyatlan.model.assets.SisenseWidget.SISENSE_FOLDER"]], "sisense_widget_column_count (pyatlan.model.assets.sisensewidget attribute)": [[218, "pyatlan.model.assets.SisenseWidget.SISENSE_WIDGET_COLUMN_COUNT"]], "sisense_widget_dashboard_qualified_name (pyatlan.model.assets.sisensewidget attribute)": [[218, "pyatlan.model.assets.SisenseWidget.SISENSE_WIDGET_DASHBOARD_QUALIFIED_NAME"]], "sisense_widget_folder_qualified_name (pyatlan.model.assets.sisensewidget attribute)": [[218, "pyatlan.model.assets.SisenseWidget.SISENSE_WIDGET_FOLDER_QUALIFIED_NAME"]], "sisense_widget_size (pyatlan.model.assets.sisensewidget attribute)": [[218, "pyatlan.model.assets.SisenseWidget.SISENSE_WIDGET_SIZE"]], "sisense_widget_sub_type (pyatlan.model.assets.sisensewidget attribute)": [[218, "pyatlan.model.assets.SisenseWidget.SISENSE_WIDGET_SUB_TYPE"]], "sisensewidget (class in pyatlan.model.assets)": [[218, "pyatlan.model.assets.SisenseWidget"]], "definition (pyatlan.model.assets.snowflakedynamictable attribute)": [[219, "pyatlan.model.assets.SnowflakeDynamicTable.DEFINITION"]], "snowflakedynamictable (class in pyatlan.model.assets)": [[219, "pyatlan.model.assets.SnowflakeDynamicTable"]], "atlan_schema (pyatlan.model.assets.snowflakepipe attribute)": [[220, "pyatlan.model.assets.SnowflakePipe.ATLAN_SCHEMA"]], "definition (pyatlan.model.assets.snowflakepipe attribute)": [[220, "pyatlan.model.assets.SnowflakePipe.DEFINITION"]], "snowflake_pipe_is_auto_ingest_enabled (pyatlan.model.assets.snowflakepipe attribute)": [[220, "pyatlan.model.assets.SnowflakePipe.SNOWFLAKE_PIPE_IS_AUTO_INGEST_ENABLED"]], "snowflake_pipe_notification_channel_name (pyatlan.model.assets.snowflakepipe attribute)": [[220, "pyatlan.model.assets.SnowflakePipe.SNOWFLAKE_PIPE_NOTIFICATION_CHANNEL_NAME"]], "snowflakepipe (class in pyatlan.model.assets)": [[220, "pyatlan.model.assets.SnowflakePipe"]], "atlan_schema (pyatlan.model.assets.snowflakestream attribute)": [[221, "pyatlan.model.assets.SnowflakeStream.ATLAN_SCHEMA"]], "snowflake_stream_is_stale (pyatlan.model.assets.snowflakestream attribute)": [[221, "pyatlan.model.assets.SnowflakeStream.SNOWFLAKE_STREAM_IS_STALE"]], "snowflake_stream_mode (pyatlan.model.assets.snowflakestream attribute)": [[221, "pyatlan.model.assets.SnowflakeStream.SNOWFLAKE_STREAM_MODE"]], "snowflake_stream_source_type (pyatlan.model.assets.snowflakestream attribute)": [[221, "pyatlan.model.assets.SnowflakeStream.SNOWFLAKE_STREAM_SOURCE_TYPE"]], "snowflake_stream_stale_after (pyatlan.model.assets.snowflakestream attribute)": [[221, "pyatlan.model.assets.SnowflakeStream.SNOWFLAKE_STREAM_STALE_AFTER"]], "snowflake_stream_type (pyatlan.model.assets.snowflakestream attribute)": [[221, "pyatlan.model.assets.SnowflakeStream.SNOWFLAKE_STREAM_TYPE"]], "snowflakestream (class in pyatlan.model.assets)": [[221, "pyatlan.model.assets.SnowflakeStream"]], "atlan_schema (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.ATLAN_SCHEMA"]], "calculation_view_name (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.CALCULATION_VIEW_NAME"]], "calculation_view_qualified_name (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.CALCULATION_VIEW_QUALIFIED_NAME"]], "database_name (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.DATABASE_NAME"]], "database_qualified_name (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.DATABASE_QUALIFIED_NAME"]], "dbt_models (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.DBT_MODELS"]], "dbt_sources (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.DBT_SOURCES"]], "dbt_tests (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.DBT_TESTS"]], "is_profiled (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.IS_PROFILED"]], "last_profiled_at (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.LAST_PROFILED_AT"]], "mapped_classification_name (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.MAPPED_CLASSIFICATION_NAME"]], "query_count (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.QUERY_COUNT"]], "query_count_updated_at (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.QUERY_COUNT_UPDATED_AT"]], "query_user_count (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.QUERY_USER_COUNT"]], "query_user_map (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.QUERY_USER_MAP"]], "schema_name (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.SCHEMA_NAME"]], "schema_qualified_name (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.SCHEMA_QUALIFIED_NAME"]], "sql_dbt_models (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.SQL_DBT_MODELS"]], "sql_dbt_sources (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.SQL_DBT_SOURCES"]], "snowflaketag (class in pyatlan.model.assets)": [[222, "pyatlan.model.assets.SnowflakeTag"]], "table_name (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.TABLE_NAME"]], "table_qualified_name (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.TABLE_QUALIFIED_NAME"]], "tag_allowed_values (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.TAG_ALLOWED_VALUES"]], "tag_attributes (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.TAG_ATTRIBUTES"]], "tag_id (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.TAG_ID"]], "view_name (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.VIEW_NAME"]], "view_qualified_name (pyatlan.model.assets.snowflaketag attribute)": [[222, "pyatlan.model.assets.SnowflakeTag.VIEW_QUALIFIED_NAME"]], "soda (class in pyatlan.model.assets)": [[223, "pyatlan.model.assets.Soda"]], "soda_check_assets (pyatlan.model.assets.sodacheck attribute)": [[224, "pyatlan.model.assets.SodaCheck.SODA_CHECK_ASSETS"]], "soda_check_columns (pyatlan.model.assets.sodacheck attribute)": [[224, "pyatlan.model.assets.SodaCheck.SODA_CHECK_COLUMNS"]], "soda_check_definition (pyatlan.model.assets.sodacheck attribute)": [[224, "pyatlan.model.assets.SodaCheck.SODA_CHECK_DEFINITION"]], "soda_check_evaluation_status (pyatlan.model.assets.sodacheck attribute)": [[224, "pyatlan.model.assets.SodaCheck.SODA_CHECK_EVALUATION_STATUS"]], "soda_check_id (pyatlan.model.assets.sodacheck attribute)": [[224, "pyatlan.model.assets.SodaCheck.SODA_CHECK_ID"]], "soda_check_incident_count (pyatlan.model.assets.sodacheck attribute)": [[224, "pyatlan.model.assets.SodaCheck.SODA_CHECK_INCIDENT_COUNT"]], "soda_check_last_scan_at (pyatlan.model.assets.sodacheck attribute)": [[224, "pyatlan.model.assets.SodaCheck.SODA_CHECK_LAST_SCAN_AT"]], "sodacheck (class in pyatlan.model.assets)": [[224, "pyatlan.model.assets.SodaCheck"]], "spark_run_end_time (pyatlan.model.assets.spark attribute)": [[225, "pyatlan.model.assets.Spark.SPARK_RUN_END_TIME"]], "spark_run_open_lineage_state (pyatlan.model.assets.spark attribute)": [[225, "pyatlan.model.assets.Spark.SPARK_RUN_OPEN_LINEAGE_STATE"]], "spark_run_open_lineage_version (pyatlan.model.assets.spark attribute)": [[225, "pyatlan.model.assets.Spark.SPARK_RUN_OPEN_LINEAGE_VERSION"]], "spark_run_start_time (pyatlan.model.assets.spark attribute)": [[225, "pyatlan.model.assets.Spark.SPARK_RUN_START_TIME"]], "spark_run_version (pyatlan.model.assets.spark attribute)": [[225, "pyatlan.model.assets.Spark.SPARK_RUN_VERSION"]], "spark (class in pyatlan.model.assets)": [[225, "pyatlan.model.assets.Spark"]], "inputs (pyatlan.model.assets.sparkjob attribute)": [[226, "pyatlan.model.assets.SparkJob.INPUTS"]], "outputs (pyatlan.model.assets.sparkjob attribute)": [[226, "pyatlan.model.assets.SparkJob.OUTPUTS"]], "process (pyatlan.model.assets.sparkjob attribute)": [[226, "pyatlan.model.assets.SparkJob.PROCESS"]], "spark_app_name (pyatlan.model.assets.sparkjob attribute)": [[226, "pyatlan.model.assets.SparkJob.SPARK_APP_NAME"]], "spark_master (pyatlan.model.assets.sparkjob attribute)": [[226, "pyatlan.model.assets.SparkJob.SPARK_MASTER"]], "sparkjob (class in pyatlan.model.assets)": [[226, "pyatlan.model.assets.SparkJob"]], "calculation_view_name (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.CALCULATION_VIEW_NAME"]], "calculation_view_qualified_name (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.CALCULATION_VIEW_QUALIFIED_NAME"]], "database_name (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.DATABASE_NAME"]], "database_qualified_name (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.DATABASE_QUALIFIED_NAME"]], "dbt_models (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.DBT_MODELS"]], "dbt_sources (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.DBT_SOURCES"]], "dbt_tests (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.DBT_TESTS"]], "is_profiled (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.IS_PROFILED"]], "last_profiled_at (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.LAST_PROFILED_AT"]], "query_count (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.QUERY_COUNT"]], "query_count_updated_at (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.QUERY_COUNT_UPDATED_AT"]], "query_user_count (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.QUERY_USER_COUNT"]], "query_user_map (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.QUERY_USER_MAP"]], "schema_name (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.SCHEMA_NAME"]], "schema_qualified_name (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.SCHEMA_QUALIFIED_NAME"]], "sql (class in pyatlan.model.assets)": [[227, "pyatlan.model.assets.SQL"]], "sql_dbt_models (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.SQL_DBT_MODELS"]], "sql_dbt_sources (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.SQL_DBT_SOURCES"]], "table_name (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.TABLE_NAME"]], "table_qualified_name (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.TABLE_QUALIFIED_NAME"]], "view_name (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.VIEW_NAME"]], "view_qualified_name (pyatlan.model.assets.sql attribute)": [[227, "pyatlan.model.assets.SQL.VIEW_QUALIFIED_NAME"]], "stakeholder_data_domain (pyatlan.model.assets.stakeholder attribute)": [[228, "pyatlan.model.assets.Stakeholder.STAKEHOLDER_DATA_DOMAIN"]], "stakeholder_domain_qualified_name (pyatlan.model.assets.stakeholder attribute)": [[228, "pyatlan.model.assets.Stakeholder.STAKEHOLDER_DOMAIN_QUALIFIED_NAME"]], "stakeholder_title (pyatlan.model.assets.stakeholder attribute)": [[228, "pyatlan.model.assets.Stakeholder.STAKEHOLDER_TITLE"]], "stakeholder_title_guid (pyatlan.model.assets.stakeholder attribute)": [[228, "pyatlan.model.assets.Stakeholder.STAKEHOLDER_TITLE_GUID"]], "stakeholder (class in pyatlan.model.assets)": [[228, "pyatlan.model.assets.Stakeholder"]], "stakeholders (pyatlan.model.assets.stakeholdertitle attribute)": [[229, "pyatlan.model.assets.StakeholderTitle.STAKEHOLDERS"]], "stakeholder_title_domain_qualified_names (pyatlan.model.assets.stakeholdertitle attribute)": [[229, "pyatlan.model.assets.StakeholderTitle.STAKEHOLDER_TITLE_DOMAIN_QUALIFIED_NAMES"]], "stakeholdertitle (class in pyatlan.model.assets)": [[229, "pyatlan.model.assets.StakeholderTitle"]], "alias (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.ALIAS"]], "atlan_schema (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.ATLAN_SCHEMA"]], "columns (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.COLUMNS"]], "column_count (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.COLUMN_COUNT"]], "dimensions (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.DIMENSIONS"]], "external_location (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.EXTERNAL_LOCATION"]], "external_location_format (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.EXTERNAL_LOCATION_FORMAT"]], "external_location_region (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.EXTERNAL_LOCATION_REGION"]], "facts (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.FACTS"]], "is_partitioned (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.IS_PARTITIONED"]], "is_query_preview (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.IS_QUERY_PREVIEW"]], "is_sharded (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.IS_SHARDED"]], "is_temporary (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.IS_TEMPORARY"]], "partitions (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.PARTITIONS"]], "partition_count (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.PARTITION_COUNT"]], "partition_list (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.PARTITION_LIST"]], "partition_strategy (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.PARTITION_STRATEGY"]], "queries (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.QUERIES"]], "query_preview_config (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.QUERY_PREVIEW_CONFIG"]], "row_count (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.ROW_COUNT"]], "size_bytes (pyatlan.model.assets.table attribute)": [[230, "pyatlan.model.assets.Table.SIZE_BYTES"]], "table (class in pyatlan.model.assets)": [[230, "pyatlan.model.assets.Table"]], "tableau (class in pyatlan.model.assets)": [[231, "pyatlan.model.assets.Tableau"]], "datasource (pyatlan.model.assets.tableaucalculatedfield attribute)": [[232, "pyatlan.model.assets.TableauCalculatedField.DATASOURCE"]], "datasource_qualified_name (pyatlan.model.assets.tableaucalculatedfield attribute)": [[232, "pyatlan.model.assets.TableauCalculatedField.DATASOURCE_QUALIFIED_NAME"]], "data_category (pyatlan.model.assets.tableaucalculatedfield attribute)": [[232, "pyatlan.model.assets.TableauCalculatedField.DATA_CATEGORY"]], "formula (pyatlan.model.assets.tableaucalculatedfield attribute)": [[232, "pyatlan.model.assets.TableauCalculatedField.FORMULA"]], "project_hierarchy (pyatlan.model.assets.tableaucalculatedfield attribute)": [[232, "pyatlan.model.assets.TableauCalculatedField.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableaucalculatedfield attribute)": [[232, "pyatlan.model.assets.TableauCalculatedField.PROJECT_QUALIFIED_NAME"]], "role (pyatlan.model.assets.tableaucalculatedfield attribute)": [[232, "pyatlan.model.assets.TableauCalculatedField.ROLE"]], "site_qualified_name (pyatlan.model.assets.tableaucalculatedfield attribute)": [[232, "pyatlan.model.assets.TableauCalculatedField.SITE_QUALIFIED_NAME"]], "tableau_data_type (pyatlan.model.assets.tableaucalculatedfield attribute)": [[232, "pyatlan.model.assets.TableauCalculatedField.TABLEAU_DATA_TYPE"]], "top_level_project_qualified_name (pyatlan.model.assets.tableaucalculatedfield attribute)": [[232, "pyatlan.model.assets.TableauCalculatedField.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableaucalculatedfield (class in pyatlan.model.assets)": [[232, "pyatlan.model.assets.TableauCalculatedField"]], "upstream_fields (pyatlan.model.assets.tableaucalculatedfield attribute)": [[232, "pyatlan.model.assets.TableauCalculatedField.UPSTREAM_FIELDS"]], "workbook_qualified_name (pyatlan.model.assets.tableaucalculatedfield attribute)": [[232, "pyatlan.model.assets.TableauCalculatedField.WORKBOOK_QUALIFIED_NAME"]], "worksheets (pyatlan.model.assets.tableaucalculatedfield attribute)": [[232, "pyatlan.model.assets.TableauCalculatedField.WORKSHEETS"]], "project_hierarchy (pyatlan.model.assets.tableaudashboard attribute)": [[233, "pyatlan.model.assets.TableauDashboard.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableaudashboard attribute)": [[233, "pyatlan.model.assets.TableauDashboard.PROJECT_QUALIFIED_NAME"]], "site_qualified_name (pyatlan.model.assets.tableaudashboard attribute)": [[233, "pyatlan.model.assets.TableauDashboard.SITE_QUALIFIED_NAME"]], "top_level_project_qualified_name (pyatlan.model.assets.tableaudashboard attribute)": [[233, "pyatlan.model.assets.TableauDashboard.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableaudashboard (class in pyatlan.model.assets)": [[233, "pyatlan.model.assets.TableauDashboard"]], "workbook (pyatlan.model.assets.tableaudashboard attribute)": [[233, "pyatlan.model.assets.TableauDashboard.WORKBOOK"]], "workbook_qualified_name (pyatlan.model.assets.tableaudashboard attribute)": [[233, "pyatlan.model.assets.TableauDashboard.WORKBOOK_QUALIFIED_NAME"]], "worksheets (pyatlan.model.assets.tableaudashboard attribute)": [[233, "pyatlan.model.assets.TableauDashboard.WORKSHEETS"]], "certification_note (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.CERTIFICATION_NOTE"]], "certifier (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.CERTIFIER"]], "certifier_display_name (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.CERTIFIER_DISPLAY_NAME"]], "fields (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.FIELDS"]], "has_extracts (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.HAS_EXTRACTS"]], "is_certified (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.IS_CERTIFIED"]], "is_published (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.IS_PUBLISHED"]], "project (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.PROJECT"]], "project_hierarchy (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.PROJECT_QUALIFIED_NAME"]], "site_qualified_name (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.SITE_QUALIFIED_NAME"]], "top_level_project_qualified_name (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableaudatasource (class in pyatlan.model.assets)": [[234, "pyatlan.model.assets.TableauDatasource"]], "upstream_datasources (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.UPSTREAM_DATASOURCES"]], "upstream_tables (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.UPSTREAM_TABLES"]], "workbook (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.WORKBOOK"]], "workbook_qualified_name (pyatlan.model.assets.tableaudatasource attribute)": [[234, "pyatlan.model.assets.TableauDatasource.WORKBOOK_QUALIFIED_NAME"]], "datasource (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.DATASOURCE"]], "datasource_field_type (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.DATASOURCE_FIELD_TYPE"]], "datasource_qualified_name (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.DATASOURCE_QUALIFIED_NAME"]], "fully_qualified_name (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.FULLY_QUALIFIED_NAME"]], "project_hierarchy (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.PROJECT_QUALIFIED_NAME"]], "site_qualified_name (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.SITE_QUALIFIED_NAME"]], "tableau_datasource_field_bin_size (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.TABLEAU_DATASOURCE_FIELD_BIN_SIZE"]], "tableau_datasource_field_data_category (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.TABLEAU_DATASOURCE_FIELD_DATA_CATEGORY"]], "tableau_datasource_field_data_type (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.TABLEAU_DATASOURCE_FIELD_DATA_TYPE"]], "tableau_datasource_field_formula (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.TABLEAU_DATASOURCE_FIELD_FORMULA"]], "tableau_datasource_field_role (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.TABLEAU_DATASOURCE_FIELD_ROLE"]], "top_level_project_qualified_name (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableaudatasourcefield (class in pyatlan.model.assets)": [[235, "pyatlan.model.assets.TableauDatasourceField"]], "upstream_columns (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.UPSTREAM_COLUMNS"]], "upstream_fields (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.UPSTREAM_FIELDS"]], "upstream_tables (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.UPSTREAM_TABLES"]], "workbook_qualified_name (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.WORKBOOK_QUALIFIED_NAME"]], "worksheets (pyatlan.model.assets.tableaudatasourcefield attribute)": [[235, "pyatlan.model.assets.TableauDatasourceField.WORKSHEETS"]], "input_fields (pyatlan.model.assets.tableauflow attribute)": [[236, "pyatlan.model.assets.TableauFlow.INPUT_FIELDS"]], "output_fields (pyatlan.model.assets.tableauflow attribute)": [[236, "pyatlan.model.assets.TableauFlow.OUTPUT_FIELDS"]], "output_steps (pyatlan.model.assets.tableauflow attribute)": [[236, "pyatlan.model.assets.TableauFlow.OUTPUT_STEPS"]], "project (pyatlan.model.assets.tableauflow attribute)": [[236, "pyatlan.model.assets.TableauFlow.PROJECT"]], "project_hierarchy (pyatlan.model.assets.tableauflow attribute)": [[236, "pyatlan.model.assets.TableauFlow.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableauflow attribute)": [[236, "pyatlan.model.assets.TableauFlow.PROJECT_QUALIFIED_NAME"]], "site_qualified_name (pyatlan.model.assets.tableauflow attribute)": [[236, "pyatlan.model.assets.TableauFlow.SITE_QUALIFIED_NAME"]], "top_level_project_qualified_name (pyatlan.model.assets.tableauflow attribute)": [[236, "pyatlan.model.assets.TableauFlow.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableauflow (class in pyatlan.model.assets)": [[236, "pyatlan.model.assets.TableauFlow"]], "project (pyatlan.model.assets.tableaumetric attribute)": [[237, "pyatlan.model.assets.TableauMetric.PROJECT"]], "project_hierarchy (pyatlan.model.assets.tableaumetric attribute)": [[237, "pyatlan.model.assets.TableauMetric.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableaumetric attribute)": [[237, "pyatlan.model.assets.TableauMetric.PROJECT_QUALIFIED_NAME"]], "site_qualified_name (pyatlan.model.assets.tableaumetric attribute)": [[237, "pyatlan.model.assets.TableauMetric.SITE_QUALIFIED_NAME"]], "top_level_project_qualified_name (pyatlan.model.assets.tableaumetric attribute)": [[237, "pyatlan.model.assets.TableauMetric.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableaumetric (class in pyatlan.model.assets)": [[237, "pyatlan.model.assets.TableauMetric"]], "child_projects (pyatlan.model.assets.tableauproject attribute)": [[238, "pyatlan.model.assets.TableauProject.CHILD_PROJECTS"]], "datasources (pyatlan.model.assets.tableauproject attribute)": [[238, "pyatlan.model.assets.TableauProject.DATASOURCES"]], "flows (pyatlan.model.assets.tableauproject attribute)": [[238, "pyatlan.model.assets.TableauProject.FLOWS"]], "is_top_level_project (pyatlan.model.assets.tableauproject attribute)": [[238, "pyatlan.model.assets.TableauProject.IS_TOP_LEVEL_PROJECT"]], "parent_project (pyatlan.model.assets.tableauproject attribute)": [[238, "pyatlan.model.assets.TableauProject.PARENT_PROJECT"]], "project_hierarchy (pyatlan.model.assets.tableauproject attribute)": [[238, "pyatlan.model.assets.TableauProject.PROJECT_HIERARCHY"]], "site (pyatlan.model.assets.tableauproject attribute)": [[238, "pyatlan.model.assets.TableauProject.SITE"]], "site_qualified_name (pyatlan.model.assets.tableauproject attribute)": [[238, "pyatlan.model.assets.TableauProject.SITE_QUALIFIED_NAME"]], "top_level_project_qualified_name (pyatlan.model.assets.tableauproject attribute)": [[238, "pyatlan.model.assets.TableauProject.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableauproject (class in pyatlan.model.assets)": [[238, "pyatlan.model.assets.TableauProject"]], "workbooks (pyatlan.model.assets.tableauproject attribute)": [[238, "pyatlan.model.assets.TableauProject.WORKBOOKS"]], "projects (pyatlan.model.assets.tableausite attribute)": [[239, "pyatlan.model.assets.TableauSite.PROJECTS"]], "tableausite (class in pyatlan.model.assets)": [[239, "pyatlan.model.assets.TableauSite"]], "dashboards (pyatlan.model.assets.tableauworkbook attribute)": [[240, "pyatlan.model.assets.TableauWorkbook.DASHBOARDS"]], "datasources (pyatlan.model.assets.tableauworkbook attribute)": [[240, "pyatlan.model.assets.TableauWorkbook.DATASOURCES"]], "project (pyatlan.model.assets.tableauworkbook attribute)": [[240, "pyatlan.model.assets.TableauWorkbook.PROJECT"]], "project_hierarchy (pyatlan.model.assets.tableauworkbook attribute)": [[240, "pyatlan.model.assets.TableauWorkbook.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableauworkbook attribute)": [[240, "pyatlan.model.assets.TableauWorkbook.PROJECT_QUALIFIED_NAME"]], "site_qualified_name (pyatlan.model.assets.tableauworkbook attribute)": [[240, "pyatlan.model.assets.TableauWorkbook.SITE_QUALIFIED_NAME"]], "top_level_project_name (pyatlan.model.assets.tableauworkbook attribute)": [[240, "pyatlan.model.assets.TableauWorkbook.TOP_LEVEL_PROJECT_NAME"]], "top_level_project_qualified_name (pyatlan.model.assets.tableauworkbook attribute)": [[240, "pyatlan.model.assets.TableauWorkbook.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableauworkbook (class in pyatlan.model.assets)": [[240, "pyatlan.model.assets.TableauWorkbook"]], "worksheets (pyatlan.model.assets.tableauworkbook attribute)": [[240, "pyatlan.model.assets.TableauWorkbook.WORKSHEETS"]], "calculated_fields (pyatlan.model.assets.tableauworksheet attribute)": [[241, "pyatlan.model.assets.TableauWorksheet.CALCULATED_FIELDS"]], "dashboards (pyatlan.model.assets.tableauworksheet attribute)": [[241, "pyatlan.model.assets.TableauWorksheet.DASHBOARDS"]], "datasource_fields (pyatlan.model.assets.tableauworksheet attribute)": [[241, "pyatlan.model.assets.TableauWorksheet.DATASOURCE_FIELDS"]], "project_hierarchy (pyatlan.model.assets.tableauworksheet attribute)": [[241, "pyatlan.model.assets.TableauWorksheet.PROJECT_HIERARCHY"]], "project_qualified_name (pyatlan.model.assets.tableauworksheet attribute)": [[241, "pyatlan.model.assets.TableauWorksheet.PROJECT_QUALIFIED_NAME"]], "site_qualified_name (pyatlan.model.assets.tableauworksheet attribute)": [[241, "pyatlan.model.assets.TableauWorksheet.SITE_QUALIFIED_NAME"]], "top_level_project_qualified_name (pyatlan.model.assets.tableauworksheet attribute)": [[241, "pyatlan.model.assets.TableauWorksheet.TOP_LEVEL_PROJECT_QUALIFIED_NAME"]], "tableauworksheet (class in pyatlan.model.assets)": [[241, "pyatlan.model.assets.TableauWorksheet"]], "workbook (pyatlan.model.assets.tableauworksheet attribute)": [[241, "pyatlan.model.assets.TableauWorksheet.WORKBOOK"]], "workbook_qualified_name (pyatlan.model.assets.tableauworksheet attribute)": [[241, "pyatlan.model.assets.TableauWorksheet.WORKBOOK_QUALIFIED_NAME"]], "alias (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.ALIAS"]], "child_table_partitions (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.CHILD_TABLE_PARTITIONS"]], "columns (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.COLUMNS"]], "column_count (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.COLUMN_COUNT"]], "constraint (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.CONSTRAINT"]], "external_location (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.EXTERNAL_LOCATION"]], "external_location_format (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.EXTERNAL_LOCATION_FORMAT"]], "external_location_region (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.EXTERNAL_LOCATION_REGION"]], "is_partitioned (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.IS_PARTITIONED"]], "is_query_preview (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.IS_QUERY_PREVIEW"]], "is_temporary (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.IS_TEMPORARY"]], "parent_table (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.PARENT_TABLE"]], "parent_table_partition (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.PARENT_TABLE_PARTITION"]], "partition_count (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.PARTITION_COUNT"]], "partition_list (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.PARTITION_LIST"]], "partition_strategy (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.PARTITION_STRATEGY"]], "query_preview_config (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.QUERY_PREVIEW_CONFIG"]], "row_count (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.ROW_COUNT"]], "size_bytes (pyatlan.model.assets.tablepartition attribute)": [[242, "pyatlan.model.assets.TablePartition.SIZE_BYTES"]], "tablepartition (class in pyatlan.model.assets)": [[242, "pyatlan.model.assets.TablePartition"]], "mapped_classification_name (pyatlan.model.assets.tag attribute)": [[243, "pyatlan.model.assets.Tag.MAPPED_CLASSIFICATION_NAME"]], "tag_allowed_values (pyatlan.model.assets.tag attribute)": [[243, "pyatlan.model.assets.Tag.TAG_ALLOWED_VALUES"]], "tag_attributes (pyatlan.model.assets.tag attribute)": [[243, "pyatlan.model.assets.Tag.TAG_ATTRIBUTES"]], "tag_id (pyatlan.model.assets.tag attribute)": [[243, "pyatlan.model.assets.Tag.TAG_ID"]], "tag (class in pyatlan.model.assets)": [[243, "pyatlan.model.assets.Tag"]], "tag_attachment_string_value (pyatlan.model.assets.tagattachment attribute)": [[244, "pyatlan.model.assets.TagAttachment.TAG_ATTACHMENT_STRING_VALUE"]], "tag_qualified_name (pyatlan.model.assets.tagattachment attribute)": [[244, "pyatlan.model.assets.TagAttachment.TAG_QUALIFIED_NAME"]], "tagattachment (class in pyatlan.model.assets)": [[244, "pyatlan.model.assets.TagAttachment"]], "task_actions (pyatlan.model.assets.task attribute)": [[245, "pyatlan.model.assets.Task.TASK_ACTIONS"]], "task_execution_action (pyatlan.model.assets.task attribute)": [[245, "pyatlan.model.assets.Task.TASK_EXECUTION_ACTION"]], "task_execution_comment (pyatlan.model.assets.task attribute)": [[245, "pyatlan.model.assets.Task.TASK_EXECUTION_COMMENT"]], "task_expires_at (pyatlan.model.assets.task attribute)": [[245, "pyatlan.model.assets.Task.TASK_EXPIRES_AT"]], "task_is_read (pyatlan.model.assets.task attribute)": [[245, "pyatlan.model.assets.Task.TASK_IS_READ"]], "task_proposals (pyatlan.model.assets.task attribute)": [[245, "pyatlan.model.assets.Task.TASK_PROPOSALS"]], "task_recipient (pyatlan.model.assets.task attribute)": [[245, "pyatlan.model.assets.Task.TASK_RECIPIENT"]], "task_related_asset_guid (pyatlan.model.assets.task attribute)": [[245, "pyatlan.model.assets.Task.TASK_RELATED_ASSET_GUID"]], "task_requestor (pyatlan.model.assets.task attribute)": [[245, "pyatlan.model.assets.Task.TASK_REQUESTOR"]], "task_requestor_comment (pyatlan.model.assets.task attribute)": [[245, "pyatlan.model.assets.Task.TASK_REQUESTOR_COMMENT"]], "task_type (pyatlan.model.assets.task attribute)": [[245, "pyatlan.model.assets.Task.TASK_TYPE"]], "task (class in pyatlan.model.assets)": [[245, "pyatlan.model.assets.Task"]], "thoughtspot_chart_type (pyatlan.model.assets.thoughtspot attribute)": [[246, "pyatlan.model.assets.Thoughtspot.THOUGHTSPOT_CHART_TYPE"]], "thoughtspot_column_count (pyatlan.model.assets.thoughtspot attribute)": [[246, "pyatlan.model.assets.Thoughtspot.THOUGHTSPOT_COLUMN_COUNT"]], "thoughtspot_join_count (pyatlan.model.assets.thoughtspot attribute)": [[246, "pyatlan.model.assets.Thoughtspot.THOUGHTSPOT_JOIN_COUNT"]], "thoughtspot_question_text (pyatlan.model.assets.thoughtspot attribute)": [[246, "pyatlan.model.assets.Thoughtspot.THOUGHTSPOT_QUESTION_TEXT"]], "thoughtspot (class in pyatlan.model.assets)": [[246, "pyatlan.model.assets.Thoughtspot"]], "thoughtspotanswer (class in pyatlan.model.assets)": [[247, "pyatlan.model.assets.ThoughtspotAnswer"]], "thoughtspot_column_data_type (pyatlan.model.assets.thoughtspotcolumn attribute)": [[248, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_COLUMN_DATA_TYPE"]], "thoughtspot_column_type (pyatlan.model.assets.thoughtspotcolumn attribute)": [[248, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_COLUMN_TYPE"]], "thoughtspot_table (pyatlan.model.assets.thoughtspotcolumn attribute)": [[248, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_TABLE"]], "thoughtspot_table_qualified_name (pyatlan.model.assets.thoughtspotcolumn attribute)": [[248, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_TABLE_QUALIFIED_NAME"]], "thoughtspot_view (pyatlan.model.assets.thoughtspotcolumn attribute)": [[248, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_VIEW"]], "thoughtspot_view_qualified_name (pyatlan.model.assets.thoughtspotcolumn attribute)": [[248, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_VIEW_QUALIFIED_NAME"]], "thoughtspot_worksheet (pyatlan.model.assets.thoughtspotcolumn attribute)": [[248, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_WORKSHEET"]], "thoughtspot_worksheet_qualified_name (pyatlan.model.assets.thoughtspotcolumn attribute)": [[248, "pyatlan.model.assets.ThoughtspotColumn.THOUGHTSPOT_WORKSHEET_QUALIFIED_NAME"]], "thoughtspotcolumn (class in pyatlan.model.assets)": [[248, "pyatlan.model.assets.ThoughtspotColumn"]], "thoughtspot_liveboard (pyatlan.model.assets.thoughtspotdashlet attribute)": [[249, "pyatlan.model.assets.ThoughtspotDashlet.THOUGHTSPOT_LIVEBOARD"]], "thoughtspot_liveboard_name (pyatlan.model.assets.thoughtspotdashlet attribute)": [[249, "pyatlan.model.assets.ThoughtspotDashlet.THOUGHTSPOT_LIVEBOARD_NAME"]], "thoughtspot_liveboard_qualified_name (pyatlan.model.assets.thoughtspotdashlet attribute)": [[249, "pyatlan.model.assets.ThoughtspotDashlet.THOUGHTSPOT_LIVEBOARD_QUALIFIED_NAME"]], "thoughtspotdashlet (class in pyatlan.model.assets)": [[249, "pyatlan.model.assets.ThoughtspotDashlet"]], "thoughtspot_dashlets (pyatlan.model.assets.thoughtspotliveboard attribute)": [[250, "pyatlan.model.assets.ThoughtspotLiveboard.THOUGHTSPOT_DASHLETS"]], "thoughtspotliveboard (class in pyatlan.model.assets)": [[250, "pyatlan.model.assets.ThoughtspotLiveboard"]], "thoughtspot_columns (pyatlan.model.assets.thoughtspottable attribute)": [[251, "pyatlan.model.assets.ThoughtspotTable.THOUGHTSPOT_COLUMNS"]], "thoughtspottable (class in pyatlan.model.assets)": [[251, "pyatlan.model.assets.ThoughtspotTable"]], "thoughtspot_columns (pyatlan.model.assets.thoughtspotview attribute)": [[252, "pyatlan.model.assets.ThoughtspotView.THOUGHTSPOT_COLUMNS"]], "thoughtspotview (class in pyatlan.model.assets)": [[252, "pyatlan.model.assets.ThoughtspotView"]], "thoughtspot_columns (pyatlan.model.assets.thoughtspotworksheet attribute)": [[253, "pyatlan.model.assets.ThoughtspotWorksheet.THOUGHTSPOT_COLUMNS"]], "thoughtspotworksheet (class in pyatlan.model.assets)": [[253, "pyatlan.model.assets.ThoughtspotWorksheet"]], "alias (pyatlan.model.assets.view attribute)": [[254, "pyatlan.model.assets.View.ALIAS"]], "atlan_schema (pyatlan.model.assets.view attribute)": [[254, "pyatlan.model.assets.View.ATLAN_SCHEMA"]], "columns (pyatlan.model.assets.view attribute)": [[254, "pyatlan.model.assets.View.COLUMNS"]], "column_count (pyatlan.model.assets.view attribute)": [[254, "pyatlan.model.assets.View.COLUMN_COUNT"]], "definition (pyatlan.model.assets.view attribute)": [[254, "pyatlan.model.assets.View.DEFINITION"]], "is_query_preview (pyatlan.model.assets.view attribute)": [[254, "pyatlan.model.assets.View.IS_QUERY_PREVIEW"]], "is_temporary (pyatlan.model.assets.view attribute)": [[254, "pyatlan.model.assets.View.IS_TEMPORARY"]], "queries (pyatlan.model.assets.view attribute)": [[254, "pyatlan.model.assets.View.QUERIES"]], "query_preview_config (pyatlan.model.assets.view attribute)": [[254, "pyatlan.model.assets.View.QUERY_PREVIEW_CONFIG"]], "row_count (pyatlan.model.assets.view attribute)": [[254, "pyatlan.model.assets.View.ROW_COUNT"]], "size_bytes (pyatlan.model.assets.view attribute)": [[254, "pyatlan.model.assets.View.SIZE_BYTES"]], "view (class in pyatlan.model.assets)": [[254, "pyatlan.model.assets.View"]], "workflow_config (pyatlan.model.assets.workflow attribute)": [[255, "pyatlan.model.assets.Workflow.WORKFLOW_CONFIG"]], "workflow_created_by (pyatlan.model.assets.workflow attribute)": [[255, "pyatlan.model.assets.Workflow.WORKFLOW_CREATED_BY"]], "workflow_deleted_at (pyatlan.model.assets.workflow attribute)": [[255, "pyatlan.model.assets.Workflow.WORKFLOW_DELETED_AT"]], "workflow_run_expires_in (pyatlan.model.assets.workflow attribute)": [[255, "pyatlan.model.assets.Workflow.WORKFLOW_RUN_EXPIRES_IN"]], "workflow_status (pyatlan.model.assets.workflow attribute)": [[255, "pyatlan.model.assets.Workflow.WORKFLOW_STATUS"]], "workflow_template_guid (pyatlan.model.assets.workflow attribute)": [[255, "pyatlan.model.assets.Workflow.WORKFLOW_TEMPLATE_GUID"]], "workflow_type (pyatlan.model.assets.workflow attribute)": [[255, "pyatlan.model.assets.Workflow.WORKFLOW_TYPE"]], "workflow_updated_by (pyatlan.model.assets.workflow attribute)": [[255, "pyatlan.model.assets.Workflow.WORKFLOW_UPDATED_BY"]], "workflow (class in pyatlan.model.assets)": [[255, "pyatlan.model.assets.Workflow"]], "workflow_run_comment (pyatlan.model.assets.workflowrun attribute)": [[256, "pyatlan.model.assets.WorkflowRun.WORKFLOW_RUN_COMMENT"]], "workflow_run_config (pyatlan.model.assets.workflowrun attribute)": [[256, "pyatlan.model.assets.WorkflowRun.WORKFLOW_RUN_CONFIG"]], "workflow_run_created_by (pyatlan.model.assets.workflowrun attribute)": [[256, "pyatlan.model.assets.WorkflowRun.WORKFLOW_RUN_CREATED_BY"]], "workflow_run_deleted_at (pyatlan.model.assets.workflowrun attribute)": [[256, "pyatlan.model.assets.WorkflowRun.WORKFLOW_RUN_DELETED_AT"]], "workflow_run_expires_at (pyatlan.model.assets.workflowrun attribute)": [[256, "pyatlan.model.assets.WorkflowRun.WORKFLOW_RUN_EXPIRES_AT"]], "workflow_run_on_asset_guid (pyatlan.model.assets.workflowrun attribute)": [[256, "pyatlan.model.assets.WorkflowRun.WORKFLOW_RUN_ON_ASSET_GUID"]], "workflow_run_status (pyatlan.model.assets.workflowrun attribute)": [[256, "pyatlan.model.assets.WorkflowRun.WORKFLOW_RUN_STATUS"]], "workflow_run_type (pyatlan.model.assets.workflowrun attribute)": [[256, "pyatlan.model.assets.WorkflowRun.WORKFLOW_RUN_TYPE"]], "workflow_run_updated_by (pyatlan.model.assets.workflowrun attribute)": [[256, "pyatlan.model.assets.WorkflowRun.WORKFLOW_RUN_UPDATED_BY"]], "workflow_run_workflow_guid (pyatlan.model.assets.workflowrun attribute)": [[256, "pyatlan.model.assets.WorkflowRun.WORKFLOW_RUN_WORKFLOW_GUID"]], "workflowrun (class in pyatlan.model.assets)": [[256, "pyatlan.model.assets.WorkflowRun"]], "atlantagcache (class in pyatlan.cache.atlan_tag_cache)": [[258, "pyatlan.cache.atlan_tag_cache.AtlanTagCache"]], "get_id_for_name() (pyatlan.cache.atlan_tag_cache.atlantagcache class method)": [[258, "pyatlan.cache.atlan_tag_cache.AtlanTagCache.get_id_for_name"]], "get_name_for_id() (pyatlan.cache.atlan_tag_cache.atlantagcache class method)": [[258, "pyatlan.cache.atlan_tag_cache.AtlanTagCache.get_name_for_id"]], "get_source_tags_attr_id() (pyatlan.cache.atlan_tag_cache.atlantagcache class method)": [[258, "pyatlan.cache.atlan_tag_cache.AtlanTagCache.get_source_tags_attr_id"]], "refresh_cache() (pyatlan.cache.atlan_tag_cache.atlantagcache class method)": [[258, "pyatlan.cache.atlan_tag_cache.AtlanTagCache.refresh_cache"]], "custommetadatacache (class in pyatlan.cache.custom_metadata_cache)": [[259, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache"]], "get_all_custom_attributes() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[259, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_all_custom_attributes"]], "get_attr_id_for_name() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[259, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_attr_id_for_name"]], "get_attr_name_for_id() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[259, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_attr_name_for_id"]], "get_attribute_def() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[259, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_attribute_def"]], "get_attribute_for_search_results() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[259, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_attribute_for_search_results"]], "get_attributes_for_search_results() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[259, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_attributes_for_search_results"]], "get_custom_metadata_def() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[259, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_custom_metadata_def"]], "get_id_for_name() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[259, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_id_for_name"]], "get_name_for_id() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[259, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.get_name_for_id"]], "is_attr_archived() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[259, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.is_attr_archived"]], "refresh_cache() (pyatlan.cache.custom_metadata_cache.custommetadatacache class method)": [[259, "pyatlan.cache.custom_metadata_cache.CustomMetadataCache.refresh_cache"]], "enumcache (class in pyatlan.cache.enum_cache)": [[260, "pyatlan.cache.enum_cache.EnumCache"]], "get_by_name() (pyatlan.cache.enum_cache.enumcache class method)": [[260, "pyatlan.cache.enum_cache.EnumCache.get_by_name"]], "refresh_cache() (pyatlan.cache.enum_cache.enumcache class method)": [[260, "pyatlan.cache.enum_cache.EnumCache.refresh_cache"]], "groupcache (class in pyatlan.cache.group_cache)": [[261, "pyatlan.cache.group_cache.GroupCache"]], "get_id_for_alias() (pyatlan.cache.group_cache.groupcache class method)": [[261, "pyatlan.cache.group_cache.GroupCache.get_id_for_alias"]], "get_id_for_name() (pyatlan.cache.group_cache.groupcache class method)": [[261, "pyatlan.cache.group_cache.GroupCache.get_id_for_name"]], "get_name_for_id() (pyatlan.cache.group_cache.groupcache class method)": [[261, "pyatlan.cache.group_cache.GroupCache.get_name_for_id"]], "validate_aliases() (pyatlan.cache.group_cache.groupcache class method)": [[261, "pyatlan.cache.group_cache.GroupCache.validate_aliases"]], "rolecache (class in pyatlan.cache.role_cache)": [[262, "pyatlan.cache.role_cache.RoleCache"]], "get_id_for_name() (pyatlan.cache.role_cache.rolecache class method)": [[262, "pyatlan.cache.role_cache.RoleCache.get_id_for_name"]], "get_name_for_id() (pyatlan.cache.role_cache.rolecache class method)": [[262, "pyatlan.cache.role_cache.RoleCache.get_name_for_id"]], "validate_idstrs() (pyatlan.cache.role_cache.rolecache class method)": [[262, "pyatlan.cache.role_cache.RoleCache.validate_idstrs"]], "usercache (class in pyatlan.cache.user_cache)": [[263, "pyatlan.cache.user_cache.UserCache"]], "get_id_for_email() (pyatlan.cache.user_cache.usercache class method)": [[263, "pyatlan.cache.user_cache.UserCache.get_id_for_email"]], "get_id_for_name() (pyatlan.cache.user_cache.usercache class method)": [[263, "pyatlan.cache.user_cache.UserCache.get_id_for_name"]], "get_name_for_id() (pyatlan.cache.user_cache.usercache class method)": [[263, "pyatlan.cache.user_cache.UserCache.get_name_for_id"]], "validate_names() (pyatlan.cache.user_cache.usercache class method)": [[263, "pyatlan.cache.user_cache.UserCache.validate_names"]], "atlanclient (class in pyatlan.client.atlan)": [[265, "pyatlan.client.atlan.AtlanClient"]], "add_api_token_as_admin() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.add_api_token_as_admin"]], "add_api_token_as_viewer() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.add_api_token_as_viewer"]], "add_atlan_tags() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.add_atlan_tags"]], "add_user_to_groups() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.add_user_to_groups"]], "append_terms() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.append_terms"]], "change_user_role() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.change_user_role"]], "construct() (pyatlan.client.atlan.atlanclient class method)": [[265, "pyatlan.client.atlan.AtlanClient.construct"]], "copy() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.copy"]], "create_api_token() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.create_api_token"]], "create_group() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.create_group"]], "create_typedef() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.create_typedef"]], "create_users() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.create_users"]], "delete_entity_by_guid() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.delete_entity_by_guid"]], "dict() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.dict"]], "find_category_by_name() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.find_category_by_name"]], "find_category_fast_by_name() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.find_category_fast_by_name"]], "find_connections_by_name() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.find_connections_by_name"]], "find_glossary_by_name() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.find_glossary_by_name"]], "find_personas_by_name() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.find_personas_by_name"]], "find_purposes_by_name() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.find_purposes_by_name"]], "find_term_by_name() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.find_term_by_name"]], "find_term_fast_by_name() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.find_term_fast_by_name"]], "get_admin_events() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_admin_events"]], "get_all_groups() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_all_groups"]], "get_all_roles() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_all_roles"]], "get_all_typedefs() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_all_typedefs"]], "get_all_users() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_all_users"]], "get_api_token_by_id() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_api_token_by_id"]], "get_api_token_by_name() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_api_token_by_name"]], "get_api_tokens() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_api_tokens"]], "get_asset_by_guid() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_asset_by_guid"]], "get_asset_by_qualified_name() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_asset_by_qualified_name"]], "get_current_user() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_current_user"]], "get_default_client() (pyatlan.client.atlan.atlanclient class method)": [[265, "pyatlan.client.atlan.AtlanClient.get_default_client"]], "get_group_by_name() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_group_by_name"]], "get_group_members() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_group_members"]], "get_groups() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_groups"]], "get_groups_for_user() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_groups_for_user"]], "get_keycloak_events() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_keycloak_events"]], "get_lineage() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_lineage"]], "get_lineage_list() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_lineage_list"]], "get_roles() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_roles"]], "get_typedefs() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_typedefs"]], "get_user_by_username() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_user_by_username"]], "get_users() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_users"]], "get_users_by_email() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.get_users_by_email"]], "json() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.json"]], "max_retries() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.max_retries"]], "parse_query() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.parse_query"]], "purge_api_token() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.purge_api_token"]], "purge_entity_by_guid() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.purge_entity_by_guid"]], "purge_group() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.purge_group"]], "purge_typedef() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.purge_typedef"]], "remove_announcement() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.remove_announcement"]], "remove_atlan_tag() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.remove_atlan_tag"]], "remove_certificate() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.remove_certificate"]], "remove_custom_metadata() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.remove_custom_metadata"]], "remove_terms() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.remove_terms"]], "remove_users_from_group() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.remove_users_from_group"]], "replace_custom_metadata() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.replace_custom_metadata"]], "replace_terms() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.replace_terms"]], "restore() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.restore"]], "retrieve_minimal() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.retrieve_minimal"]], "save() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.save"]], "save_merging_cm() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.save_merging_cm"]], "save_replacing_cm() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.save_replacing_cm"]], "search() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.search"]], "set_default_client() (pyatlan.client.atlan.atlanclient class method)": [[265, "pyatlan.client.atlan.AtlanClient.set_default_client"]], "update_announcement() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.update_announcement"]], "update_api_token() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.update_api_token"]], "update_certificate() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.update_certificate"]], "update_custom_metadata_attributes() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.update_custom_metadata_attributes"]], "update_forward_refs() (pyatlan.client.atlan.atlanclient class method)": [[265, "pyatlan.client.atlan.AtlanClient.update_forward_refs"]], "update_group() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.update_group"]], "update_merging_cm() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.update_merging_cm"]], "update_replacing_cm() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.update_replacing_cm"]], "update_typedef() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.update_typedef"]], "update_user() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.update_user"]], "upload_image() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.upload_image"]], "upsert() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.upsert"]], "upsert_merging_cm() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.upsert_merging_cm"]], "upsert_replacing_cm() (pyatlan.client.atlan.atlanclient method)": [[265, "pyatlan.client.atlan.AtlanClient.upsert_replacing_cm"]], "atlaneventhandler (class in pyatlan.events.atlan_event_handler)": [[266, "pyatlan.events.atlan_event_handler.AtlanEventHandler"]], "calculate_changes() (pyatlan.events.atlan_event_handler.atlaneventhandler method)": [[266, "pyatlan.events.atlan_event_handler.AtlanEventHandler.calculate_changes"]], "get_current_state() (pyatlan.events.atlan_event_handler.atlaneventhandler method)": [[266, "pyatlan.events.atlan_event_handler.AtlanEventHandler.get_current_state"]], "has_changes() (pyatlan.events.atlan_event_handler.atlaneventhandler method)": [[266, "pyatlan.events.atlan_event_handler.AtlanEventHandler.has_changes"]], "save_changes() (pyatlan.events.atlan_event_handler.atlaneventhandler method)": [[266, "pyatlan.events.atlan_event_handler.AtlanEventHandler.save_changes"]], "upsert_changes() (pyatlan.events.atlan_event_handler.atlaneventhandler method)": [[266, "pyatlan.events.atlan_event_handler.AtlanEventHandler.upsert_changes"]], "validate_prerequisites() (pyatlan.events.atlan_event_handler.atlaneventhandler method)": [[266, "pyatlan.events.atlan_event_handler.AtlanEventHandler.validate_prerequisites"]], "apiconnectionerror": [[267, "pyatlan.errors.ApiConnectionError"]], "apierror": [[267, "pyatlan.errors.ApiError"]], "atlanerror": [[267, "pyatlan.errors.AtlanError"]], "authenticationerror": [[267, "pyatlan.errors.AuthenticationError"]], "conflicterror": [[267, "pyatlan.errors.ConflictError"]], "invalidrequesterror": [[267, "pyatlan.errors.InvalidRequestError"]], "logicerror": [[267, "pyatlan.errors.LogicError"]], "notfounderror": [[267, "pyatlan.errors.NotFoundError"]], "permissionerror": [[267, "pyatlan.errors.PermissionError"]], "ratelimiterror": [[267, "pyatlan.errors.RateLimitError"]], "booleanfield (class in pyatlan.model.fields.atlan_fields)": [[268, "pyatlan.model.fields.atlan_fields.BooleanField"]], "boolean_field_name (pyatlan.model.fields.atlan_fields.booleanfield property)": [[268, "pyatlan.model.fields.atlan_fields.BooleanField.boolean_field_name"]], "bucket_by() (pyatlan.model.fields.atlan_fields.booleanfield method)": [[268, "pyatlan.model.fields.atlan_fields.BooleanField.bucket_by"]], "eq() (pyatlan.model.fields.atlan_fields.booleanfield method)": [[268, "pyatlan.model.fields.atlan_fields.BooleanField.eq"]], "has_any_value() (pyatlan.model.fields.atlan_fields.booleanfield method)": [[268, "pyatlan.model.fields.atlan_fields.BooleanField.has_any_value"]], "in_lineage (pyatlan.model.fields.atlan_fields.booleanfield property)": [[268, "pyatlan.model.fields.atlan_fields.BooleanField.in_lineage"]], "order() (pyatlan.model.fields.atlan_fields.booleanfield method)": [[268, "pyatlan.model.fields.atlan_fields.BooleanField.order"]], "custommetadatafield (class in pyatlan.model.fields.atlan_fields)": [[269, "pyatlan.model.fields.atlan_fields.CustomMetadataField"]], "between() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[269, "pyatlan.model.fields.atlan_fields.CustomMetadataField.between"]], "bucket_by() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[269, "pyatlan.model.fields.atlan_fields.CustomMetadataField.bucket_by"]], "eq() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[269, "pyatlan.model.fields.atlan_fields.CustomMetadataField.eq"]], "gt() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[269, "pyatlan.model.fields.atlan_fields.CustomMetadataField.gt"]], "gte() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[269, "pyatlan.model.fields.atlan_fields.CustomMetadataField.gte"]], "has_any_value() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[269, "pyatlan.model.fields.atlan_fields.CustomMetadataField.has_any_value"]], "lt() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[269, "pyatlan.model.fields.atlan_fields.CustomMetadataField.lt"]], "lte() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[269, "pyatlan.model.fields.atlan_fields.CustomMetadataField.lte"]], "match() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[269, "pyatlan.model.fields.atlan_fields.CustomMetadataField.match"]], "order() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[269, "pyatlan.model.fields.atlan_fields.CustomMetadataField.order"]], "startswith() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[269, "pyatlan.model.fields.atlan_fields.CustomMetadataField.startswith"]], "within() (pyatlan.model.fields.atlan_fields.custommetadatafield method)": [[269, "pyatlan.model.fields.atlan_fields.CustomMetadataField.within"]], "keywordfield (class in pyatlan.model.fields.atlan_fields)": [[270, "pyatlan.model.fields.atlan_fields.KeywordField"]], "bucket_by() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[270, "pyatlan.model.fields.atlan_fields.KeywordField.bucket_by"]], "eq() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[270, "pyatlan.model.fields.atlan_fields.KeywordField.eq"]], "has_any_value() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[270, "pyatlan.model.fields.atlan_fields.KeywordField.has_any_value"]], "in_lineage (pyatlan.model.fields.atlan_fields.keywordfield property)": [[270, "pyatlan.model.fields.atlan_fields.KeywordField.in_lineage"]], "keyword_field_name (pyatlan.model.fields.atlan_fields.keywordfield property)": [[270, "pyatlan.model.fields.atlan_fields.KeywordField.keyword_field_name"]], "order() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[270, "pyatlan.model.fields.atlan_fields.KeywordField.order"]], "regexp() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[270, "pyatlan.model.fields.atlan_fields.KeywordField.regexp"]], "startswith() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[270, "pyatlan.model.fields.atlan_fields.KeywordField.startswith"]], "wildcard() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[270, "pyatlan.model.fields.atlan_fields.KeywordField.wildcard"]], "within() (pyatlan.model.fields.atlan_fields.keywordfield method)": [[270, "pyatlan.model.fields.atlan_fields.KeywordField.within"]], "keywordtextfield (class in pyatlan.model.fields.atlan_fields)": [[271, "pyatlan.model.fields.atlan_fields.KeywordTextField"]], "bucket_by() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[271, "pyatlan.model.fields.atlan_fields.KeywordTextField.bucket_by"]], "eq() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[271, "pyatlan.model.fields.atlan_fields.KeywordTextField.eq"]], "has_any_value() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[271, "pyatlan.model.fields.atlan_fields.KeywordTextField.has_any_value"]], "in_lineage (pyatlan.model.fields.atlan_fields.keywordtextfield property)": [[271, "pyatlan.model.fields.atlan_fields.KeywordTextField.in_lineage"]], "keyword_field_name (pyatlan.model.fields.atlan_fields.keywordtextfield property)": [[271, "pyatlan.model.fields.atlan_fields.KeywordTextField.keyword_field_name"]], "match() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[271, "pyatlan.model.fields.atlan_fields.KeywordTextField.match"]], "order() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[271, "pyatlan.model.fields.atlan_fields.KeywordTextField.order"]], "regexp() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[271, "pyatlan.model.fields.atlan_fields.KeywordTextField.regexp"]], "startswith() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[271, "pyatlan.model.fields.atlan_fields.KeywordTextField.startswith"]], "text_field_name (pyatlan.model.fields.atlan_fields.keywordtextfield property)": [[271, "pyatlan.model.fields.atlan_fields.KeywordTextField.text_field_name"]], "wildcard() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[271, "pyatlan.model.fields.atlan_fields.KeywordTextField.wildcard"]], "within() (pyatlan.model.fields.atlan_fields.keywordtextfield method)": [[271, "pyatlan.model.fields.atlan_fields.KeywordTextField.within"]], "keywordtextstemmedfield (class in pyatlan.model.fields.atlan_fields)": [[272, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField"]], "bucket_by() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[272, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.bucket_by"]], "eq() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[272, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.eq"]], "has_any_value() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[272, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.has_any_value"]], "in_lineage (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield property)": [[272, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.in_lineage"]], "keyword_field_name (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield property)": [[272, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.keyword_field_name"]], "match() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[272, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.match"]], "match_stemmed() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[272, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.match_stemmed"]], "order() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[272, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.order"]], "regexp() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[272, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.regexp"]], "startswith() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[272, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.startswith"]], "text_field_name (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield property)": [[272, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.text_field_name"]], "wildcard() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[272, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.wildcard"]], "within() (pyatlan.model.fields.atlan_fields.keywordtextstemmedfield method)": [[272, "pyatlan.model.fields.atlan_fields.KeywordTextStemmedField.within"]], "numericfield (class in pyatlan.model.fields.atlan_fields)": [[273, "pyatlan.model.fields.atlan_fields.NumericField"]], "avg() (pyatlan.model.fields.atlan_fields.numericfield method)": [[273, "pyatlan.model.fields.atlan_fields.NumericField.avg"]], "between() (pyatlan.model.fields.atlan_fields.numericfield method)": [[273, "pyatlan.model.fields.atlan_fields.NumericField.between"]], "bucket_by() (pyatlan.model.fields.atlan_fields.numericfield method)": [[273, "pyatlan.model.fields.atlan_fields.NumericField.bucket_by"]], "eq() (pyatlan.model.fields.atlan_fields.numericfield method)": [[273, "pyatlan.model.fields.atlan_fields.NumericField.eq"]], "gt() (pyatlan.model.fields.atlan_fields.numericfield method)": [[273, "pyatlan.model.fields.atlan_fields.NumericField.gt"]], "gte() (pyatlan.model.fields.atlan_fields.numericfield method)": [[273, "pyatlan.model.fields.atlan_fields.NumericField.gte"]], "has_any_value() (pyatlan.model.fields.atlan_fields.numericfield method)": [[273, "pyatlan.model.fields.atlan_fields.NumericField.has_any_value"]], "in_lineage (pyatlan.model.fields.atlan_fields.numericfield property)": [[273, "pyatlan.model.fields.atlan_fields.NumericField.in_lineage"]], "lt() (pyatlan.model.fields.atlan_fields.numericfield method)": [[273, "pyatlan.model.fields.atlan_fields.NumericField.lt"]], "lte() (pyatlan.model.fields.atlan_fields.numericfield method)": [[273, "pyatlan.model.fields.atlan_fields.NumericField.lte"]], "max() (pyatlan.model.fields.atlan_fields.numericfield method)": [[273, "pyatlan.model.fields.atlan_fields.NumericField.max"]], "min() (pyatlan.model.fields.atlan_fields.numericfield method)": [[273, "pyatlan.model.fields.atlan_fields.NumericField.min"]], "numeric_field_name (pyatlan.model.fields.atlan_fields.numericfield property)": [[273, "pyatlan.model.fields.atlan_fields.NumericField.numeric_field_name"]], "order() (pyatlan.model.fields.atlan_fields.numericfield method)": [[273, "pyatlan.model.fields.atlan_fields.NumericField.order"]], "sum() (pyatlan.model.fields.atlan_fields.numericfield method)": [[273, "pyatlan.model.fields.atlan_fields.NumericField.sum"]], "numericrankfield (class in pyatlan.model.fields.atlan_fields)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField"]], "avg() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField.avg"]], "between() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField.between"]], "bucket_by() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField.bucket_by"]], "eq() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField.eq"]], "gt() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField.gt"]], "gte() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField.gte"]], "has_any_value() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField.has_any_value"]], "in_lineage (pyatlan.model.fields.atlan_fields.numericrankfield property)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField.in_lineage"]], "lt() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField.lt"]], "lte() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField.lte"]], "max() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField.max"]], "min() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField.min"]], "numeric_field_name (pyatlan.model.fields.atlan_fields.numericrankfield property)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField.numeric_field_name"]], "order() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField.order"]], "sum() (pyatlan.model.fields.atlan_fields.numericrankfield method)": [[274, "pyatlan.model.fields.atlan_fields.NumericRankField.sum"]], "relationfield (class in pyatlan.model.fields.atlan_fields)": [[275, "pyatlan.model.fields.atlan_fields.RelationField"]], "searchablefield (class in pyatlan.model.fields.atlan_fields)": [[276, "pyatlan.model.fields.atlan_fields.SearchableField"]], "bucket_by() (pyatlan.model.fields.atlan_fields.searchablefield method)": [[276, "pyatlan.model.fields.atlan_fields.SearchableField.bucket_by"]], "has_any_value() (pyatlan.model.fields.atlan_fields.searchablefield method)": [[276, "pyatlan.model.fields.atlan_fields.SearchableField.has_any_value"]], "order() (pyatlan.model.fields.atlan_fields.searchablefield method)": [[276, "pyatlan.model.fields.atlan_fields.SearchableField.order"]], "textfield (class in pyatlan.model.fields.atlan_fields)": [[277, "pyatlan.model.fields.atlan_fields.TextField"]], "bucket_by() (pyatlan.model.fields.atlan_fields.textfield method)": [[277, "pyatlan.model.fields.atlan_fields.TextField.bucket_by"]], "has_any_value() (pyatlan.model.fields.atlan_fields.textfield method)": [[277, "pyatlan.model.fields.atlan_fields.TextField.has_any_value"]], "in_lineage (pyatlan.model.fields.atlan_fields.textfield property)": [[277, "pyatlan.model.fields.atlan_fields.TextField.in_lineage"]], "match() (pyatlan.model.fields.atlan_fields.textfield method)": [[277, "pyatlan.model.fields.atlan_fields.TextField.match"]], "order() (pyatlan.model.fields.atlan_fields.textfield method)": [[277, "pyatlan.model.fields.atlan_fields.TextField.order"]], "text_field_name (pyatlan.model.fields.atlan_fields.textfield property)": [[277, "pyatlan.model.fields.atlan_fields.TextField.text_field_name"]], "atlanfield (class in pyatlan.model.fields.atlan_fields)": [[278, "pyatlan.model.fields.atlan_fields.AtlanField"]], "atlanimage (class in pyatlan.model.atlan_image)": [[280, "pyatlan.model.atlan_image.AtlanImage"]], "announcement (class in pyatlan.model.core)": [[281, "pyatlan.model.core.Announcement"]], "assetrequest (class in pyatlan.model.core)": [[281, "pyatlan.model.core.AssetRequest"]], "assetresponse (class in pyatlan.model.core)": [[281, "pyatlan.model.core.AssetResponse"]], "atlantag (class in pyatlan.model.core)": [[281, "pyatlan.model.core.AtlanTag"]], "atlantagname (class in pyatlan.model.core)": [[281, "pyatlan.model.core.AtlanTagName"]], "atlantags (class in pyatlan.model.core)": [[281, "pyatlan.model.core.AtlanTags"]], "bulkrequest (class in pyatlan.model.core)": [[281, "pyatlan.model.core.BulkRequest"]], "searchrequest (class in pyatlan.model.core)": [[281, "pyatlan.model.core.SearchRequest"]], "get_deleted_sentinel() (pyatlan.model.core.atlantagname class method)": [[281, "pyatlan.model.core.AtlanTagName.get_deleted_sentinel"]], "custommetadatadict (class in pyatlan.model.custom_metadata)": [[282, "pyatlan.model.custom_metadata.CustomMetadataDict"]], "custommetadataproxy (class in pyatlan.model.custom_metadata)": [[282, "pyatlan.model.custom_metadata.CustomMetadataProxy"]], "custommetadatarequest (class in pyatlan.model.custom_metadata)": [[282, "pyatlan.model.custom_metadata.CustomMetadataRequest"]], "business_attributes (pyatlan.model.custom_metadata.custommetadatadict property)": [[282, "pyatlan.model.custom_metadata.CustomMetadataDict.business_attributes"]], "clear_all() (pyatlan.model.custom_metadata.custommetadatadict method)": [[282, "pyatlan.model.custom_metadata.CustomMetadataDict.clear_all"]], "clear_unset() (pyatlan.model.custom_metadata.custommetadatadict method)": [[282, "pyatlan.model.custom_metadata.CustomMetadataDict.clear_unset"]], "get_deleted_sentinel() (pyatlan.model.custom_metadata.custommetadatadict class method)": [[282, "pyatlan.model.custom_metadata.CustomMetadataDict.get_deleted_sentinel"]], "is_set() (pyatlan.model.custom_metadata.custommetadatadict method)": [[282, "pyatlan.model.custom_metadata.CustomMetadataDict.is_set"]], "modified (pyatlan.model.custom_metadata.custommetadatadict property)": [[282, "pyatlan.model.custom_metadata.CustomMetadataDict.modified"]], "atlangroup (class in pyatlan.model.group)": [[283, "pyatlan.model.group.AtlanGroup"]], "adminevent (class in pyatlan.model.keycloak_events)": [[284, "pyatlan.model.keycloak_events.AdminEvent"]], "keycloakevent (class in pyatlan.model.keycloak_events)": [[284, "pyatlan.model.keycloak_events.KeycloakEvent"]], "entityfilter (class in pyatlan.model.lineage)": [[285, "pyatlan.model.lineage.EntityFilter"]], "filterlist (class in pyatlan.model.lineage)": [[285, "pyatlan.model.lineage.FilterList"]], "filterlist.condition (class in pyatlan.model.lineage)": [[285, "pyatlan.model.lineage.FilterList.Condition"]], "lineagegraph (class in pyatlan.model.lineage)": [[285, "pyatlan.model.lineage.LineageGraph"]], "lineagelistrequest (class in pyatlan.model.lineage)": [[285, "pyatlan.model.lineage.LineageListRequest"]], "lineagerequest (class in pyatlan.model.lineage)": [[285, "pyatlan.model.lineage.LineageRequest"]], "lineageresponse (class in pyatlan.model.lineage)": [[285, "pyatlan.model.lineage.LineageResponse"]], "atlanrole (class in pyatlan.model.role)": [[286, "pyatlan.model.role.AtlanRole"]], "id (pyatlan.model.role.atlanrole attribute)": [[286, "pyatlan.model.role.AtlanRole.id"]], "atlantagdef (class in pyatlan.model.typedef)": [[287, "pyatlan.model.typedef.AtlanTagDef"]], "attributedef (class in pyatlan.model.typedef)": [[287, "pyatlan.model.typedef.AttributeDef"]], "custommetadatadef (class in pyatlan.model.typedef)": [[287, "pyatlan.model.typedef.CustomMetadataDef"]], "entitydef (class in pyatlan.model.typedef)": [[287, "pyatlan.model.typedef.EntityDef"]], "enumdef (class in pyatlan.model.typedef)": [[287, "pyatlan.model.typedef.EnumDef"]], "relationshipattributedef (class in pyatlan.model.typedef)": [[287, "pyatlan.model.typedef.RelationshipAttributeDef"]], "relationshipdef (class in pyatlan.model.typedef)": [[287, "pyatlan.model.typedef.RelationshipDef"]], "structdef (class in pyatlan.model.typedef)": [[287, "pyatlan.model.typedef.StructDef"]], "typedef (class in pyatlan.model.typedef)": [[287, "pyatlan.model.typedef.TypeDef"]], "typedefresponse (class in pyatlan.model.typedef)": [[287, "pyatlan.model.typedef.TypeDefResponse"]], "applicable_asset_types (pyatlan.model.typedef.attributedef property)": [[287, "pyatlan.model.typedef.AttributeDef.applicable_asset_types"]], "applicable_connections (pyatlan.model.typedef.attributedef property)": [[287, "pyatlan.model.typedef.AttributeDef.applicable_connections"]], "applicable_domain_types (pyatlan.model.typedef.attributedef property)": [[287, "pyatlan.model.typedef.AttributeDef.applicable_domain_types"]], "applicable_domains (pyatlan.model.typedef.attributedef property)": [[287, "pyatlan.model.typedef.AttributeDef.applicable_domains"]], "applicable_entity_types (pyatlan.model.typedef.attributedef property)": [[287, "pyatlan.model.typedef.AttributeDef.applicable_entity_types"]], "applicable_glossaries (pyatlan.model.typedef.attributedef property)": [[287, "pyatlan.model.typedef.AttributeDef.applicable_glossaries"]], "applicable_glossary_types (pyatlan.model.typedef.attributedef property)": [[287, "pyatlan.model.typedef.AttributeDef.applicable_glossary_types"]], "applicable_other_asset_types (pyatlan.model.typedef.attributedef property)": [[287, "pyatlan.model.typedef.AttributeDef.applicable_other_asset_types"]], "create() (pyatlan.model.typedef.enumdef static method)": [[287, "pyatlan.model.typedef.EnumDef.create"]], "get_valid_values() (pyatlan.model.typedef.enumdef method)": [[287, "pyatlan.model.typedef.EnumDef.get_valid_values"]], "update() (pyatlan.model.typedef.enumdef static method)": [[287, "pyatlan.model.typedef.EnumDef.update"]], "atlanuser (class in pyatlan.model.user)": [[288, "pyatlan.model.user.AtlanUser"]]}})